{"config":{"lang":["pt"],"separator":"[\\s\\-]+","pipeline":["stopWordFilter"]},"docs":[{"location":"","title":"Home","text":""},{"location":"#projetos","title":"Projetos","text":""},{"location":"#pbe_242_8001_i_brainbox","title":"PBE_24.2_8001_I_BrainBox","text":""},{"location":"#pbe_242_8001_ii_vascode","title":"PBE_24.2_8001_II_Vascode","text":""},{"location":"#pbe_242_8001_iii_eve-plus","title":"PBE_24.2_8001_III_EVE-Plus","text":""},{"location":"#pbe_242_8001_iv_highlighthub","title":"PBE_24.2_8001_IV_HighlightHub","text":""},{"location":"#pbe_242_8001_v_code4life","title":"PBE_24.2_8001_V_CODE4LIFE","text":""},{"location":"_Disciplina/aulas/","title":"Aulas","text":"Aula Conte\u00fado 01 - 08/08/24\u00a0 \u00a0  Apresenta\u00e7\u00e3o da Disciplina - Processo de Desenvolvimento 02\u00a0- 09/08/24 \u00a0Processo de Desenvolvimento -Do Cascata ao \u00c1gil 03\u00a0- 15/08/24 Configura\u00e7\u00e3o de Ambiente de Desenvolvimento 04\u00a0- 16/08/24  Configura\u00e7\u00e3o reposit\u00f3rio 05\u00a0- 22/03/24  Apresenta\u00e7\u00e3o de Tema do Projeto 06\u00a0- 23/03/24  Principais Funcionalidades do Projeto 07\u00a0- 29/08/24  Elabora\u00e7\u00e3o 5w2h 08\u00a0- 30/08/24 Brainstorm e Mapa Mental 09\u00a0- 05/09/24 Engenharia de Requisitos 10\u00a0- 06/09/24 RUP 11\u00a0- 12/09/24 An\u00e1lise OO e UML 12\u00a0- 13/09/24  An\u00e1lise OO e UML - Diagrama de Casos de Uso 13\u00a0- 19/09/24 Classes 14\u00a0- 20/09/24  Diagrama de Classes UML 15\u00a0- 26/09/24  AP1 - Apresenta\u00e7\u00e3o 16\u00a0- 27/09/24 ---------------------------------------------------------- 17\u00a0- 03/10/24  Python OO (Notebook, Conceito de OO e Python OO 18\u00a0- 04/10/24  Python OO 19\u00a0- 10/10/24  Introdu\u00e7\u00e3o ao Django OO 20\u00a0- 11/10/24  Reuni\u00e3o Iquirium - Django OO 21\u00a0- 18/10/24  Introdu\u00e7\u00e3o SQL - Sqlite OO 22\u00a0- 19/10/24 Funcionalidade"},{"location":"_Disciplina/github/","title":"Versionamento","text":"<p>Git e GitHub \u2013 controle de vers\u00e3o para iniciantes</p> <p>Git e GitHub s\u00e3o duas tecnologias que todo desenvolvedor deve aprender, independentemente de sua \u00e1rea. Se voc\u00ea \u00e9 um desenvolvedor iniciante, pode pensar que esses dois termos significam a mesma coisa, mas s\u00e3o diferentes.</p> <p>Este roteiro ajudar\u00e1 voc\u00ea a entender o que \u00e9 Git e controle de vers\u00e3o, os comandos b\u00e1sicos do Git que voc\u00ea precisa conhecer, como voc\u00ea pode usar seus recursos para aumentar a efici\u00eancia do seu trabalho e como estender esses recursos usando o GitHub.</p> <p>Este roteiro \u00e9 voltado a iniciantes, pois os exemplos ser\u00e3o muito f\u00e1ceis de entender. Tamb\u00e9m ser\u00e1 um tutorial generalizado para que qualquer pessoa possa acompanhar, n\u00e3o importa qual seja sua linguagem de programa\u00e7\u00e3o favorita.</p> <p>Para nosso projeto, faremos uma lista de tarefas escrita em um arquivo de texto (txt). Voc\u00ea ver\u00e1 como podemos usar os recursos do Git para trabalhar e criar uma vers\u00e3o final da lista.</p> <p>Pr\u00e9-requisitos</p> <p>Para concluir este roteiro, voc\u00ea precisar\u00e1 do seguinte:</p> <ul> <li>Uma interface de linha de comando, um terminal.</li> <li>Um editor de texto de sua escolha (usarei o VS Code).</li> <li>Uma conta no GitHub.</li> </ul>"},{"location":"_Disciplina/github/#o-que-e-git","title":"O que \u00e9 Git?","text":"<p>O Git \u00e9 um sistema de controle de vers\u00e3o que permite rastrear as altera\u00e7\u00f5es feitas em seus arquivos ao longo do tempo. Com o Git, voc\u00ea pode reverter para v\u00e1rios estados de seus arquivos (como se usasse uma m\u00e1quina do tempo). Voc\u00ea tamb\u00e9m pode fazer uma c\u00f3pia do arquivo, fazer altera\u00e7\u00f5es nessa c\u00f3pia e mesclar essas altera\u00e7\u00f5es na vers\u00e3o original.</p> <p>Por exemplo, voc\u00ea pode estar trabalhando na p\u00e1gina de destino de um site e descobrir que n\u00e3o gosta da barra de navega\u00e7\u00e3o. Ao mesmo tempo, voc\u00ea pode ficar apreensivo em come\u00e7ar a alterar seus componentes, porque o resultado pode ser pior.</p> <p>Com o Git, voc\u00ea pode criar uma c\u00f3pia id\u00eantica desse arquivo e mexer na barra de navega\u00e7\u00e3o. Ent\u00e3o, quando estiver satisfeito com suas altera\u00e7\u00f5es, poder\u00e1 mesclar a c\u00f3pia ao arquivo original.</p> <p>Voc\u00ea n\u00e3o est\u00e1 limitado a usar o Git apenas para arquivos de c\u00f3digo-fonte \u2013 voc\u00ea tamb\u00e9m pode us\u00e1-lo para acompanhar arquivos de texto ou at\u00e9 imagens. Isso significa que o Git n\u00e3o \u00e9 apenas para desenvolvedores \u2013 qualquer um pode ach\u00e1-lo \u00fatil.</p>"},{"location":"_Disciplina/github/#como-instalar-o-git","title":"Como instalar o Git","text":"<p>Para usar o Git, voc\u00ea precisa instal\u00e1-lo em seu computador. Para fazer isso, voc\u00ea pode baixar a vers\u00e3o mais recente no site da web oficial. Voc\u00ea pode fazer o download para o seu sistema operacional a partir das op\u00e7\u00f5es fornecidas.</p> <p>Voc\u00ea tamb\u00e9m pode instalar o Git usando a linha de comando, mas, como os comandos variam de acordo com cada sistema operacional, vamos nos concentrar na abordagem mais geral.</p>"},{"location":"_Disciplina/github/#como-configurar-o-git","title":"Como configurar o Git","text":"<p>Vou assumir que, neste ponto, voc\u00ea j\u00e1 instalou o Git. Para verificar isso, voc\u00ea pode executar este comando no terminal: git --version. Ele mostra a vers\u00e3o atual instalada no seu PC.</p> <p>A pr\u00f3xima coisa que voc\u00ea precisa fazer \u00e9 definir seu nome de usu\u00e1rio e endere\u00e7o de e-mail. O Git usar\u00e1 essas informa\u00e7\u00f5es para identificar quem fez altera\u00e7\u00f5es espec\u00edficas nos arquivos.</p> <p>Para definir seu nome de usu\u00e1rio, digite e execute estes comandos:</p> <pre><code>gitconfig --global user.name \"SEU_NOME_DE_USUARIO\"**\n\ngitconfig --global user.email \"SEU_E-MAIL\"**.\n</code></pre> <p>Apenas certifique-se de substituir \"SEU_NOME_DE_USUARIO\" e \"SEU_E-MAIL\" pelos valores que voc\u00ea escolher \u2014 ou seja, seu nome de usu\u00e1rio e seu e-mail reais.</p>"},{"location":"_Disciplina/github/#como-criar-e-inicializar-um-projeto-no-git","title":"Como criar e inicializar um projeto no Git","text":"<p>Ap\u00f3s terminarmos de instalar e configurar o Git, agora \u00e9 hora de criar nosso projeto.</p> <p>Criamos uma pasta, no desktop, chamada Git and GitHub tutorial. Usando a linha de comando, navegue at\u00e9 o local do seu novo projeto. Para execute os seguintes comandos:</p> <pre><code>cd desktop\ncd git and github tutorial\n</code></pre> <p>Se voc\u00ea conhece a linha de comando h\u00e1 pouco e ainda est\u00e1 aprendendo a us\u00e1-la para navegar pelo seu PC, sugiro usar o Visual Studio Code da Microsoft. \u00c9 um editor de c\u00f3digo que possui um terminal embutido para executar comandos. Voc\u00ea pode baix\u00e1-lo aqui.</p> <p>Depois de instalar o VS Code, abra seu projeto no editor e abra um novo terminal para seu projeto. Isso apontar\u00e1 automaticamente o terminal/linha de comando para o caminho do seu projeto.</p> <p>Agora, para inicializar um reposit\u00f3rio do seu projeto, basta executar gitinit. Isso dir\u00e1 ao Git para come\u00e7ar a observar seus arquivos a cada altera\u00e7\u00e3o que ocorrer. Esta \u00e9 a apar\u00eancia na linha de comando/terminal:** **</p> <p>gitinit</p> <p>A primeira linha tem informa\u00e7\u00f5es sobre meu PC e o caminho para a pasta. A segunda linha \u00e9 o comando gitinit e a terceira linha \u00e9 a resposta enviada de volta me dizendo que meu reposit\u00f3rio (ou repo) foi inicializado. Ele \u00e9 considerado vazio porque n\u00e3o informamos ao Git quais arquivos rastrear.** **</p> <p>Um reposit\u00f3rio \u00e9 apenas outra maneira de definir um projeto que est\u00e1 sendo monitorado/rastreado pelo Git.</p>"},{"location":"_Disciplina/github/#arquivos-de-projeto-no-git","title":"Arquivos de projeto no Git","text":"<p>Criamos apenas um arquivo chamado todo.txt. Essa \u00e9 a apar\u00eancia do arquivo:** **</p> <p>**     MINHA LISTA DE TAREFAS**</p> <ol> <li>Escrever um artigo.</li> <li>Programar.</li> <li>Estudar pelos livros.</li> <li>Chegar nas aulas a tempo.</li> <li>Visitar minha tia.</li> <li>Me candidatar a trabalhos remotos.</li> </ol> <pre><code>Antes de continuarmos aprendendo outros comandos do Git, vamos falar sobre o Github.\n</code></pre>"},{"location":"_Disciplina/github/#o-que-e-o-github","title":"O que \u00e9 o GitHub?","text":"<p>O GitHub \u00e9 um servi\u00e7o de hospedagem on-line para reposit\u00f3rios do Git. Imagine trabalhar em um projeto em casa e, enquanto estiver fora \u2013 talvez na casa de um amigo, de repente \u2013 se dar conta da solu\u00e7\u00e3o para um erro de c\u00f3digo que o deixou inquieto por dias.</p> <p>Voc\u00ea n\u00e3o pode fazer essas altera\u00e7\u00f5es porque seu PC n\u00e3o est\u00e1 com voc\u00ea. Se, contudo, voc\u00ea tiver seu projeto hospedado no GitHub, poder\u00e1 acessar e baixar esse projeto com um comando em qualquer computador ao qual tenha acesso. Em seguida, voc\u00ea pode fazer suas altera\u00e7\u00f5es e enviar a vers\u00e3o mais recente de volta ao GitHub.</p> <p>Em resumo, o GitHub permite que voc\u00ea armazene seu reposit\u00f3rio em sua plataforma. Outro recurso incr\u00edvel que vem com o GitHub \u00e9 a capacidade de colaborar com outros desenvolvedores de qualquer local.</p> <p>Agora que criamos e inicializamos nosso projeto localmente, vamos envi\u00e1-lo para o GitHub.</p> <p>Se voc\u00ea \u00e9 iniciante, encontrar\u00e1 alguns termos novos como push, commit, adde assim por diante \u2013 mas n\u00e3o se deixe assustar com eles. Com alguma pr\u00e1tica, voc\u00ea ser\u00e1 capaz de lembrar desses termos e do que eles fazem.</p>"},{"location":"_Disciplina/github/#como-enviar-um-repositorio-para-o-github","title":"Como enviar um reposit\u00f3rio para o Github**","text":"<p>Dividimos esta se\u00e7\u00e3o em etapas para ajud\u00e1-lo a entender o processo com mais clareza.</p> <p>Passo 1 \u2013 Crie uma conta no GitHub</p> <pre><code>Para poder usar o GitHub, ter\u00e1 de criar uma conta primeiramente. Voc\u00ea pode fazer isso no[site da web](https://github.com/) do GitHub.\n</code></pre> <p>Passo 2 \u2013 Crie um reposit\u00f3rio</p> <pre><code>Voc\u00ea pode clicar no s\u00edmbolo + no canto superior direito da p\u00e1gina e escolher \"New repository\" (Novo reposit\u00f3rio). D\u00ea um nome ao seu reposit\u00f3rio, role para baixo e clique no bot\u00e3o \"Createrepository\"  (Criar reposit\u00f3rio).\n</code></pre> <p>Passo 3 \u2013 Adicionar e confirmar arquivos</p> <pre><code>Antes de \"adicionar\" e \"confirmar\" nossos arquivos, voc\u00ea precisa entender os est\u00e1gios de um arquivo que est\u00e1 sendo rastreado peloGit.\n</code></pre> <p>Estado confirmado (committed)</p> <p>Um arquivo est\u00e1 no estado confirmado quando todas as altera\u00e7\u00f5es feitas no arquivo foram salvas no reposit\u00f3rio local. Os arquivos no est\u00e1gio confirmado s\u00e3o arquivos prontos para serem enviados para o reposit\u00f3rio remoto (no GitHub).</p> <p>Estado modificado (modified)</p> <p>Um arquivo no estado modificado tem algumas altera\u00e7\u00f5es feitas nele, mas ainda n\u00e3o foi salvo. Isso significa que o estado do arquivo foi alterado de seu estado anterior no estado confirmado.</p> <p>Estado preparado (staged)</p> <p>Um arquivo no estado preparado significa que est\u00e1 pronto para ser confirmado. Nesse estado, todas as altera\u00e7\u00f5es necess\u00e1rias foram feitas. Portanto, o pr\u00f3ximo passo \u00e9 mover o arquivo para o estado de confirma\u00e7\u00e3o.</p> <p>Voc\u00ea pode entender isso melhor imaginando o Git como uma c\u00e2mera. A c\u00e2mera s\u00f3 tirar\u00e1 um instant\u00e2neo quando o arquivo atingir o estado de confirma\u00e7\u00e3o. Ap\u00f3s este estado, a c\u00e2mera come\u00e7a a comparar as altera\u00e7\u00f5es feitas no mesmo arquivo com o \u00faltimo instant\u00e2neo (este \u00e9 o estado modificado). Quando as altera\u00e7\u00f5es necess\u00e1rias forem feitas, o arquivo \u00e9 preparado e movido para o estado de confirma\u00e7\u00e3o para um novo instant\u00e2neo.</p> <p>Isso pode ser muita informa\u00e7\u00e3o para absorver no momento, mas n\u00e3o desanime \u2013 fica mais f\u00e1cil com a pr\u00e1tica.</p>"},{"location":"_Disciplina/github/#como-adicionar-arquivos-ao-git","title":"Como adicionar arquivos ao Git","text":"<p>Quando inicializamos nosso projeto, o arquivo n\u00e3o estava sendo rastreado pelo Git. Para isso, usamos o comando gitadd . O ponto que vem depois de add representa todos os arquivos que existem no reposit\u00f3rio. Se voc\u00ea quiser adicionar um arquivo espec\u00edfico (por exemplo, um arquivo chamado about.txt), use gitadd about.txt.</p> <p>Agora, nosso arquivo est\u00e1 no estado preparado. Voc\u00ea n\u00e3o receber\u00e1 uma resposta ap\u00f3s este comando, mas, para saber em que estado seu arquivo est\u00e1, voc\u00ea pode executar o comando git status. ** **</p>"},{"location":"_Disciplina/github/#como-confirmar-commit-arquivos-no-git","title":"Como confirmar (commit) arquivos no Git","text":"<p>O pr\u00f3ximo estado de um arquivo ap\u00f3s o estado preparado \u00e9 o estado confirmado. Para confirmar nosso arquivo, usamos o comando gitcommit -m \"firstcommit\"</p> <p>A primeira parte do comando gitcommit diz ao Git que todos os arquivos preparados est\u00e3o prontos para serem confirmados. Ent\u00e3o, \u00e9 hora de tirar um instant\u00e2neo. A segunda parte, -m \"firstcommit\", \u00e9 a mensagem de confirma\u00e7\u00e3o. -m \u00e9 uma abrevia\u00e7\u00e3o de mensagem enquanto o texto entre aspas \u00e9 a mensagem de confirma\u00e7\u00e3o (que pode ser a mensagem que voc\u00ea quiser e no idioma que quiser).</p> <p>Depois de executar este comando, voc\u00ea deve obter uma resposta semelhante a esta:</p> <p>gitcommit</p> <p>Agora, nosso arquivo est\u00e1 no estado confirmado.</p> <p>Passo 4 \u2013 Envie o reposit\u00f3rio para o GitHub** **</p> <p>Depois de criar o reposit\u00f3rio, voc\u00ea deve ser redirecionado para uma p\u00e1gina que informa como criar um reposit\u00f3rio localmente ou enviar um j\u00e1 existente.</p> <p>No nosso caso, o projeto j\u00e1 existe localmente, ent\u00e3o usaremos comandos na se\u00e7\u00e3o \"\u2026 ou enviar um reposit\u00f3rio existente a partir da linha de comando\". Estes s\u00e3o os comandos:</p> <pre><code>gitremoteaddorigin** https://github.com/ihechikara/git-and-github-tutorial.git**\n\ngitbranch** -M main**\n\ngit push -u origin main** **\n</code></pre> <p>O primeiro comando, gitremoteaddoriginhttps://github.com/ihechikara/git-and-github-tutorial.git, cria uma conex\u00e3o entre seu reposit\u00f3rio local e o reposit\u00f3rio remoto no GitHub.** **</p> <p>O URL do seu projeto remoto deve ser totalmente diferente do anterior. Portanto, para acompanhar, certifique-se de seguir as etapas e trabalhar com seu pr\u00f3prio reposit\u00f3rio remoto. Normalmente, voc\u00ea n\u00e3o receber\u00e1 uma resposta ap\u00f3s executar este comando, mas certifique-se de ter uma conex\u00e3o com a internet.</p> <p>O segundo comando, gitbranch -M main, altera o nome do seu branch principal para \"main\". O branch padr\u00e3o pode ser criada como \"master\", mas \"main\" \u00e9 o nome padr\u00e3o para este reposit\u00f3rio agora. Geralmente, n\u00e3o h\u00e1 resposta aqui.** **</p> <p>O \u00faltimo comando, gitpush -u originmain, envia seu reposit\u00f3rio do seu dispositivo local para o GitHub. Voc\u00ea deve obter uma resposta semelhante a esta:</p> <p>gitpush</p> <p>Para ajud\u00e1-lo a aprofundar sua compreens\u00e3o dos est\u00e1gios do arquivo, farei altera\u00e7\u00f5es no arquivo e, em seguida, enviarei a nova vers\u00e3o para o GitHub.</p> <p>Lembre-se de que nosso arquivo agora est\u00e1 no estado confirmado. Vamos fazer altera\u00e7\u00f5es no arquivo e anotar os estados.</p> <p>Vou adicionar uma nova tarefa \u00e0 lista de tarefas:</p> <p>MINHA LISTA DE TAREFAS</p> <ol> <li>Escrever um artigo.</li> <li>Programar.</li> <li>Estudar pelos livros.</li> <li>Chegar nas aulas a tempo.</li> <li>Visitar minha tia.</li> </ol> <p>**6. Me candidatar a trabalhos remotos. **</p> <ol> <li>Praticar programa\u00e7\u00e3o</li> </ol> <p>Depois de adicionar a nova tarefa, execute o comando git status. Isto \u00e9 o que voc\u00ea dever\u00e1 ver:** **</p> <p>git status</p> <p>Depois de fazer altera\u00e7\u00f5es no arquivo, ele foi movido para o estado modificado, mas ainda n\u00e3o est\u00e1 preparado para confirma\u00e7\u00e3o. Ent\u00e3o, voc\u00ea ainda n\u00e3o pode envi\u00e1-lo para o GitHub. O Git n\u00e3o tirou um instant\u00e2neo final desse estado atual, pois est\u00e1 apenas comparando as altera\u00e7\u00f5es que fizemos agora com o \u00faltimo instant\u00e2neo.</p> <p>Agora vamos adicionar (preparar) este arquivo e, em seguida, confirm\u00e1-lo e envi\u00e1-lo. Isto \u00e9 igual ao que fizemos na \u00faltima se\u00e7\u00e3o.</p> <p>Primeiro, adicionamos o arquivo usando gitadd ., que adiciona todos os arquivos na pasta (um \u00fanico arquivo, no nosso caso). Em seguida, confirmamos o arquivo executando gitcommit -m \"added new task\" (a mensagem significa \"nova tarefa adicionada\") seguido de gitpush -u originmain.</p> <p>Essas s\u00e3o as tr\u00eas etapas para enviar seus arquivos modificados para o GitHub. Voc\u00ea adiciona, confirma e, em seguida, envia. Espero que agora voc\u00ea entenda os est\u00e1gios do arquivo e os comandos associados a eles.</p>"},{"location":"_Disciplina/github/#como-usar-branches-no-git","title":"**Como usar branches no Git **","text":"<p>Com branches, voc\u00ea pode criar uma c\u00f3pia de um arquivo no qual gostaria de trabalhar sem estragar a c\u00f3pia original. Voc\u00ea pode mesclar essas altera\u00e7\u00f5es com a c\u00f3pia original ou apenas deixar o branch permanecer independente.</p> <p>Antes de come\u00e7armos a usar branches, quero mostrar uma representa\u00e7\u00e3o visual do nosso reposit\u00f3rio, que se parece com isso:</p> <p>branchmain</p> <p>A imagem acima mostra nosso branch principal com os dois \u00faltimos commits (o primeiro commit e o commit da nova tarefa adicionada).</p> <p>Neste ponto, quero adicionar mais tarefas \u00e0 lista, mas ainda n\u00e3o tenho certeza se as quero na minha lista principal. Ent\u00e3o, vou criar um outro branch chamado \u202ftest para ver como ficaria minha lista com mais tarefas inclu\u00eddas.</p> <p>Para criar um outro branch, execute este comando: git checkout -b test. Vamos dividir isso em partes e explicar.</p> <p>checkout diz ao Git que deve mudar para um outro branch. -bdiz ao Git para criar esse outro branch. test\u00e9 o nome do branch a ser criado e alterado. Aqui est\u00e1 a resposta que voc\u00ea deve obter:</p> <p>git checkout -b</p> <p>Agora que criamos um outro branch, \u00e9 assim que nosso reposit\u00f3rio ficar\u00e1:</p> <p>gitbranch</p> <p>Criamos o outro branch a partir do estado do nosso \u00faltimo commit. Vamos agora adicionar mais tarefas a esse novo branch.</p> <p>MINHA LISTA DE TAREFAS</p> <p>1.Escrever um artigo.** **</p> <p>2.Programar.</p> <p>3.Estudar pelos livros.** **</p> <p>4.Chegar nas aulas a tempo.** **</p> <p>5.Visitar minha tia.** **</p> <p>6.Me candidatar a trabalhos remotos.** **</p> <p>7.Praticar programa\u00e7\u00e3o</p> <p>8.Completar a tarefa de est\u00e1gio.** **</p> <p>9.Praticar aberturas do xadrez.** **</p> <p>10.Resolver quebra-cabe\u00e7asdo xadrez.** **</p> <p>11.Verificar o cronograma dos testes. \u202f** **</p> <p>**    Adicionamos quatro novas tarefas. Para mesclar o novo estado com o branchmain, voc\u00ea deve primeiro preparar e confirmar esse branch. N\u00e3o entrarei em detalhes sobre o assunto, pois fizemos isso duas vezes na \u00faltima se\u00e7\u00e3o. **</p> <p>Voc\u00ea deve tentar fazer isso sozinho para entender como funciona. Como dica, adicione o arquivo e, em seguida, confirme com uma mensagem (consulte a se\u00e7\u00e3o anterior para obter detalhes de como fazer isso).</p> <p>Depois de confirmar seu branchtest, volte para o branchmainexecutando este comando: git checkout main.</p> <p>Voc\u00ea notou que n\u00e3o adicionamos o -b ? Isso ocorre porque n\u00e3o estamos criando um outro branch, mas mudando para um branch existente. Voc\u00ea pode verificar todos os branches que existem em seu reposit\u00f3rio executando o comando gitbranch ** **</p> <p>Agora, podemos mesclar as altera\u00e7\u00f5es que fizemos no branchtestno branchmainexecutando git merge test. Neste ponto, voc\u00ea ver\u00e1 todas as altera\u00e7\u00f5es feitas no branchtestrefletidas no branchmain. Voc\u00ea tamb\u00e9m deve receber uma resposta semelhante a esta:</p> <p>git merge</p> <p>Aqui est\u00e1 uma representa\u00e7\u00e3o visual do nosso reposit\u00f3rio:</p> <p>git merge</p> <p>Se voc\u00ea continuar a enviar seu reposit\u00f3rio para o GitHub, ver\u00e1 que o branchtest n\u00e3o ser\u00e1 enviado. Ele permanecer\u00e1 apenas em seu reposit\u00f3rio local. Se voc\u00ea quiser enviar seu branchtest, mude para ele usando git checkout test e execute o comando gitpush -u origin test.</p>"},{"location":"_Disciplina/github/#como-extrair-um-repositorio-no-git","title":"**Como extrair um reposit\u00f3rio no Git **","text":"<p>Fazer pullno Git significa clonar o estado atual de um reposit\u00f3rio remoto em seu computador/reposit\u00f3rio. Isso \u00e9 \u00fatil quando voc\u00ea deseja trabalhar em seu reposit\u00f3rio de um computador diferente ou quando est\u00e1 contribuindo para um projeto de c\u00f3digo aberto on-line.</p> <p>Para testar isso, n\u00e3o se preocupe em mudar para um novo computador. Basta executar cd .. para sair do diret\u00f3rio atual e voltar uma etapa. No meu caso, naveguei de volta para a minha \u00e1rea de trabalho.** **</p> <p>V\u00e1 para o GitHub e, na p\u00e1gina principal do seu reposit\u00f3rio, voc\u00ea ver\u00e1 um bot\u00e3o verde que diz \"Code\". Ao clicar no bot\u00e3o, voc\u00ea dever\u00e1 ver algumas op\u00e7\u00f5es em um menu suspenso. V\u00e1 em frente e copie o URL no formato HTTPS.</p> <p>Depois disso, execute git clone SEU_URL_DE_HTTPS. Este comando puxa o reposit\u00f3rio remoto para seu computador local em uma pasta chamada git-and-git-tutorial. Isto \u00e9 o que voc\u00ea dever\u00e1 ver em seu terminal:** **</p> <p>git clone</p>"},{"location":"_Disciplina/github/#conclusao","title":"Conclus\u00e3o","text":"<p>Este artigo abordou os comandos b\u00e1sicos que ajudar\u00e3o voc\u00ea a come\u00e7ar a usar o Git. Tamb\u00e9m come\u00e7amos a aprender a usar o GitHub.</p> <p>Se voc\u00ea seguiu at\u00e9 este ponto, parab\u00e9ns. Voc\u00ea est\u00e1 pronto para seguir em frente. Agora, voc\u00ea pode usar o Git em seus projetos, independentemente da linguagem de programa\u00e7\u00e3o que estiver usando.</p> <p>Voc\u00ea deve saber que esses n\u00e3o s\u00e3o todos os comandos que existem no Git \u2013 portanto, sinta-se \u00e0 vontade para fazer mais pesquisas para aprender mais comandos e seus usos. Este\u00e9 um \u00f3timo lugar para ver uma lista detalhada de mais comandos do Git (em ingl\u00eas).** **</p>"},{"location":"_Disciplina/github/#links","title":"Links","text":"<p>git - guia pr\u00e1tico** **</p> <p>** **https://rogerdudler.github.io/git-guide/index.pt_BR.html</p> <p>**--fast-version-control **</p> <p>https://git-scm.com/book/pt-br/v2</p> <p>Interactive, Visual Git</p> <p>https://the-turing-way.netlify.app/reproducible-research/vcs/vcs-git-interactive</p> <p>LearnGitBranching!** **</p> <p>https://learngitbranching.js.org/?locale=pt_BR</p> <p>UnderstandingGitthroughimages** **</p> <p>https://dev.to/nopenoshishi/understanding-git-through-images-4an1</p> <p>A Visual GitReference</p> <p>https://marklodato.github.io/visual-git-guide/index-en.html</p> <p>A Grip OnGit</p> <p>https://agripongit.vincenttunru.com/</p> <p>VisualizingGitConceptswith D3</p> <p>https://onlywei.github.io/explain-git-with-d3/#rebase</p> <p>Como criar um reposit\u00f3rio</p> <p>https://www.atlassian.com/br/git/tutorials/setting-up-a-repository</p>"},{"location":"_Disciplina/mkdocs/","title":"MkDocs","text":""},{"location":"_Disciplina/mkdocs/#commands","title":"Commands","text":"<p>*<code>mkdocs new [dir-name]</code> - Create a new project.</p> <p>*<code>mkdocs serve</code> - Start the live-reloading docs server.</p> <p>*<code>mkdocs build</code> - Build the documentation site.</p> <p>*<code>mkdocs -h</code> - Print help message and exit.</p> <p>*mkdocs gh-deploy - Deploy site on github.</p>"},{"location":"_Disciplina/mkdocs/#project-layout","title":"Project layout","text":"<pre><code>mkdocs.yml    # The configuration file.\n\ndocs/\n\nindex.md  # The documentation homepage.\n\n...       # Other markdown pages, images and other files.\n</code></pre>"},{"location":"_Disciplina/notebook/","title":"Notebook Jupyter","text":"In\u00a0[1]: Copied! <pre>a = 5\nb = 10\nc = a+b\nc\n</pre> a = 5 b = 10 c = a+b c Out[1]: <pre>15</pre> In\u00a0[2]: Copied! <pre>import plotly.express as px\n</pre>   import plotly.express as px  In\u00a0[3]: Copied! <pre>df = px.data.iris()\nfig = px.scatter(df, x=\"sepal_width\", y=\"sepal_length\")\nfig.show()\n</pre> df = px.data.iris() fig = px.scatter(df, x=\"sepal_width\", y=\"sepal_length\") fig.show()"},{"location":"_Disciplina/notebook/#notebook-jupyter","title":"Notebook Jupyter\u00b6","text":""},{"location":"_Disciplina/Code/DemoDjango/manage/","title":"Manage","text":"In\u00a0[1]: Copied! <pre>\"\"\"Django's command-line utility for administrative tasks.\"\"\"\nimport os\nimport sys\n</pre> \"\"\"Django's command-line utility for administrative tasks.\"\"\" import os import sys In\u00a0[2]: Copied! <pre>def main():\n    \"\"\"Run administrative tasks.\"\"\"\n    os.environ.setdefault('DJANGO_SETTINGS_MODULE', 'project.settings')\n    try:\n        from django.core.management import execute_from_command_line\n    except ImportError as exc:\n        raise ImportError(\n            \"Couldn't import Django. Are you sure it's installed and \"\n            \"available on your PYTHONPATH environment variable? Did you \"\n            \"forget to activate a virtual environment?\"\n        ) from exc\n    execute_from_command_line(sys.argv)\n</pre> def main():     \"\"\"Run administrative tasks.\"\"\"     os.environ.setdefault('DJANGO_SETTINGS_MODULE', 'project.settings')     try:         from django.core.management import execute_from_command_line     except ImportError as exc:         raise ImportError(             \"Couldn't import Django. Are you sure it's installed and \"             \"available on your PYTHONPATH environment variable? Did you \"             \"forget to activate a virtual environment?\"         ) from exc     execute_from_command_line(sys.argv) In\u00a0[3]: Copied! <pre>if __name__ == '__main__':\n    main()\n</pre> if __name__ == '__main__':     main() <pre>\n---------------------------------------------------------------------------\nKeyError                                  Traceback (most recent call last)\nFile C:\\Python310\\lib\\site-packages\\django\\core\\management\\__init__.py:255, in ManagementUtility.fetch_command(self, subcommand)\n    254 try:\n--&gt; 255     app_name = commands[subcommand]\n    256 except KeyError:\n\nKeyError: '-f'\n\nDuring handling of the above exception, another exception occurred:\n\nModuleNotFoundError                       Traceback (most recent call last)\nCell In[3], line 2\n      1 if __name__ == '__main__':\n----&gt; 2     main()\n\nCell In[2], line 12, in main()\n      6 except ImportError as exc:\n      7     raise ImportError(\n      8         \"Couldn't import Django. Are you sure it's installed and \"\n      9         \"available on your PYTHONPATH environment variable? Did you \"\n     10         \"forget to activate a virtual environment?\"\n     11     ) from exc\n---&gt; 12 execute_from_command_line(sys.argv)\n\nFile C:\\Python310\\lib\\site-packages\\django\\core\\management\\__init__.py:442, in execute_from_command_line(argv)\n    440 \"\"\"Run a ManagementUtility.\"\"\"\n    441 utility = ManagementUtility(argv)\n--&gt; 442 utility.execute()\n\nFile C:\\Python310\\lib\\site-packages\\django\\core\\management\\__init__.py:436, in ManagementUtility.execute(self)\n    434     sys.stdout.write(self.main_help_text() + \"\\n\")\n    435 else:\n--&gt; 436     self.fetch_command(subcommand).run_from_argv(self.argv)\n\nFile C:\\Python310\\lib\\site-packages\\django\\core\\management\\__init__.py:262, in ManagementUtility.fetch_command(self, subcommand)\n    256 except KeyError:\n    257     if os.environ.get(\"DJANGO_SETTINGS_MODULE\"):\n    258         # If `subcommand` is missing due to misconfigured settings, the\n    259         # following line will retrigger an ImproperlyConfigured exception\n    260         # (get_commands() swallows the original one) so the user is\n    261         # informed about it.\n--&gt; 262         settings.INSTALLED_APPS\n    263     elif not settings.configured:\n    264         sys.stderr.write(\"No Django settings specified.\\n\")\n\nFile C:\\Python310\\lib\\site-packages\\django\\conf\\__init__.py:81, in LazySettings.__getattr__(self, name)\n     79 \"\"\"Return the value of a setting and cache it in self.__dict__.\"\"\"\n     80 if (_wrapped := self._wrapped) is empty:\n---&gt; 81     self._setup(name)\n     82     _wrapped = self._wrapped\n     83 val = getattr(_wrapped, name)\n\nFile C:\\Python310\\lib\\site-packages\\django\\conf\\__init__.py:68, in LazySettings._setup(self, name)\n     60     desc = (\"setting %s\" % name) if name else \"settings\"\n     61     raise ImproperlyConfigured(\n     62         \"Requested %s, but settings are not configured. \"\n     63         \"You must either define the environment variable %s \"\n     64         \"or call settings.configure() before accessing settings.\"\n     65         % (desc, ENVIRONMENT_VARIABLE)\n     66     )\n---&gt; 68 self._wrapped = Settings(settings_module)\n\nFile C:\\Python310\\lib\\site-packages\\django\\conf\\__init__.py:166, in Settings.__init__(self, settings_module)\n    163 # store the settings module in case someone later cares\n    164 self.SETTINGS_MODULE = settings_module\n--&gt; 166 mod = importlib.import_module(self.SETTINGS_MODULE)\n    168 tuple_settings = (\n    169     \"ALLOWED_HOSTS\",\n    170     \"INSTALLED_APPS\",\n   (...)\n    173     \"SECRET_KEY_FALLBACKS\",\n    174 )\n    175 self._explicit_settings = set()\n\nFile C:\\Python310\\lib\\importlib\\__init__.py:126, in import_module(name, package)\n    124             break\n    125         level += 1\n--&gt; 126 return _bootstrap._gcd_import(name[level:], package, level)\n\nFile &lt;frozen importlib._bootstrap&gt;:1050, in _gcd_import(name, package, level)\n\nFile &lt;frozen importlib._bootstrap&gt;:1027, in _find_and_load(name, import_)\n\nFile &lt;frozen importlib._bootstrap&gt;:992, in _find_and_load_unlocked(name, import_)\n\nFile &lt;frozen importlib._bootstrap&gt;:241, in _call_with_frames_removed(f, *args, **kwds)\n\nFile &lt;frozen importlib._bootstrap&gt;:1050, in _gcd_import(name, package, level)\n\nFile &lt;frozen importlib._bootstrap&gt;:1027, in _find_and_load(name, import_)\n\nFile &lt;frozen importlib._bootstrap&gt;:1004, in _find_and_load_unlocked(name, import_)\n\nModuleNotFoundError: No module named 'project'</pre>"},{"location":"_Disciplina/Code/DemoDjango/app/__init__/","title":"init","text":""},{"location":"_Disciplina/Code/DemoDjango/app/admin/","title":"Admin","text":"In\u00a0[1]: Copied! <pre>from django.contrib import admin\nfrom .models import Employee,Department\n</pre> from django.contrib import admin from .models import Employee,Department <pre>\n---------------------------------------------------------------------------\nImportError                               Traceback (most recent call last)\nCell In[1], line 2\n      1 from django.contrib import admin\n----&gt; 2 from .models import Employee,Department\n\nImportError: attempted relative import with no known parent package</pre> In\u00a0[2]: Copied! <pre>admin.site.register(Employee) \nadmin.site.register(Department) # Register your models here.\n</pre> admin.site.register(Employee)  admin.site.register(Department) # Register your models here. <pre>\n---------------------------------------------------------------------------\nImproperlyConfigured                      Traceback (most recent call last)\nCell In[2], line 1\n----&gt; 1 admin.site.register(Employee) \n      2 admin.site.register(Department) # Register your models here.\n\nFile C:\\Python310\\lib\\site-packages\\django\\utils\\functional.py:251, in new_method_proxy.&lt;locals&gt;.inner(self, *args)\n    249 def inner(self, *args):\n    250     if (_wrapped := self._wrapped) is empty:\n--&gt; 251         self._setup()\n    252         _wrapped = self._wrapped\n    253     return func(_wrapped, *args)\n\nFile C:\\Python310\\lib\\site-packages\\django\\contrib\\admin\\sites.py:605, in DefaultAdminSite._setup(self)\n    604 def _setup(self):\n--&gt; 605     AdminSiteClass = import_string(apps.get_app_config(\"admin\").default_site)\n    606     self._wrapped = AdminSiteClass()\n\nFile C:\\Python310\\lib\\site-packages\\django\\apps\\registry.py:156, in Apps.get_app_config(self, app_label)\n    150 def get_app_config(self, app_label):\n    151     \"\"\"\n    152     Import applications and returns an app config for the given label.\n    153 \n    154     Raise LookupError if no application exists with this label.\n    155     \"\"\"\n--&gt; 156     self.check_apps_ready()\n    157     try:\n    158         return self.app_configs[app_label]\n\nFile C:\\Python310\\lib\\site-packages\\django\\apps\\registry.py:137, in Apps.check_apps_ready(self)\n    132 from django.conf import settings\n    134 # If \"not ready\" is due to unconfigured settings, accessing\n    135 # INSTALLED_APPS raises a more helpful ImproperlyConfigured\n    136 # exception.\n--&gt; 137 settings.INSTALLED_APPS\n    138 raise AppRegistryNotReady(\"Apps aren't loaded yet.\")\n\nFile C:\\Python310\\lib\\site-packages\\django\\conf\\__init__.py:81, in LazySettings.__getattr__(self, name)\n     79 \"\"\"Return the value of a setting and cache it in self.__dict__.\"\"\"\n     80 if (_wrapped := self._wrapped) is empty:\n---&gt; 81     self._setup(name)\n     82     _wrapped = self._wrapped\n     83 val = getattr(_wrapped, name)\n\nFile C:\\Python310\\lib\\site-packages\\django\\conf\\__init__.py:61, in LazySettings._setup(self, name)\n     59 if not settings_module:\n     60     desc = (\"setting %s\" % name) if name else \"settings\"\n---&gt; 61     raise ImproperlyConfigured(\n     62         \"Requested %s, but settings are not configured. \"\n     63         \"You must either define the environment variable %s \"\n     64         \"or call settings.configure() before accessing settings.\"\n     65         % (desc, ENVIRONMENT_VARIABLE)\n     66     )\n     68 self._wrapped = Settings(settings_module)\n\nImproperlyConfigured: Requested setting INSTALLED_APPS, but settings are not configured. You must either define the environment variable DJANGO_SETTINGS_MODULE or call settings.configure() before accessing settings.</pre>"},{"location":"_Disciplina/Code/DemoDjango/app/apps/","title":"Apps","text":"In\u00a0[1]: Copied! <pre>from django.apps import AppConfig\n</pre> from django.apps import AppConfig In\u00a0[2]: Copied! <pre>class AppConfig(AppConfig):\n    default_auto_field = 'django.db.models.BigAutoField'\n    name = 'app'\n</pre> class AppConfig(AppConfig):     default_auto_field = 'django.db.models.BigAutoField'     name = 'app'"},{"location":"_Disciplina/Code/DemoDjango/app/models/","title":"Models","text":"In\u00a0[1]: Copied! <pre>from django.db import models\n</pre> from django.db import models In\u00a0[2]: Copied! <pre>class Department(models.Model):\n    name = models.CharField(max_length=100)\n\n    def __str__(self):\n        return self.name\n</pre> class Department(models.Model):     name = models.CharField(max_length=100)      def __str__(self):         return self.name <pre>\n---------------------------------------------------------------------------\nImproperlyConfigured                      Traceback (most recent call last)\nCell In[2], line 1\n----&gt; 1 class Department(models.Model):\n      2     name = models.CharField(max_length=100)\n      4     def __str__(self):\n\nFile C:\\Python310\\lib\\site-packages\\django\\db\\models\\base.py:129, in ModelBase.__new__(cls, name, bases, attrs, **kwargs)\n    126 app_label = None\n    128 # Look for an application configuration to attach the model to.\n--&gt; 129 app_config = apps.get_containing_app_config(module)\n    131 if getattr(meta, \"app_label\", None) is None:\n    132     if app_config is None:\n\nFile C:\\Python310\\lib\\site-packages\\django\\apps\\registry.py:260, in Apps.get_containing_app_config(self, object_name)\n    251 def get_containing_app_config(self, object_name):\n    252     \"\"\"\n    253     Look for an app config containing a given object.\n    254 \n   (...)\n    258     Return None if the object isn't in any registered app config.\n    259     \"\"\"\n--&gt; 260     self.check_apps_ready()\n    261     candidates = []\n    262     for app_config in self.app_configs.values():\n\nFile C:\\Python310\\lib\\site-packages\\django\\apps\\registry.py:137, in Apps.check_apps_ready(self)\n    132 from django.conf import settings\n    134 # If \"not ready\" is due to unconfigured settings, accessing\n    135 # INSTALLED_APPS raises a more helpful ImproperlyConfigured\n    136 # exception.\n--&gt; 137 settings.INSTALLED_APPS\n    138 raise AppRegistryNotReady(\"Apps aren't loaded yet.\")\n\nFile C:\\Python310\\lib\\site-packages\\django\\conf\\__init__.py:81, in LazySettings.__getattr__(self, name)\n     79 \"\"\"Return the value of a setting and cache it in self.__dict__.\"\"\"\n     80 if (_wrapped := self._wrapped) is empty:\n---&gt; 81     self._setup(name)\n     82     _wrapped = self._wrapped\n     83 val = getattr(_wrapped, name)\n\nFile C:\\Python310\\lib\\site-packages\\django\\conf\\__init__.py:61, in LazySettings._setup(self, name)\n     59 if not settings_module:\n     60     desc = (\"setting %s\" % name) if name else \"settings\"\n---&gt; 61     raise ImproperlyConfigured(\n     62         \"Requested %s, but settings are not configured. \"\n     63         \"You must either define the environment variable %s \"\n     64         \"or call settings.configure() before accessing settings.\"\n     65         % (desc, ENVIRONMENT_VARIABLE)\n     66     )\n     68 self._wrapped = Settings(settings_module)\n\nImproperlyConfigured: Requested setting INSTALLED_APPS, but settings are not configured. You must either define the environment variable DJANGO_SETTINGS_MODULE or call settings.configure() before accessing settings.</pre> In\u00a0[3]: Copied! <pre>class Employee(models.Model):\n    name = models.CharField(max_length=100)\n    email = models.EmailField()\n    role = models.CharField(max_length=100)\n    department = models.ForeignKey(Department, on_delete=models.CASCADE)\n\n    def __str__(self):\n        return self.name\n</pre> class Employee(models.Model):     name = models.CharField(max_length=100)     email = models.EmailField()     role = models.CharField(max_length=100)     department = models.ForeignKey(Department, on_delete=models.CASCADE)      def __str__(self):         return self.name <pre>\n---------------------------------------------------------------------------\nNameError                                 Traceback (most recent call last)\nCell In[3], line 1\n----&gt; 1 class Employee(models.Model):\n      2     name = models.CharField(max_length=100)\n      3     email = models.EmailField()\n\nCell In[3], line 5, in Employee()\n      3 email = models.EmailField()\n      4 role = models.CharField(max_length=100)\n----&gt; 5 department = models.ForeignKey(Department, on_delete=models.CASCADE)\n      7 def __str__(self):\n      8     return self.name\n\nNameError: name 'Department' is not defined</pre> In\u00a0[\u00a0]: Copied! <pre>\n</pre>"},{"location":"_Disciplina/Code/DemoDjango/app/tests/","title":"Tests","text":"In\u00a0[1]: Copied! <pre>from django.test import TestCase\n</pre> from django.test import TestCase <p>Create your tests here.</p>"},{"location":"_Disciplina/Code/DemoDjango/app/views/","title":"Views","text":"In\u00a0[1]: Copied! <pre>from django.shortcuts import render\n</pre> from django.shortcuts import render <p>Create your views here.</p>"},{"location":"_Disciplina/Code/DemoDjango/app/migrations/0001_initial/","title":"0001 initial","text":"<p>Generated by Django 5.1.2 on 2024-10-18 13:33</p> In\u00a0[1]: Copied! <pre>from django.db import migrations, models\n</pre> from django.db import migrations, models In\u00a0[2]: Copied! <pre>class Migration(migrations.Migration):\n\n    initial = True\n\n    dependencies = [\n    ]\n\n    operations = [\n        migrations.CreateModel(\n            name='Employee',\n            fields=[\n                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),\n                ('name', models.CharField(max_length=100)),\n                ('email', models.EmailField(max_length=254)),\n                ('role', models.CharField(max_length=100)),\n                ('department', models.CharField(max_length=100)),\n            ],\n        ),\n    ]\n</pre> class Migration(migrations.Migration):      initial = True      dependencies = [     ]      operations = [         migrations.CreateModel(             name='Employee',             fields=[                 ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),                 ('name', models.CharField(max_length=100)),                 ('email', models.EmailField(max_length=254)),                 ('role', models.CharField(max_length=100)),                 ('department', models.CharField(max_length=100)),             ],         ),     ]"},{"location":"_Disciplina/Code/DemoDjango/app/migrations/0002_department_alter_employee_department/","title":"0002 department alter employee department","text":"<p>Generated by Django 5.1.2 on 2024-10-18 14:01</p> In\u00a0[1]: Copied! <pre>import django.db.models.deletion\nfrom django.db import migrations, models\n</pre> import django.db.models.deletion from django.db import migrations, models In\u00a0[2]: Copied! <pre>class Migration(migrations.Migration):\n\n    dependencies = [\n        ('app', '0001_initial'),\n    ]\n\n    operations = [\n        migrations.CreateModel(\n            name='Department',\n            fields=[\n                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),\n                ('name', models.CharField(max_length=100)),\n            ],\n        ),\n        migrations.AlterField(\n            model_name='employee',\n            name='department',\n            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='app.department'),\n        ),\n    ]\n</pre> class Migration(migrations.Migration):      dependencies = [         ('app', '0001_initial'),     ]      operations = [         migrations.CreateModel(             name='Department',             fields=[                 ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),                 ('name', models.CharField(max_length=100)),             ],         ),         migrations.AlterField(             model_name='employee',             name='department',             field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='app.department'),         ),     ]"},{"location":"_Disciplina/Code/DemoDjango/app/migrations/__init__/","title":"init","text":""},{"location":"_Disciplina/Code/DemoDjango/project/__init__/","title":"init","text":""},{"location":"_Disciplina/Code/DemoDjango/project/asgi/","title":"Asgi","text":"In\u00a0[1]: Copied! <pre>\"\"\"\nASGI config for project project.\n\nIt exposes the ASGI callable as a module-level variable named ``application``.\n\nFor more information on this file, see\nhttps://docs.djangoproject.com/en/5.1/howto/deployment/asgi/\n\"\"\"\n</pre> \"\"\" ASGI config for project project.  It exposes the ASGI callable as a module-level variable named ``application``.  For more information on this file, see https://docs.djangoproject.com/en/5.1/howto/deployment/asgi/ \"\"\" Out[1]: <pre>'\\nASGI config for project project.\\n\\nIt exposes the ASGI callable as a module-level variable named ``application``.\\n\\nFor more information on this file, see\\nhttps://docs.djangoproject.com/en/5.1/howto/deployment/asgi/\\n'</pre> In\u00a0[2]: Copied! <pre>import os\n</pre> import os In\u00a0[3]: Copied! <pre>from django.core.asgi import get_asgi_application\n</pre> from django.core.asgi import get_asgi_application In\u00a0[4]: Copied! <pre>os.environ.setdefault('DJANGO_SETTINGS_MODULE', 'project.settings')\n</pre> os.environ.setdefault('DJANGO_SETTINGS_MODULE', 'project.settings') Out[4]: <pre>'project.settings'</pre> In\u00a0[5]: Copied! <pre>application = get_asgi_application()\n</pre> application = get_asgi_application() <pre>\n---------------------------------------------------------------------------\nModuleNotFoundError                       Traceback (most recent call last)\nCell In[5], line 1\n----&gt; 1 application = get_asgi_application()\n\nFile C:\\Python310\\lib\\site-packages\\django\\core\\asgi.py:12, in get_asgi_application()\n      5 def get_asgi_application():\n      6     \"\"\"\n      7     The public interface to Django's ASGI support. Return an ASGI 3 callable.\n      8 \n      9     Avoids making django.core.handlers.ASGIHandler a public API, in case the\n     10     internal implementation changes or moves in the future.\n     11     \"\"\"\n---&gt; 12     django.setup(set_prefix=False)\n     13     return ASGIHandler()\n\nFile C:\\Python310\\lib\\site-packages\\django\\__init__.py:19, in setup(set_prefix)\n     16 from django.urls import set_script_prefix\n     17 from django.utils.log import configure_logging\n---&gt; 19 configure_logging(settings.LOGGING_CONFIG, settings.LOGGING)\n     20 if set_prefix:\n     21     set_script_prefix(\n     22         \"/\" if settings.FORCE_SCRIPT_NAME is None else settings.FORCE_SCRIPT_NAME\n     23     )\n\nFile C:\\Python310\\lib\\site-packages\\django\\conf\\__init__.py:81, in LazySettings.__getattr__(self, name)\n     79 \"\"\"Return the value of a setting and cache it in self.__dict__.\"\"\"\n     80 if (_wrapped := self._wrapped) is empty:\n---&gt; 81     self._setup(name)\n     82     _wrapped = self._wrapped\n     83 val = getattr(_wrapped, name)\n\nFile C:\\Python310\\lib\\site-packages\\django\\conf\\__init__.py:68, in LazySettings._setup(self, name)\n     60     desc = (\"setting %s\" % name) if name else \"settings\"\n     61     raise ImproperlyConfigured(\n     62         \"Requested %s, but settings are not configured. \"\n     63         \"You must either define the environment variable %s \"\n     64         \"or call settings.configure() before accessing settings.\"\n     65         % (desc, ENVIRONMENT_VARIABLE)\n     66     )\n---&gt; 68 self._wrapped = Settings(settings_module)\n\nFile C:\\Python310\\lib\\site-packages\\django\\conf\\__init__.py:166, in Settings.__init__(self, settings_module)\n    163 # store the settings module in case someone later cares\n    164 self.SETTINGS_MODULE = settings_module\n--&gt; 166 mod = importlib.import_module(self.SETTINGS_MODULE)\n    168 tuple_settings = (\n    169     \"ALLOWED_HOSTS\",\n    170     \"INSTALLED_APPS\",\n   (...)\n    173     \"SECRET_KEY_FALLBACKS\",\n    174 )\n    175 self._explicit_settings = set()\n\nFile C:\\Python310\\lib\\importlib\\__init__.py:126, in import_module(name, package)\n    124             break\n    125         level += 1\n--&gt; 126 return _bootstrap._gcd_import(name[level:], package, level)\n\nFile &lt;frozen importlib._bootstrap&gt;:1050, in _gcd_import(name, package, level)\n\nFile &lt;frozen importlib._bootstrap&gt;:1027, in _find_and_load(name, import_)\n\nFile &lt;frozen importlib._bootstrap&gt;:992, in _find_and_load_unlocked(name, import_)\n\nFile &lt;frozen importlib._bootstrap&gt;:241, in _call_with_frames_removed(f, *args, **kwds)\n\nFile &lt;frozen importlib._bootstrap&gt;:1050, in _gcd_import(name, package, level)\n\nFile &lt;frozen importlib._bootstrap&gt;:1027, in _find_and_load(name, import_)\n\nFile &lt;frozen importlib._bootstrap&gt;:1004, in _find_and_load_unlocked(name, import_)\n\nModuleNotFoundError: No module named 'project'</pre>"},{"location":"_Disciplina/Code/DemoDjango/project/settings/","title":"Settings","text":"In\u00a0[1]: Copied! <pre>\"\"\"\nDjango settings for project project.\n\nGenerated by 'django-admin startproject' using Django 5.1.2.\n\nFor more information on this file, see\nhttps://docs.djangoproject.com/en/5.1/topics/settings/\n\nFor the full list of settings and their values, see\nhttps://docs.djangoproject.com/en/5.1/ref/settings/\n\"\"\"\n</pre> \"\"\" Django settings for project project.  Generated by 'django-admin startproject' using Django 5.1.2.  For more information on this file, see https://docs.djangoproject.com/en/5.1/topics/settings/  For the full list of settings and their values, see https://docs.djangoproject.com/en/5.1/ref/settings/ \"\"\" Out[1]: <pre>\"\\nDjango settings for project project.\\n\\nGenerated by 'django-admin startproject' using Django 5.1.2.\\n\\nFor more information on this file, see\\nhttps://docs.djangoproject.com/en/5.1/topics/settings/\\n\\nFor the full list of settings and their values, see\\nhttps://docs.djangoproject.com/en/5.1/ref/settings/\\n\"</pre> In\u00a0[2]: Copied! <pre>from pathlib import Path\n</pre> from pathlib import Path In\u00a0[3]: Copied! <pre># Build paths inside the project like this: BASE_DIR / 'subdir'.\nBASE_DIR = Path(__file__).resolve().parent.parent\n</pre> # Build paths inside the project like this: BASE_DIR / 'subdir'. BASE_DIR = Path(__file__).resolve().parent.parent <pre>\n---------------------------------------------------------------------------\nNameError                                 Traceback (most recent call last)\nCell In[3], line 2\n      1 # Build paths inside the project like this: BASE_DIR / 'subdir'.\n----&gt; 2 BASE_DIR = Path(__file__).resolve().parent.parent\n\nNameError: name '__file__' is not defined</pre> <p>Quick-start development settings - unsuitable for production See https://docs.djangoproject.com/en/5.1/howto/deployment/checklist/</p> In\u00a0[4]: Copied! <pre># SECURITY WARNING: keep the secret key used in production secret!\nSECRET_KEY = 'django-insecure-wi7q4blj9(u8c$7t0b2byzsow1gas44#4a!r+)^2gy)o65*!t4'\n</pre> # SECURITY WARNING: keep the secret key used in production secret! SECRET_KEY = 'django-insecure-wi7q4blj9(u8c$7t0b2byzsow1gas44#4a!r+)^2gy)o65*!t4' In\u00a0[5]: Copied! <pre># SECURITY WARNING: don't run with debug turned on in production!\nDEBUG = True\n</pre> # SECURITY WARNING: don't run with debug turned on in production! DEBUG = True In\u00a0[6]: Copied! <pre>ALLOWED_HOSTS = []\n</pre> ALLOWED_HOSTS = [] <p>Application definition</p> In\u00a0[7]: Copied! <pre>INSTALLED_APPS = [\n    'django.contrib.admin',\n    'django.contrib.auth',\n    'django.contrib.contenttypes',\n    'django.contrib.sessions',\n    'django.contrib.messages',\n    'django.contrib.staticfiles',\n    'app',\n]\n</pre> INSTALLED_APPS = [     'django.contrib.admin',     'django.contrib.auth',     'django.contrib.contenttypes',     'django.contrib.sessions',     'django.contrib.messages',     'django.contrib.staticfiles',     'app', ] In\u00a0[8]: Copied! <pre>MIDDLEWARE = [\n    'django.middleware.security.SecurityMiddleware',\n    'django.contrib.sessions.middleware.SessionMiddleware',\n    'django.middleware.common.CommonMiddleware',\n    'django.middleware.csrf.CsrfViewMiddleware',\n    'django.contrib.auth.middleware.AuthenticationMiddleware',\n    'django.contrib.messages.middleware.MessageMiddleware',\n    'django.middleware.clickjacking.XFrameOptionsMiddleware',\n]\n</pre> MIDDLEWARE = [     'django.middleware.security.SecurityMiddleware',     'django.contrib.sessions.middleware.SessionMiddleware',     'django.middleware.common.CommonMiddleware',     'django.middleware.csrf.CsrfViewMiddleware',     'django.contrib.auth.middleware.AuthenticationMiddleware',     'django.contrib.messages.middleware.MessageMiddleware',     'django.middleware.clickjacking.XFrameOptionsMiddleware', ] In\u00a0[9]: Copied! <pre>ROOT_URLCONF = 'project.urls'\n</pre> ROOT_URLCONF = 'project.urls' In\u00a0[10]: Copied! <pre>TEMPLATES = [\n    {\n        'BACKEND': 'django.template.backends.django.DjangoTemplates',\n        'DIRS': [],\n        'APP_DIRS': True,\n        'OPTIONS': {\n            'context_processors': [\n                'django.template.context_processors.debug',\n                'django.template.context_processors.request',\n                'django.contrib.auth.context_processors.auth',\n                'django.contrib.messages.context_processors.messages',\n            ],\n        },\n    },\n]\n</pre> TEMPLATES = [     {         'BACKEND': 'django.template.backends.django.DjangoTemplates',         'DIRS': [],         'APP_DIRS': True,         'OPTIONS': {             'context_processors': [                 'django.template.context_processors.debug',                 'django.template.context_processors.request',                 'django.contrib.auth.context_processors.auth',                 'django.contrib.messages.context_processors.messages',             ],         },     }, ] In\u00a0[11]: Copied! <pre>WSGI_APPLICATION = 'project.wsgi.application'\n</pre> WSGI_APPLICATION = 'project.wsgi.application' <p>Database https://docs.djangoproject.com/en/5.1/ref/settings/#databases</p> In\u00a0[12]: Copied! <pre>DATABASES = {\n    'default': {\n        'ENGINE': 'django.db.backends.sqlite3',\n        'NAME': BASE_DIR / 'db.sqlite3',\n    }\n}\n</pre> DATABASES = {     'default': {         'ENGINE': 'django.db.backends.sqlite3',         'NAME': BASE_DIR / 'db.sqlite3',     } } <pre>\n---------------------------------------------------------------------------\nNameError                                 Traceback (most recent call last)\nCell In[12], line 4\n      1 DATABASES = {\n      2     'default': {\n      3         'ENGINE': 'django.db.backends.sqlite3',\n----&gt; 4         'NAME': BASE_DIR / 'db.sqlite3',\n      5     }\n      6 }\n\nNameError: name 'BASE_DIR' is not defined</pre> <p>Password validation https://docs.djangoproject.com/en/5.1/ref/settings/#auth-password-validators</p> In\u00a0[13]: Copied! <pre>AUTH_PASSWORD_VALIDATORS = [\n    {\n        'NAME': 'django.contrib.auth.password_validation.UserAttributeSimilarityValidator',\n    },\n    {\n        'NAME': 'django.contrib.auth.password_validation.MinimumLengthValidator',\n    },\n    {\n        'NAME': 'django.contrib.auth.password_validation.CommonPasswordValidator',\n    },\n    {\n        'NAME': 'django.contrib.auth.password_validation.NumericPasswordValidator',\n    },\n]\n</pre> AUTH_PASSWORD_VALIDATORS = [     {         'NAME': 'django.contrib.auth.password_validation.UserAttributeSimilarityValidator',     },     {         'NAME': 'django.contrib.auth.password_validation.MinimumLengthValidator',     },     {         'NAME': 'django.contrib.auth.password_validation.CommonPasswordValidator',     },     {         'NAME': 'django.contrib.auth.password_validation.NumericPasswordValidator',     }, ] <p>Internationalization https://docs.djangoproject.com/en/5.1/topics/i18n/</p> In\u00a0[14]: Copied! <pre>LANGUAGE_CODE = 'pt-br'\n</pre> LANGUAGE_CODE = 'pt-br' In\u00a0[15]: Copied! <pre>TIME_ZONE = 'America/Sao_Paulo'\n</pre> TIME_ZONE = 'America/Sao_Paulo' In\u00a0[16]: Copied! <pre>USE_I18N = True\n</pre> USE_I18N = True In\u00a0[17]: Copied! <pre>USE_TZ = True\n</pre> USE_TZ = True <p>Static files (CSS, JavaScript, Images) https://docs.djangoproject.com/en/5.1/howto/static-files/</p> In\u00a0[18]: Copied! <pre>STATIC_URL = 'static/'\n</pre> STATIC_URL = 'static/' <p>Default primary key field type https://docs.djangoproject.com/en/5.1/ref/settings/#default-auto-field</p> In\u00a0[19]: Copied! <pre>DEFAULT_AUTO_FIELD = 'django.db.models.BigAutoField'\n</pre> DEFAULT_AUTO_FIELD = 'django.db.models.BigAutoField'"},{"location":"_Disciplina/Code/DemoDjango/project/urls/","title":"Urls","text":"In\u00a0[1]: Copied! <pre>\"\"\"\nURL configuration for project project.\n\nThe `urlpatterns` list routes URLs to views. For more information please see:\n    https://docs.djangoproject.com/en/5.1/topics/http/urls/\nExamples:\nFunction views\n    1. Add an import:  from my_app import views\n    2. Add a URL to urlpatterns:  path('', views.home, name='home')\nClass-based views\n    1. Add an import:  from other_app.views import Home\n    2. Add a URL to urlpatterns:  path('', Home.as_view(), name='home')\nIncluding another URLconf\n    1. Import the include() function: from django.urls import include, path\n    2. Add a URL to urlpatterns:  path('blog/', include('blog.urls'))\n\"\"\"\nfrom django.contrib import admin\nfrom django.urls import path\n</pre> \"\"\" URL configuration for project project.  The `urlpatterns` list routes URLs to views. For more information please see:     https://docs.djangoproject.com/en/5.1/topics/http/urls/ Examples: Function views     1. Add an import:  from my_app import views     2. Add a URL to urlpatterns:  path('', views.home, name='home') Class-based views     1. Add an import:  from other_app.views import Home     2. Add a URL to urlpatterns:  path('', Home.as_view(), name='home') Including another URLconf     1. Import the include() function: from django.urls import include, path     2. Add a URL to urlpatterns:  path('blog/', include('blog.urls')) \"\"\" from django.contrib import admin from django.urls import path In\u00a0[2]: Copied! <pre>urlpatterns = [\n    path('admin/', admin.site.urls),\n]\n</pre> urlpatterns = [     path('admin/', admin.site.urls), ] <pre>\n---------------------------------------------------------------------------\nImproperlyConfigured                      Traceback (most recent call last)\nCell In[2], line 2\n      1 urlpatterns = [\n----&gt; 2     path('admin/', admin.site.urls),\n      3 ]\n\nFile C:\\Python310\\lib\\site-packages\\django\\utils\\functional.py:251, in new_method_proxy.&lt;locals&gt;.inner(self, *args)\n    249 def inner(self, *args):\n    250     if (_wrapped := self._wrapped) is empty:\n--&gt; 251         self._setup()\n    252         _wrapped = self._wrapped\n    253     return func(_wrapped, *args)\n\nFile C:\\Python310\\lib\\site-packages\\django\\contrib\\admin\\sites.py:605, in DefaultAdminSite._setup(self)\n    604 def _setup(self):\n--&gt; 605     AdminSiteClass = import_string(apps.get_app_config(\"admin\").default_site)\n    606     self._wrapped = AdminSiteClass()\n\nFile C:\\Python310\\lib\\site-packages\\django\\apps\\registry.py:156, in Apps.get_app_config(self, app_label)\n    150 def get_app_config(self, app_label):\n    151     \"\"\"\n    152     Import applications and returns an app config for the given label.\n    153 \n    154     Raise LookupError if no application exists with this label.\n    155     \"\"\"\n--&gt; 156     self.check_apps_ready()\n    157     try:\n    158         return self.app_configs[app_label]\n\nFile C:\\Python310\\lib\\site-packages\\django\\apps\\registry.py:137, in Apps.check_apps_ready(self)\n    132 from django.conf import settings\n    134 # If \"not ready\" is due to unconfigured settings, accessing\n    135 # INSTALLED_APPS raises a more helpful ImproperlyConfigured\n    136 # exception.\n--&gt; 137 settings.INSTALLED_APPS\n    138 raise AppRegistryNotReady(\"Apps aren't loaded yet.\")\n\nFile C:\\Python310\\lib\\site-packages\\django\\conf\\__init__.py:81, in LazySettings.__getattr__(self, name)\n     79 \"\"\"Return the value of a setting and cache it in self.__dict__.\"\"\"\n     80 if (_wrapped := self._wrapped) is empty:\n---&gt; 81     self._setup(name)\n     82     _wrapped = self._wrapped\n     83 val = getattr(_wrapped, name)\n\nFile C:\\Python310\\lib\\site-packages\\django\\conf\\__init__.py:61, in LazySettings._setup(self, name)\n     59 if not settings_module:\n     60     desc = (\"setting %s\" % name) if name else \"settings\"\n---&gt; 61     raise ImproperlyConfigured(\n     62         \"Requested %s, but settings are not configured. \"\n     63         \"You must either define the environment variable %s \"\n     64         \"or call settings.configure() before accessing settings.\"\n     65         % (desc, ENVIRONMENT_VARIABLE)\n     66     )\n     68 self._wrapped = Settings(settings_module)\n\nImproperlyConfigured: Requested setting INSTALLED_APPS, but settings are not configured. You must either define the environment variable DJANGO_SETTINGS_MODULE or call settings.configure() before accessing settings.</pre>"},{"location":"_Disciplina/Code/DemoDjango/project/wsgi/","title":"Wsgi","text":"In\u00a0[1]: Copied! <pre>\"\"\"\nWSGI config for project project.\n\nIt exposes the WSGI callable as a module-level variable named ``application``.\n\nFor more information on this file, see\nhttps://docs.djangoproject.com/en/5.1/howto/deployment/wsgi/\n\"\"\"\n</pre> \"\"\" WSGI config for project project.  It exposes the WSGI callable as a module-level variable named ``application``.  For more information on this file, see https://docs.djangoproject.com/en/5.1/howto/deployment/wsgi/ \"\"\" Out[1]: <pre>'\\nWSGI config for project project.\\n\\nIt exposes the WSGI callable as a module-level variable named ``application``.\\n\\nFor more information on this file, see\\nhttps://docs.djangoproject.com/en/5.1/howto/deployment/wsgi/\\n'</pre> In\u00a0[2]: Copied! <pre>import os\n</pre> import os In\u00a0[3]: Copied! <pre>from django.core.wsgi import get_wsgi_application\n</pre> from django.core.wsgi import get_wsgi_application In\u00a0[4]: Copied! <pre>os.environ.setdefault('DJANGO_SETTINGS_MODULE', 'project.settings')\n</pre> os.environ.setdefault('DJANGO_SETTINGS_MODULE', 'project.settings') Out[4]: <pre>'project.settings'</pre> In\u00a0[5]: Copied! <pre>application = get_wsgi_application()\n</pre> application = get_wsgi_application() <pre>\n---------------------------------------------------------------------------\nModuleNotFoundError                       Traceback (most recent call last)\nCell In[5], line 1\n----&gt; 1 application = get_wsgi_application()\n\nFile C:\\Python310\\lib\\site-packages\\django\\core\\wsgi.py:12, in get_wsgi_application()\n      5 def get_wsgi_application():\n      6     \"\"\"\n      7     The public interface to Django's WSGI support. Return a WSGI callable.\n      8 \n      9     Avoids making django.core.handlers.WSGIHandler a public API, in case the\n     10     internal WSGI implementation changes or moves in the future.\n     11     \"\"\"\n---&gt; 12     django.setup(set_prefix=False)\n     13     return WSGIHandler()\n\nFile C:\\Python310\\lib\\site-packages\\django\\__init__.py:19, in setup(set_prefix)\n     16 from django.urls import set_script_prefix\n     17 from django.utils.log import configure_logging\n---&gt; 19 configure_logging(settings.LOGGING_CONFIG, settings.LOGGING)\n     20 if set_prefix:\n     21     set_script_prefix(\n     22         \"/\" if settings.FORCE_SCRIPT_NAME is None else settings.FORCE_SCRIPT_NAME\n     23     )\n\nFile C:\\Python310\\lib\\site-packages\\django\\conf\\__init__.py:81, in LazySettings.__getattr__(self, name)\n     79 \"\"\"Return the value of a setting and cache it in self.__dict__.\"\"\"\n     80 if (_wrapped := self._wrapped) is empty:\n---&gt; 81     self._setup(name)\n     82     _wrapped = self._wrapped\n     83 val = getattr(_wrapped, name)\n\nFile C:\\Python310\\lib\\site-packages\\django\\conf\\__init__.py:68, in LazySettings._setup(self, name)\n     60     desc = (\"setting %s\" % name) if name else \"settings\"\n     61     raise ImproperlyConfigured(\n     62         \"Requested %s, but settings are not configured. \"\n     63         \"You must either define the environment variable %s \"\n     64         \"or call settings.configure() before accessing settings.\"\n     65         % (desc, ENVIRONMENT_VARIABLE)\n     66     )\n---&gt; 68 self._wrapped = Settings(settings_module)\n\nFile C:\\Python310\\lib\\site-packages\\django\\conf\\__init__.py:166, in Settings.__init__(self, settings_module)\n    163 # store the settings module in case someone later cares\n    164 self.SETTINGS_MODULE = settings_module\n--&gt; 166 mod = importlib.import_module(self.SETTINGS_MODULE)\n    168 tuple_settings = (\n    169     \"ALLOWED_HOSTS\",\n    170     \"INSTALLED_APPS\",\n   (...)\n    173     \"SECRET_KEY_FALLBACKS\",\n    174 )\n    175 self._explicit_settings = set()\n\nFile C:\\Python310\\lib\\importlib\\__init__.py:126, in import_module(name, package)\n    124             break\n    125         level += 1\n--&gt; 126 return _bootstrap._gcd_import(name[level:], package, level)\n\nFile &lt;frozen importlib._bootstrap&gt;:1050, in _gcd_import(name, package, level)\n\nFile &lt;frozen importlib._bootstrap&gt;:1027, in _find_and_load(name, import_)\n\nFile &lt;frozen importlib._bootstrap&gt;:992, in _find_and_load_unlocked(name, import_)\n\nFile &lt;frozen importlib._bootstrap&gt;:241, in _call_with_frames_removed(f, *args, **kwds)\n\nFile &lt;frozen importlib._bootstrap&gt;:1050, in _gcd_import(name, package, level)\n\nFile &lt;frozen importlib._bootstrap&gt;:1027, in _find_and_load(name, import_)\n\nFile &lt;frozen importlib._bootstrap&gt;:1004, in _find_and_load_unlocked(name, import_)\n\nModuleNotFoundError: No module named 'project'</pre>"},{"location":"_Disciplina/Roteiros/Banco%20de%20Dados/introsqlite/","title":"Sqlite Sql","text":"In\u00a0[1]: Copied! <pre>#!pip install ipython-sql\n%load_ext sql\n</pre> #!pip install ipython-sql %load_ext sql <pre>\n---------------------------------------------------------------------------\nModuleNotFoundError                       Traceback (most recent call last)\nCell In[1], line 2\n      1 #!pip install ipython-sql\n----&gt; 2 get_ipython().run_line_magic('load_ext', 'sql')\n\nFile C:\\Python310\\lib\\site-packages\\IPython\\core\\interactiveshell.py:2480, in InteractiveShell.run_line_magic(self, magic_name, line, _stack_depth)\n   2478     kwargs['local_ns'] = self.get_local_scope(stack_depth)\n   2479 with self.builtin_trap:\n-&gt; 2480     result = fn(*args, **kwargs)\n   2482 # The code below prevents the output from being displayed\n   2483 # when using magics with decorator @output_can_be_silenced\n   2484 # when the last Python token in the expression is a ';'.\n   2485 if getattr(fn, magic.MAGIC_OUTPUT_CAN_BE_SILENCED, False):\n\nFile C:\\Python310\\lib\\site-packages\\IPython\\core\\magics\\extension.py:33, in ExtensionMagics.load_ext(self, module_str)\n     31 if not module_str:\n     32     raise UsageError('Missing module name.')\n---&gt; 33 res = self.shell.extension_manager.load_extension(module_str)\n     35 if res == 'already loaded':\n     36     print(\"The %s extension is already loaded. To reload it, use:\" % module_str)\n\nFile C:\\Python310\\lib\\site-packages\\IPython\\core\\extensions.py:62, in ExtensionManager.load_extension(self, module_str)\n     55 \"\"\"Load an IPython extension by its module name.\n     56 \n     57 Returns the string \"already loaded\" if the extension is already loaded,\n     58 \"no load function\" if the module doesn't have a load_ipython_extension\n     59 function, or None if it succeeded.\n     60 \"\"\"\n     61 try:\n---&gt; 62     return self._load_extension(module_str)\n     63 except ModuleNotFoundError:\n     64     if module_str in BUILTINS_EXTS:\n\nFile C:\\Python310\\lib\\site-packages\\IPython\\core\\extensions.py:77, in ExtensionManager._load_extension(self, module_str)\n     75 with self.shell.builtin_trap:\n     76     if module_str not in sys.modules:\n---&gt; 77         mod = import_module(module_str)\n     78     mod = sys.modules[module_str]\n     79     if self._call_load_ipython_extension(mod):\n\nFile C:\\Python310\\lib\\importlib\\__init__.py:126, in import_module(name, package)\n    124             break\n    125         level += 1\n--&gt; 126 return _bootstrap._gcd_import(name[level:], package, level)\n\nFile &lt;frozen importlib._bootstrap&gt;:1050, in _gcd_import(name, package, level)\n\nFile &lt;frozen importlib._bootstrap&gt;:1027, in _find_and_load(name, import_)\n\nFile &lt;frozen importlib._bootstrap&gt;:1004, in _find_and_load_unlocked(name, import_)\n\nModuleNotFoundError: No module named 'sql'</pre> In\u00a0[2]: Copied! <pre>%sql sqlite:///contatos.db\n</pre> %sql sqlite:///contatos.db <pre>UsageError: Line magic function `%sql` not found.\n</pre> In\u00a0[3]: Copied! <pre>%%sql\n\nCREATE TABLE CLIENTES (\n    CLIENTE_ID INTEGER PRIMARY KEY,\n    NOME TEXT NOT NULL,\n    EMAIL TEXT NOT NULL UNIQUE,\n    TELEFONE TEXT NOT NULL UNIQUE\n);\n</pre> %%sql  CREATE TABLE CLIENTES (     CLIENTE_ID INTEGER PRIMARY KEY,     NOME TEXT NOT NULL,     EMAIL TEXT NOT NULL UNIQUE,     TELEFONE TEXT NOT NULL UNIQUE ); <pre>UsageError: Cell magic `%%sql` not found.\n</pre> In\u00a0[4]: Copied! <pre>%%sql\n\nINSERT INTO CLIENTES (NOME, EMAIL, TELEFONE) \nVALUES\n    ('Leonardo' , 'leonardo@gmail.com', '9999-9999' ),\n    ('Rafael' , 'rafael@gmail.com', '9889-8998' ),\n    ('Michelangelo' , 'michelangelo@gmail.com', '9997-7999' ),\n    ('Donatello' , 'donatello@gmail.com', '9777-7779' );\n</pre> %%sql  INSERT INTO CLIENTES (NOME, EMAIL, TELEFONE)  VALUES     ('Leonardo' , 'leonardo@gmail.com', '9999-9999' ),     ('Rafael' , 'rafael@gmail.com', '9889-8998' ),     ('Michelangelo' , 'michelangelo@gmail.com', '9997-7999' ),     ('Donatello' , 'donatello@gmail.com', '9777-7779' ); <pre>UsageError: Cell magic `%%sql` not found.\n</pre> In\u00a0[5]: Copied! <pre>%%sql\n\nSELECT * FROM CLIENTES\n</pre> %%sql  SELECT * FROM CLIENTES <pre>UsageError: Cell magic `%%sql` not found.\n</pre> In\u00a0[6]: Copied! <pre>%%sql\n\nSELECT * FROM CLIENTES WHERE EMAIL = \"leonardo@gmail.com\"\n</pre> %%sql  SELECT * FROM CLIENTES WHERE EMAIL = \"leonardo@gmail.com\" <pre>UsageError: Cell magic `%%sql` not found.\n</pre> In\u00a0[7]: Copied! <pre>%%sql\n\nINSERT INTO CLIENTES (NOME, EMAIL, TELEFONE) \nVALUES ('Leonardo' , 'leo@gmail.com', '1199-991199' );\n</pre> %%sql  INSERT INTO CLIENTES (NOME, EMAIL, TELEFONE)  VALUES ('Leonardo' , 'leo@gmail.com', '1199-991199' ); <pre>UsageError: Cell magic `%%sql` not found.\n</pre> In\u00a0[8]: Copied! <pre>%%sql\n\nSELECT * FROM CLIENTES WHERE NOME = \"Leonardo\" AND EMAIL = 'leo@gmail.com'\n</pre> %%sql  SELECT * FROM CLIENTES WHERE NOME = \"Leonardo\" AND EMAIL = 'leo@gmail.com' <pre>UsageError: Cell magic `%%sql` not found.\n</pre> In\u00a0[9]: Copied! <pre>%%sql\n\nSELECT * FROM CLIENTES ORDER BY NOME\n</pre> %%sql  SELECT * FROM CLIENTES ORDER BY NOME <pre>UsageError: Cell magic `%%sql` not found.\n</pre> In\u00a0[10]: Copied! <pre>%%sql\n\nSELECT DISTINCT NOME FROM CLIENTES;\n</pre> %%sql  SELECT DISTINCT NOME FROM CLIENTES; <pre>UsageError: Cell magic `%%sql` not found.\n</pre> In\u00a0[11]: Copied! <pre>%%sql\nSELECT COUNT(*) FROM clientes;\n</pre> %%sql SELECT COUNT(*) FROM clientes; <pre>UsageError: Cell magic `%%sql` not found.\n</pre> In\u00a0[12]: Copied! <pre>%%sql\n\nUPDATE clientes\nSET nome = 'Leonardo X'\nWHERE EMAIL = 'leo@gmail.com';\n</pre> %%sql  UPDATE clientes SET nome = 'Leonardo X' WHERE EMAIL = 'leo@gmail.com'; <pre>UsageError: Cell magic `%%sql` not found.\n</pre> In\u00a0[13]: Copied! <pre>%%sql\nselect * from clientes;\n</pre> %%sql select * from clientes; <pre>UsageError: Cell magic `%%sql` not found.\n</pre> In\u00a0[14]: Copied! <pre>%%sql\n\nDELETE FROM clientes WHERE nome = 'Leonardo X';\n</pre> %%sql  DELETE FROM clientes WHERE nome = 'Leonardo X'; <pre>UsageError: Cell magic `%%sql` not found.\n</pre> In\u00a0[15]: Copied! <pre>%%sql\nselect * from clientes;\n</pre> %%sql select * from clientes; <pre>UsageError: Cell magic `%%sql` not found.\n</pre> In\u00a0[16]: Copied! <pre>%%sql\n\nINSERT INTO clientes (nome, email, telefone) \nVALUES ('Leonardo', 'leo@gmail.com', '1999-9999')\n</pre> %%sql  INSERT INTO clientes (nome, email, telefone)  VALUES ('Leonardo', 'leo@gmail.com', '1999-9999') <pre>UsageError: Cell magic `%%sql` not found.\n</pre>"},{"location":"_Disciplina/Roteiros/Banco%20de%20Dados/introsqlite/#sqlite-sql","title":"Sqlite Sql\u00b6","text":"<p>Come\u00e7ando por carregar o sql no notebook</p>"},{"location":"_Disciplina/Roteiros/Banco%20de%20Dados/pysqlite/","title":"Pysqlite","text":"In\u00a0[1]: Copied! <pre># connect_db.py\n# 01_create_db.py\nimport sqlite3\n\nconn = sqlite3.connect('clientes.db')\nconn.close()\n</pre> # connect_db.py # 01_create_db.py import sqlite3  conn = sqlite3.connect('clientes.db') conn.close() In\u00a0[2]: Copied! <pre># 02_create_schema.py\nimport sqlite3\n\n# conectando...\nconn = sqlite3.connect('clientes.db')\n# definindo um cursor\ncursor = conn.cursor()\n\n# criando a tabela (schema)\ncursor.execute(\"\"\"\nCREATE TABLE clientesss (\n        id INTEGER NOT NULL PRIMARY KEY AUTOINCREMENT,\n        nome TEXT NOT NULL,\n        idade INTEGER,\n        cpf     VARCHAR(11) NOT NULL,\n        email TEXT NOT NULL,\n        fone TEXT,\n        cidade TEXT,\n        uf VARCHAR(2) NOT NULL,\n        criado_em DATE NOT NULL\n);\n\"\"\")\n\nprint('Tabela criada com sucesso.')\n# desconectando...\nconn.close()\n</pre> # 02_create_schema.py import sqlite3  # conectando... conn = sqlite3.connect('clientes.db') # definindo um cursor cursor = conn.cursor()  # criando a tabela (schema) cursor.execute(\"\"\" CREATE TABLE clientesss (         id INTEGER NOT NULL PRIMARY KEY AUTOINCREMENT,         nome TEXT NOT NULL,         idade INTEGER,         cpf     VARCHAR(11) NOT NULL,         email TEXT NOT NULL,         fone TEXT,         cidade TEXT,         uf VARCHAR(2) NOT NULL,         criado_em DATE NOT NULL ); \"\"\")  print('Tabela criada com sucesso.') # desconectando... conn.close() <pre>\n---------------------------------------------------------------------------\nOperationalError                          Traceback (most recent call last)\nCell In[2], line 10\n      7 cursor = conn.cursor()\n      9 # criando a tabela (schema)\n---&gt; 10 cursor.execute(\"\"\"\n     11 CREATE TABLE clientesss (\n     12         id INTEGER NOT NULL PRIMARY KEY AUTOINCREMENT,\n     13         nome TEXT NOT NULL,\n     14         idade INTEGER,\n     15         cpf     VARCHAR(11) NOT NULL,\n     16         email TEXT NOT NULL,\n     17         fone TEXT,\n     18         cidade TEXT,\n     19         uf VARCHAR(2) NOT NULL,\n     20         criado_em DATE NOT NULL\n     21 );\n     22 \"\"\")\n     24 print('Tabela criada com sucesso.')\n     25 # desconectando...\n\nOperationalError: table clientesss already exists</pre> In\u00a0[3]: Copied! <pre># 03_create_data_sql.py\nimport sqlite3\n\nconn = sqlite3.connect('clientes.db')\ncursor = conn.cursor()\n\n# inserindo dados na tabela\ncursor.execute(\"\"\"\nINSERT INTO clientesss (nome, idade, cpf, email, fone, cidade, uf, criado_em)\nVALUES ('Regis', 35, '00000000000', 'regis@email.com', '11-98765-4321', 'Sao Paulo', 'SP', '2014-06-08')\n\"\"\")\n\ncursor.execute(\"\"\"\nINSERT INTO clientesss (nome, idade, cpf, email, fone, cidade, uf, criado_em)\nVALUES ('Aloisio', 87, '11111111111', 'aloisio@email.com', '98765-4322', 'Porto Alegre', 'RS', '2014-06-09')\n\"\"\")\n\ncursor.execute(\"\"\"\nINSERT INTO clientesss (nome, idade, cpf, email, fone, cidade, uf, criado_em)\nVALUES ('Bruna', 21, '22222222222', 'bruna@email.com', '21-98765-4323', 'Rio de Janeiro', 'RJ', '2014-06-09')\n\"\"\")\n\ncursor.execute(\"\"\"\nINSERT INTO clientesss (nome, idade, cpf, email, fone, cidade, uf, criado_em)\nVALUES ('Matheus', 19, '33333333333', 'matheus@email.com', '11-98765-4324', 'Campinas', 'SP', '2014-06-08')\n\"\"\")\n\n# gravando no bd\nconn.commit()\n\nprint('Dados inseridos com sucesso.')\n\nconn.close()\n</pre> # 03_create_data_sql.py import sqlite3  conn = sqlite3.connect('clientes.db') cursor = conn.cursor()  # inserindo dados na tabela cursor.execute(\"\"\" INSERT INTO clientesss (nome, idade, cpf, email, fone, cidade, uf, criado_em) VALUES ('Regis', 35, '00000000000', 'regis@email.com', '11-98765-4321', 'Sao Paulo', 'SP', '2014-06-08') \"\"\")  cursor.execute(\"\"\" INSERT INTO clientesss (nome, idade, cpf, email, fone, cidade, uf, criado_em) VALUES ('Aloisio', 87, '11111111111', 'aloisio@email.com', '98765-4322', 'Porto Alegre', 'RS', '2014-06-09') \"\"\")  cursor.execute(\"\"\" INSERT INTO clientesss (nome, idade, cpf, email, fone, cidade, uf, criado_em) VALUES ('Bruna', 21, '22222222222', 'bruna@email.com', '21-98765-4323', 'Rio de Janeiro', 'RJ', '2014-06-09') \"\"\")  cursor.execute(\"\"\" INSERT INTO clientesss (nome, idade, cpf, email, fone, cidade, uf, criado_em) VALUES ('Matheus', 19, '33333333333', 'matheus@email.com', '11-98765-4324', 'Campinas', 'SP', '2014-06-08') \"\"\")  # gravando no bd conn.commit()  print('Dados inseridos com sucesso.')  conn.close() <pre>Dados inseridos com sucesso.\n</pre> In\u00a0[4]: Copied! <pre># 04_read_data.py\nimport sqlite3\n\nconn = sqlite3.connect('clientes.db')\ncursor = conn.cursor()\n\n# lendo os dados\ncursor.execute(\"\"\"\nSELECT * FROM clientes;\n\"\"\")\n\nfor linha in cursor.fetchall():\n    print(linha)\n\nconn.close()\n</pre> # 04_read_data.py import sqlite3  conn = sqlite3.connect('clientes.db') cursor = conn.cursor()  # lendo os dados cursor.execute(\"\"\" SELECT * FROM clientes; \"\"\")  for linha in cursor.fetchall():     print(linha)  conn.close() <pre>\n---------------------------------------------------------------------------\nOperationalError                          Traceback (most recent call last)\nCell In[4], line 8\n      5 cursor = conn.cursor()\n      7 # lendo os dados\n----&gt; 8 cursor.execute(\"\"\"\n      9 SELECT * FROM clientes;\n     10 \"\"\")\n     12 for linha in cursor.fetchall():\n     13     print(linha)\n\nOperationalError: no such table: clientes</pre> In\u00a0[5]: Copied! <pre># 05_update_data.py\nimport sqlite3\n\nconn = sqlite3.connect('clientes.db')\ncursor = conn.cursor()\n\nid_cliente = 1\nnovo_fone = '11-1000-2014'\nnovo_criado_em = '2014-06-11'\n\n# alterando os dados da tabela\ncursor.execute(\"\"\"\nUPDATE clientesss\nSET fone = ?, criado_em = ?\nWHERE id = ?\n\"\"\", (novo_fone, novo_criado_em, id_cliente))\n\nconn.commit()\n\nprint('Dados atualizados com sucesso.')\n\nconn.close()\n</pre> # 05_update_data.py import sqlite3  conn = sqlite3.connect('clientes.db') cursor = conn.cursor()  id_cliente = 1 novo_fone = '11-1000-2014' novo_criado_em = '2014-06-11'  # alterando os dados da tabela cursor.execute(\"\"\" UPDATE clientesss SET fone = ?, criado_em = ? WHERE id = ? \"\"\", (novo_fone, novo_criado_em, id_cliente))  conn.commit()  print('Dados atualizados com sucesso.')  conn.close() <pre>Dados atualizados com sucesso.\n</pre> In\u00a0[6]: Copied! <pre># 07_delete_data.py\nimport sqlite3\n\nconn = sqlite3.connect('clientes.db')\ncursor = conn.cursor()\n\nid_cliente = 3\n\n# excluindo um registro da tabela\ncursor.execute(\"\"\"\nDELETE FROM clientesss\nWHERE id = ?\n\"\"\", (id_cliente,))\n\nconn.commit()\n\nprint('Registro excluido com sucesso.')\n\nconn.close()\n</pre> # 07_delete_data.py import sqlite3  conn = sqlite3.connect('clientes.db') cursor = conn.cursor()  id_cliente = 3  # excluindo um registro da tabela cursor.execute(\"\"\" DELETE FROM clientesss WHERE id = ? \"\"\", (id_cliente,))  conn.commit()  print('Registro excluido com sucesso.')  conn.close() <pre>Registro excluido com sucesso.\n</pre> In\u00a0[7]: Copied! <pre># 09_alter_table.py\nimport sqlite3\n\nconn = sqlite3.connect('clientes.db')\ncursor = conn.cursor()\n\n# adicionando uma nova coluna na tabela clientes\ncursor.execute(\"\"\"\nALTER TABLE clientesss\nADD COLUMN bloqueado BOOLEAN;\n\"\"\")\n\nconn.commit()\n\nprint('Novo campo adicionado com sucesso.')\n\nconn.close()\n</pre> # 09_alter_table.py import sqlite3  conn = sqlite3.connect('clientes.db') cursor = conn.cursor()  # adicionando uma nova coluna na tabela clientes cursor.execute(\"\"\" ALTER TABLE clientesss ADD COLUMN bloqueado BOOLEAN; \"\"\")  conn.commit()  print('Novo campo adicionado com sucesso.')  conn.close() <pre>\n---------------------------------------------------------------------------\nOperationalError                          Traceback (most recent call last)\nCell In[7], line 8\n      5 cursor = conn.cursor()\n      7 # adicionando uma nova coluna na tabela clientes\n----&gt; 8 cursor.execute(\"\"\"\n      9 ALTER TABLE clientesss\n     10 ADD COLUMN bloqueado BOOLEAN;\n     11 \"\"\")\n     13 conn.commit()\n     15 print('Novo campo adicionado com sucesso.')\n\nOperationalError: duplicate column name: bloqueado</pre> In\u00a0[8]: Copied! <pre># 10_view_table_info.py\nimport sqlite3\n\nconn = sqlite3.connect('clientes.db')\ncursor = conn.cursor()\nnome_tabela = 'clientesss'\n\n# obtendo informa\u00e7\u00f5es da tabela\ncursor.execute('PRAGMA table_info({})'.format(nome_tabela))\n\ncolunas = [tupla[1] for tupla in cursor.fetchall()]\nprint('Colunas:', colunas)\n# ou\n# for coluna in colunas:\n#    print(coluna)\n\n# listando as tabelas do bd\ncursor.execute(\"\"\"\nSELECT name FROM sqlite_master WHERE type='table' ORDER BY name\n\"\"\")\n\nprint('Tabelas:')\nfor tabela in cursor.fetchall():\n    print(\"%s\" % (tabela))\n\n# obtendo o schema da tabela\ncursor.execute(\"\"\"\nSELECT sql FROM sqlite_master WHERE type='table' AND name=?\n\"\"\", (nome_tabela,))\n\nprint('Schema:')\nfor schema in cursor.fetchall():\n    print(\"%s\" % (schema))\n\nconn.close()\n</pre> # 10_view_table_info.py import sqlite3  conn = sqlite3.connect('clientes.db') cursor = conn.cursor() nome_tabela = 'clientesss'  # obtendo informa\u00e7\u00f5es da tabela cursor.execute('PRAGMA table_info({})'.format(nome_tabela))  colunas = [tupla[1] for tupla in cursor.fetchall()] print('Colunas:', colunas) # ou # for coluna in colunas: #    print(coluna)  # listando as tabelas do bd cursor.execute(\"\"\" SELECT name FROM sqlite_master WHERE type='table' ORDER BY name \"\"\")  print('Tabelas:') for tabela in cursor.fetchall():     print(\"%s\" % (tabela))  # obtendo o schema da tabela cursor.execute(\"\"\" SELECT sql FROM sqlite_master WHERE type='table' AND name=? \"\"\", (nome_tabela,))  print('Schema:') for schema in cursor.fetchall():     print(\"%s\" % (schema))  conn.close() <pre>Colunas: ['id', 'nome', 'idade', 'cpf', 'email', 'fone', 'cidade', 'uf', 'criado_em', 'bloqueado']\nTabelas:\nclientesss\nsqlite_sequence\nSchema:\nCREATE TABLE clientesss (\n        id INTEGER NOT NULL PRIMARY KEY AUTOINCREMENT,\n        nome TEXT NOT NULL,\n        idade INTEGER,\n        cpf     VARCHAR(11) NOT NULL,\n        email TEXT NOT NULL,\n        fone TEXT,\n        cidade TEXT,\n        uf VARCHAR(2) NOT NULL,\n        criado_em DATE NOT NULL\n, bloqueado BOOLEAN)\n</pre>"},{"location":"_Disciplina/Roteiros/Banco%20de%20Dados/pysqlite/#aprendendo-sql-com-crud-no-sqlite-usando-vs-code-e-jupyter-notebook","title":"Aprendendo SQL com CRUD no SQLite usando VS Code e Jupyter Notebook\u00b6","text":""},{"location":"_Disciplina/Roteiros/Banco%20de%20Dados/pysqlite/#o-que-e-crud","title":"O que \u00e9 CRUD?\u00b6","text":"<p>CRUD \u00e9 um acr\u00f4nimo que significa Create, Read, Update e Delete. S\u00e3o as quatro opera\u00e7\u00f5es b\u00e1sicas que voc\u00ea pode realizar em um banco de dados:</p> <ul> <li>Create: Criar novos registros.</li> <li>Read: Ler dados existentes.</li> <li>Update: Atualizar dados existentes.</li> <li>Delete: Deletar dados.</li> </ul>"},{"location":"_Disciplina/Roteiros/Banco%20de%20Dados/pysqlite/#configurando-o-ambiente","title":"Configurando o Ambiente\u00b6","text":"<p>1. Instalar o VS Code:</p> <ul> <li>Se voc\u00ea ainda n\u00e3o tiver, baixe e instale o VS Code do site oficial: https://code.visualstudio.com/</li> </ul> <p>2. Instalar a extens\u00e3o Python:</p> <ul> <li>No VS Code, v\u00e1 em Extens\u00f5es (\u00edcone da engrenagem na barra lateral esquerda) e procure por \"Python\". Instale a extens\u00e3o oficial da Microsoft.</li> </ul> <p>3. Criar um novo notebook Jupyter:</p> <ul> <li><p>Abra o VS Code e crie um novo arquivo Python (<code>.py</code>).</p> </li> <li><p>Na primeira linha, adicione:</p> <pre>%matplotlib inline\n</pre> <p>Isso configura o notebook para exibir gr\u00e1ficos inline.</p> </li> <li><p>Para transformar o arquivo em um notebook, pressione Ctrl+Shift+P (ou Cmd+Shift+P no macOS) e digite \"Convert to Jupyter Notebook\".</p> </li> </ul> <p>4. Instalar a biblioteca <code>sqlite3</code>:</p> <ul> <li><p>Abra um terminal integrado no VS Code (Ctrl+`) e execute o seguinte comando:</p> <pre>pip install sqlite3\n</pre> </li> </ul> <p>Recursos \u00dateis:</p> <ul> <li>Documenta\u00e7\u00e3o do SQLite: https://www.sqlite.org/docs.html</li> <li>Documenta\u00e7\u00e3o do Python: https://docs.python.org/3/</li> </ul>"},{"location":"_Disciplina/Roteiros/Banco%20de%20Dados/sqlite/","title":"Sqlite","text":""},{"location":"_Disciplina/Roteiros/Banco%20de%20Dados/sqlite/#introducao-ao-sqlite-seu-primeiro-banco-de-dados","title":"Introdu\u00e7\u00e3o ao SQLite: Seu Primeiro Banco de Dados","text":"<p>O que \u00e9 SQLite?</p> <p>SQLite \u00e9 um sistema gerenciador de banco de dados relacional, leve e embutido. Isso significa que ele n\u00e3o requer um servidor separado para funcionar e pode ser integrado diretamente a um aplicativo. Ele \u00e9 amplamente utilizado em dispositivos m\u00f3veis, aplicativos desktop e at\u00e9 mesmo em sistemas embarcados.</p> <p>Por que usar SQLite?</p> <ul> <li>Simplicidade: F\u00e1cil de aprender e usar, especialmente para iniciantes em bancos de dados.</li> <li>Leveza: N\u00e3o exige um servidor dedicado, economizando recursos.</li> <li>Velocidade: Muito r\u00e1pido para pequenas a m\u00e9dias bases de dados.</li> <li>Portabilidade: Funciona em praticamente todas as plataformas.</li> <li>Transacional: Garante a integridade dos dados atrav\u00e9s de transa\u00e7\u00f5es.</li> </ul> <p>Conceitos B\u00e1sicos:</p> <ul> <li>Banco de dados: Uma cole\u00e7\u00e3o organizada de dados.</li> <li>Tabela: Uma estrutura dentro do banco de dados que armazena dados em linhas (registros) e colunas (campos).</li> <li>Registro: Uma linha em uma tabela, representando um conjunto de dados relacionados.</li> <li>Campo: Uma coluna em uma tabela, representando um tipo espec\u00edfico de dado (texto, n\u00famero, data, etc.).</li> <li>Chave prim\u00e1ria: Um campo ou conjunto de campos que identifica de forma \u00fanica cada registro em uma tabela.</li> <li>SQL (Structured Query Language): A linguagem padr\u00e3o para interagir com bancos de dados relacionais, incluindo o SQLite.</li> </ul> <p>Criando seu primeiro banco de dados SQLite:</p> <p>1. Escolha uma ferramenta: Voc\u00ea pode usar um editor de texto para criar arquivos SQLite (com extens\u00e3o .db) ou uma ferramenta gr\u00e1fica como o SQLite Studio.</p> <p>2. Conecte-se ao banco de dados: Se estiver usando uma ferramenta gr\u00e1fica, voc\u00ea precisar\u00e1 indicar o caminho para o seu arquivo SQLite.</p> <p>3. Crie uma tabela: Use a linguagem SQL para definir a estrutura da tabela, especificando o nome da tabela e os campos que ela conter\u00e1. Por exemplo:</p> <pre><code>CREATE TABLE pessoas (\n    id INTEGER PRIMARY KEY,\n    nome TEXT,\n    idade INTEGER\n);\n</code></pre> <p>4. Insira dados: Use a instru\u00e7\u00e3o INSERT para adicionar registros \u00e0 tabela. Por exemplo:</p> <pre><code>INSERT INTO pessoas (nome, idade)\nVALUES ('Jo\u00e3o', 30);\n</code></pre> <p>5. Consulte dados: Use a instru\u00e7\u00e3o SELECT para recuperar dados da tabela. Por exemplo:</p> <pre><code>SELECT * FROM pessoas;\n</code></pre> <p>Exemplo pr\u00e1tico em Python:</p> <pre><code>import sqlite3\n\n# Conectando ao banco de dados\nconn = sqlite3.connect('meu_banco.db')\n\n# Criando um cursor para executar comandos SQL\ncursor = conn.cursor()\n\n# Criando a tabela (se n\u00e3o existir)\ncursor.execute('''\n    CREATE TABLE IF NOT EXISTS produtos (\n        id INTEGER PRIMARY KEY,\n        nome TEXT,\n        preco REAL\n    )\n''')\n\n# Inserindo dados\ncursor.execute(\"INSERT INTO produtos (nome, preco) VALUES ('Celular', 1500)\")\n\n# Consultando dados\ncursor.execute(\"SELECT * FROM produtos\")\nfor row in cursor:\n    print(row)\n\n# Fechando a conex\u00e3o\nconn.close()\n</code></pre> <p>Recursos adicionais:</p> <ul> <li>Documenta\u00e7\u00e3o oficial: https://www.sqlite.org/</li> <li>Tutoriais online: Existem diversos tutoriais gratuitos e pagos dispon\u00edveis na internet.</li> <li>Ferramentas gr\u00e1ficas: SQLite Studio, DB Browser for SQLite, etc.</li> </ul>"},{"location":"_Disciplina/Roteiros/Banco%20de%20Dados/sqlite/#planejando-um-banco-de-dados-um-guia-completo","title":"Planejando um Banco de Dados: Um Guia Completo","text":"<p>Planejamento \u00e9 a chave para um banco de dados eficiente e escal\u00e1vel. Ao criar um banco de dados, \u00e9 fundamental ter uma vis\u00e3o clara de como os dados ser\u00e3o armazenados, como ser\u00e3o acessados e como o banco de dados ir\u00e1 evoluir ao longo do tempo.</p>"},{"location":"_Disciplina/Roteiros/Banco%20de%20Dados/sqlite/#etapas-do-planejamento","title":"Etapas do Planejamento","text":"<p>1. Defini\u00e7\u00e3o dos Requisitos:</p> <ul> <li>Quais dados ser\u00e3o armazenados? Identifique todos os tipos de dados que ser\u00e3o armazenados no banco de dados (nomes, endere\u00e7os, datas, etc.).</li> <li>Quem vai usar o banco de dados? Determine os usu\u00e1rios e suas necessidades espec\u00edficas.</li> <li>Como os dados ser\u00e3o utilizados? Quais tipos de consultas ser\u00e3o realizadas? Quais relat\u00f3rios ser\u00e3o gerados?</li> <li>Quais s\u00e3o as restri\u00e7\u00f5es de seguran\u00e7a? Quais dados precisam ser protegidos e como?</li> </ul> <p>2. Modelagem de Dados:</p> <ul> <li>Entidades e Atributos: Identifique as entidades (tabelas) e seus atributos (colunas).</li> <li>Relacionamentos: Defina como as entidades se relacionam entre si (um para um, um para muitos, muitos para muitos).</li> <li>Diagramas de Entidade-Relacionamento (ER): Crie diagramas ER para visualizar a estrutura do banco de dados.</li> </ul> <p>3. Normaliza\u00e7\u00e3o:</p> <ul> <li>Primeira Forma Normal (1FN): Cada c\u00e9lula deve conter apenas um valor at\u00f4mico.</li> <li>Segunda Forma Normal (2FN): Cada atributo n\u00e3o chave deve depender de toda a chave prim\u00e1ria.</li> <li>Terceira Forma Normal (3FN): Nenhum atributo n\u00e3o chave deve depender de outro atributo n\u00e3o chave.</li> <li>Formas Normais Superiores: Dependendo da complexidade do banco de dados, pode ser necess\u00e1rio aplicar formas normais superiores.</li> </ul> <p>4. Escolha do Sistema de Gerenciamento de Banco de Dados (SGBD):</p> <ul> <li>SQLite: Ideal para pequenos projetos e aplicativos m\u00f3veis.</li> <li>MySQL: Popular para aplica\u00e7\u00f5es web de m\u00e9dio porte.</li> <li>PostgreSQL: Conhecido por sua robustez e flexibilidade.</li> <li>SQL Server: Oferece recursos avan\u00e7ados e integra\u00e7\u00e3o com outras ferramentas da Microsoft.</li> <li>Oracle: Um dos SGBDs mais poderosos e escal\u00e1veis, mas tamb\u00e9m um dos mais complexos.</li> </ul> <p>5. Otimiza\u00e7\u00e3o de Desempenho:</p> <ul> <li>\u00cdndices: Crie \u00edndices para acelerar as consultas.</li> <li>Consultas Otimizadas: Escreva consultas eficientes para evitar gargalos de desempenho.</li> <li>Partitioning: Divida grandes tabelas em parti\u00e7\u00f5es menores para melhorar o desempenho de consultas.</li> </ul>"},{"location":"_Disciplina/Roteiros/Banco%20de%20Dados/sqlite/#exemplo-pratico-banco-de-dados-para-uma-biblioteca","title":"Exemplo Pr\u00e1tico: Banco de Dados para uma Biblioteca","text":"<p>Entidades:</p> <ul> <li>Livros (id, t\u00edtulo, autor, ISBN, data_publica\u00e7\u00e3o)</li> <li>Autores (id, nome, nacionalidade)</li> <li>Empr\u00e9stimos (id, livro_id, usu\u00e1rio_id, data_emprestimo, data_devolu\u00e7\u00e3o)</li> <li>Usu\u00e1rios (id, nome, email, telefone)</li> </ul> <p>Relacionamentos:</p> <ul> <li>Um livro pode ter um ou mais autores (um para muitos).</li> <li>Um autor pode ter escrito v\u00e1rios livros (um para muitos).</li> <li>Um usu\u00e1rio pode emprestar v\u00e1rios livros (um para muitos).</li> <li>Um livro pode ser emprestado por v\u00e1rios usu\u00e1rios (um para muitos).</li> </ul> <p>Diagrama ER: [Insira aqui um diagrama ER representando as entidades e relacionamentos descritos]</p>"},{"location":"_Disciplina/Roteiros/Banco%20de%20Dados/sqlite/#ferramentas-para-modelagem-de-dados","title":"Ferramentas para Modelagem de Dados","text":"<ul> <li>Diagramas ER: Draw.io, Lucidchart, Microsoft Visio</li> <li>Ferramentas de modelagem de banco de dados: ERwin Data Modeler, MySQL Workbench, SQL Developer</li> </ul>"},{"location":"_Disciplina/Roteiros/Banco%20de%20Dados/sqlite/#consideracoes-adicionais","title":"Considera\u00e7\u00f5es Adicionais","text":"<ul> <li>Escalabilidade: Planeje o banco de dados para que ele possa crescer conforme a sua aplica\u00e7\u00e3o.</li> <li>Seguran\u00e7a: Implemente medidas de seguran\u00e7a para proteger os dados, como autentica\u00e7\u00e3o, autoriza\u00e7\u00e3o e criptografia.</li> <li>Backup: Realize backups regulares do banco de dados para evitar perdas de dados.</li> <li>Manuten\u00e7\u00e3o: Agende tarefas de manuten\u00e7\u00e3o, como otimiza\u00e7\u00e3o e limpeza do banco de dados.</li> </ul>"},{"location":"_Disciplina/Roteiros/Banco%20de%20Dados/sqlite/#preparando-o-projeto-conceitual-e-logico-para-uma-biblioteca","title":"Preparando o Projeto Conceitual e L\u00f3gico para uma Biblioteca","text":""},{"location":"_Disciplina/Roteiros/Banco%20de%20Dados/sqlite/#1-projeto-conceitual-entendendo-as-necessidades","title":"1. Projeto Conceitual: Entendendo as Necessidades","text":"<p>O projeto conceitual define a vis\u00e3o geral do sistema, identificando as entidades, seus atributos e os relacionamentos entre elas. Para uma biblioteca, podemos considerar as seguintes entidades e atributos:</p> <ul> <li>Livros: ID, t\u00edtulo, autor(es), ISBN, editora, ano de publica\u00e7\u00e3o, g\u00eanero, quantidade em estoque, localiza\u00e7\u00e3o na biblioteca.</li> <li>Autores: ID, nome, nacionalidade, data de nascimento, data de falecimento.</li> <li>Usu\u00e1rios: ID, nome, endere\u00e7o, telefone, email, data de cadastro, tipo de usu\u00e1rio (aluno, professor, funcion\u00e1rio, etc.).</li> <li>Empr\u00e9stimos: ID, livro_id, usu\u00e1rio_id, data_emprestimo, data_devolu\u00e7\u00e3o_prevista, data_devolu\u00e7\u00e3o_real.</li> <li>Reservas: ID, livro_id, usu\u00e1rio_id, data_reserva.</li> <li>Categorias: ID, nome (fic\u00e7\u00e3o, n\u00e3o-fic\u00e7\u00e3o, infantil, etc.).</li> </ul> <p>Relacionamentos:</p> <ul> <li>Um livro pode ter v\u00e1rios autores (um para muitos).</li> <li>Um autor pode escrever v\u00e1rios livros (um para muitos).</li> <li>Um livro pode pertencer a uma ou mais categorias (muitos para muitos).</li> <li>Um usu\u00e1rio pode fazer v\u00e1rios empr\u00e9stimos (um para muitos).</li> <li>Um livro pode ser emprestado por v\u00e1rios usu\u00e1rios (um para muitos).</li> <li>Um usu\u00e1rio pode fazer v\u00e1rias reservas (um para muitos).</li> </ul>"},{"location":"_Disciplina/Roteiros/Banco%20de%20Dados/sqlite/#2-projeto-logico-modelando-o-banco-de-dados","title":"2. Projeto L\u00f3gico: Modelando o Banco de Dados","text":"<p>O projeto l\u00f3gico traduz o projeto conceitual em uma estrutura de banco de dados. Para isso, utilizaremos um diagrama entidade-relacionamento (DER) e definiremos as tabelas e seus campos.</p> <p>Diagrama ER Simplificado:</p> <p>[Insira aqui um diagrama ER representando as entidades e relacionamentos descritos acima]</p> <p>Tabelas e Campos:</p> <ul> <li>livros: id (chave prim\u00e1ria), titulo, isbn, ano_publicacao, genero, quantidade_estoque, localizacao</li> <li>autores: id (chave prim\u00e1ria), nome, nacionalidade, data_nascimento, data_falecimento</li> <li>usuarios: id (chave prim\u00e1ria), nome, endereco, telefone, email, data_cadastro, tipo_usuario</li> <li>emprestimos: id (chave prim\u00e1ria), livro_id (chave estrangeira para livros), usuario_id (chave estrangeira para usuarios), data_emprestimo, data_devolucao_prevista, data_devolucao_real</li> <li>reservas: id (chave prim\u00e1ria), livro_id (chave estrangeira para livros), usuario_id (chave estrangeira para usuarios), data_reserva</li> <li>categorias: id (chave prim\u00e1ria), nome</li> <li>livros_categorias: id (chave prim\u00e1ria), livro_id (chave estrangeira para livros), categoria_id (chave estrangeira para categorias) - Tabela para relacionar muitos para muitos entre livros e categorias</li> </ul>"},{"location":"_Disciplina/Roteiros/Banco%20de%20Dados/sqlite/#3-consideracoes-adicionais","title":"3. Considera\u00e7\u00f5es Adicionais","text":"<ul> <li>Normaliza\u00e7\u00e3o: \u00c9 importante garantir que o banco de dados esteja normalizado para evitar redund\u00e2ncias e inconsist\u00eancias.</li> <li>\u00cdndices: Crie \u00edndices para campos que ser\u00e3o frequentemente utilizados em consultas (por exemplo, t\u00edtulo, autor, ISBN).</li> <li>Seguran\u00e7a: Implemente mecanismos de seguran\u00e7a para proteger os dados, como autentica\u00e7\u00e3o e autoriza\u00e7\u00e3o.</li> <li>Desempenho: Otimize as consultas e o banco de dados para garantir um bom desempenho.</li> <li>Escalabilidade: Planeje o banco de dados para que ele possa crescer conforme a necessidade.</li> </ul>"},{"location":"_Disciplina/Roteiros/Banco%20de%20Dados/sqlite/#4-proximos-passos","title":"4. Pr\u00f3ximos Passos","text":"<ul> <li>Detalhamento do Projeto: Refinar o modelo de dados, incluindo detalhes como tipos de dados, tamanhos de campos e restri\u00e7\u00f5es.</li> <li>Implementa\u00e7\u00e3o: Criar o banco de dados utilizando um SGBD (SQLite, MySQL, PostgreSQL, etc.) e as linguagens de consulta SQL.</li> <li>Desenvolvimento da Aplica\u00e7\u00e3o: Desenvolver a aplica\u00e7\u00e3o que interage com o banco de dados, permitindo a inser\u00e7\u00e3o, atualiza\u00e7\u00e3o e consulta de dados.</li> </ul> <p>Ainda poder\u00edamo discutir sobre:</p> <ul> <li>Normaliza\u00e7\u00e3o: Como garantir que o banco de dados esteja na forma normal?</li> <li>\u00cdndices: Quais \u00edndices criar e como otimiz\u00e1-los?</li> <li>Seguran\u00e7a: Quais medidas de seguran\u00e7a implementar?</li> <li>Desempenho: Como otimizar o desempenho do banco de dados?</li> <li>Escolhendo um SGBD: Qual SGBD \u00e9 mais adequado para uma biblioteca?</li> <li>Linguagens de programa\u00e7\u00e3o: Quais linguagens s\u00e3o mais utilizadas para desenvolver aplica\u00e7\u00f5es que interagem com bancos de dados?</li> </ul>"},{"location":"_Disciplina/Roteiros/Banco%20de%20Dados/sqlite/#criando-um-diagrama-de-classes-para-uma-biblioteca-usando-plantuml","title":"Criando um Diagrama de Classes para uma Biblioteca usando PlantUML","text":"<p>Excelente escolha! PlantUML \u00e9 uma ferramenta poderosa para criar diagramas UML de forma simples e r\u00e1pida. Vamos criar um diagrama de classes para a nossa biblioteca, baseado no modelo de dados que j\u00e1 desenvolvemos.</p> <p>Entendendo o Diagrama de Classes:</p> <p>Um diagrama de classes em UML representa as classes de um sistema, seus atributos e m\u00e9todos, al\u00e9m das rela\u00e7\u00f5es entre elas. No contexto de um banco de dados, cada tabela pode ser considerada uma classe, e os campos das tabelas correspondem aos atributos.</p> <p>Criando o Diagrama em PlantUML:</p> <pre><code>@startuml\nclass Livro {\n    - id: int\n    - titulo: string\n    - autor: string\n    - isbn: string\n    - ...\n}\n\nclass Autor {\n    - id: int\n    - nome: string\n    - ...\n}\n\nclass Usuario {\n    - id: int\n    - nome: string\n    - ...\n}\n\nclass Emprestimo {\n    - id: int\n    - livro: Livro\n    - usuario: Usuario\n    - dataEmprestimo: date\n    - ...\n}\n\nLivro \"*\" -- \"1\" Autor : escreve\nLivro \"*\" -- \"1\" Categoria : pertence\nUsuario \"*\" -- \"1\" Emprestimo : realiza\nLivro \"*\" -- \"1\" Emprestimo : emprestado\n\n@enduml\n</code></pre> <p>Explicando o C\u00f3digo:</p> <ul> <li>Classes: Cada classe representa uma tabela do banco de dados.</li> <li>Atributos: Os atributos dentro das classes correspondem aos campos das tabelas.</li> <li>Relacionamentos: As linhas entre as classes representam os relacionamentos.</li> <li>Multiplicidade: Os n\u00fameros ao lado das linhas indicam a quantidade de objetos que podem participar de um relacionamento (1 para um, 1 para muitos, muitos para muitos).</li> </ul> <p>Personalizando o Diagrama:</p> <ul> <li>Mais detalhes: Voc\u00ea pode adicionar mais atributos e m\u00e9todos \u00e0s classes, conforme necess\u00e1rio.</li> <li>Heran\u00e7a: Se houver classes que herdam de outras, utilize a nota\u00e7\u00e3o de heran\u00e7a.</li> <li>Agrega\u00e7\u00e3o e composi\u00e7\u00e3o: Utilize as nota\u00e7\u00f5es adequadas para representar diferentes tipos de associa\u00e7\u00e3o entre classes.</li> <li>Interfaces: Se houver interfaces, defina-as e mostre a implementa\u00e7\u00e3o por classes.</li> </ul> <p>Visualizando o Diagrama:</p> <p>Voc\u00ea pode visualizar o diagrama de v\u00e1rias maneiras:</p> <ul> <li>Online: Utilize ferramentas online como PlantText (https://planttext.com/) para colar o c\u00f3digo e ver o resultado.</li> <li>Ferramentas de modelagem: Utilize ferramentas como Visual Studio Code, IntelliJ IDEA ou outras que suportem PlantUML para criar e visualizar diagramas.</li> </ul> <p>Exemplo Visual:</p> <p>[Insira aqui a imagem gerada pelo PlantUML]</p> <p>Pr\u00f3ximos Passos:</p> <ul> <li>Refine o diagrama: Adicione mais detalhes e ajuste os relacionamentos conforme necess\u00e1rio.</li> <li>Documente o diagrama: Crie uma documenta\u00e7\u00e3o explicando o significado de cada classe, atributo e relacionamento.</li> <li>Utilize o diagrama: Use o diagrama como refer\u00eancia para desenvolver a aplica\u00e7\u00e3o e o banco de dados.</li> </ul> <p>Dicas:</p> <ul> <li>Utilize um editor de c\u00f3digo: Um editor de c\u00f3digo com suporte a PlantUML facilitar\u00e1 a cria\u00e7\u00e3o e edi\u00e7\u00e3o dos diagramas.</li> <li>Explore as funcionalidades do PlantUML: A ferramenta oferece diversas op\u00e7\u00f5es de personaliza\u00e7\u00e3o, como cores, fontes e estilos.</li> <li>Crie diagramas espec\u00edficos: Voc\u00ea pode criar diagramas para diferentes partes do sistema, como diagramas de sequ\u00eancia para representar o fluxo de controle.</li> </ul> <p>Com este diagrama de classes, voc\u00ea ter\u00e1 uma vis\u00e3o clara da estrutura do seu sistema e poder\u00e1 utiliz\u00e1-lo como guia para o desenvolvimento da sua aplica\u00e7\u00e3o.</p>"},{"location":"_Disciplina/Roteiros/Banco%20de%20Dados/sqlite/#detalhamento-do-modelo-de-dados-para-uma-biblioteca-em-sqlite","title":"Detalhamento do Modelo de Dados para uma Biblioteca em SQLite","text":"<p>Entendendo os Tipos de Dados no SQLite:</p> <p>O SQLite oferece uma variedade de tipos de dados, mas os mais comuns para um banco de dados de biblioteca s\u00e3o:</p> <ul> <li>INTEGER: N\u00fameros inteiros.</li> <li>REAL: N\u00fameros de ponto flutuante.</li> <li>TEXT: Texto de tamanho vari\u00e1vel.</li> <li>BLOB: Dados bin\u00e1rios.</li> <li>DATE: Data no formato YYYY-MM-DD.</li> </ul> <p>Definindo os Campos e seus Tipos:</p> <pre><code>CREATE TABLE livros (\n    id INTEGER PRIMARY KEY AUTOINCREMENT,\n    titulo TEXT,\n    autor TEXT,\n    isbn TEXT,\n    editora TEXT,\n    ano_publicacao INTEGER,\n    genero TEXT,\n    quantidade_estoque INTEGER,\n    localizacao TEXT\n);\n\nCREATE TABLE autores (\n    id INTEGER PRIMARY KEY AUTOINCREMENT,\n    nome TEXT,\n    nacionalidade TEXT,\n    data_nascimento DATE,\n    data_falecimento DATE\n);\n\nCREATE TABLE usuarios (\n    id INTEGER PRIMARY KEY AUTOINCREMENT,\n    nome TEXT,\n    endereco TEXT,\n    telefone TEXT,\n    email TEXT,\n    data_cadastro DATE,\n    tipo_usuario TEXT\n);\n\nCREATE TABLE emprestimos (\n    id INTEGER PRIMARY KEY AUTOINCREMENT,\n    livro_id INTEGER,\n    usuario_id INTEGER,\n    data_emprestimo DATE,\n    data_devolucao_prevista DATE,\n    data_devolucao_real DATE,\n    FOREIGN KEY(livro_id) REFERENCES livros(id),\n    FOREIGN KEY(usuario_id) REFERENCES usuarios(id)\n);\n\nCREATE TABLE reservas (\n    id INTEGER PRIMARY KEY AUTOINCREMENT,\n    livro_id INTEGER,\n    usuario_id INTEGER,\n    data_reserva DATE,\n    FOREIGN KEY(livro_id) REFERENCES livros(id),\n    FOREIGN KEY(usuario_id) REFERENCES usuarios(id)\n);\n\nCREATE TABLE categorias (\n    id INTEGER PRIMARY KEY AUTOINCREMENT,\n    nome TEXT\n);\n\nCREATE TABLE livros_categorias (\n    id INTEGER PRIMARY KEY AUTOINCREMENT,\n    livro_id INTEGER,\n    categoria_id INTEGER,\n    FOREIGN KEY(livro_id) REFERENCES livros(id),\n    FOREIGN KEY(categoria_id) REFERENCES categorias(id)\n);\n</code></pre> <p>Justificativa dos Tipos de Dados:</p> <ul> <li>INTEGER: Ideal para IDs, anos de publica\u00e7\u00e3o e quantidade em estoque.</li> <li>TEXT: Utilizado para campos que armazenam texto, como t\u00edtulo, autor, g\u00eanero, etc.</li> <li>DATE: Armazena datas no formato YYYY-MM-DD.</li> <li>AUTOINCREMENT: Incrementa automaticamente o valor do ID a cada nova inser\u00e7\u00e3o.</li> </ul> <p>Restri\u00e7\u00f5es Adicionais:</p> <ul> <li>UNIQUE: Garante que um valor seja \u00fanico em uma coluna (ex: ISBN).</li> <li>NOT NULL: Impede que um campo seja nulo (ex: t\u00edtulo, autor).</li> <li>CHECK: Imp\u00f5e uma condi\u00e7\u00e3o que deve ser verdadeira para cada linha (ex: quantidade_estoque &gt;= 0).</li> </ul> <p>Exemplo com Restri\u00e7\u00f5es:</p> <pre><code>CREATE TABLE livros (\n    id INTEGER PRIMARY KEY AUTOINCREMENT,\n    isbn TEXT UNIQUE NOT NULL,\n    ...\n    CHECK (quantidade_estoque &gt;= 0)\n);\n</code></pre> <p>Considera\u00e7\u00f5es Adicionais:</p> <ul> <li>Tamanho dos campos: O SQLite ajusta automaticamente o tamanho dos campos de texto, mas \u00e9 poss\u00edvel definir um tamanho m\u00e1ximo se necess\u00e1rio.</li> <li>\u00cdndices: Crie \u00edndices em campos que ser\u00e3o frequentemente utilizados em consultas (ex: t\u00edtulo, autor, ISBN).</li> <li>Normaliza\u00e7\u00e3o: Verifique se o modelo est\u00e1 normalizado para evitar redund\u00e2ncias.</li> <li>Otimiza\u00e7\u00e3o: Avalie a necessidade de criar triggers ou views para realizar opera\u00e7\u00f5es complexas.</li> </ul> <p>Pr\u00f3ximos Passos:</p> <ul> <li>Popular o banco de dados: Inserir dados nas tabelas.</li> <li>Desenvolver a aplica\u00e7\u00e3o: Criar uma interface para interagir com o banco de dados.</li> </ul>"},{"location":"_Disciplina/Roteiros/Django/01_Projeto_Streaming/","title":"01 Projeto Streaming","text":"<p>Para propor um processo de desenvolvimento de um aplicativo de streaming de \u00e1udio e v\u00eddeo, \u00e9 necess\u00e1rio levar em considera\u00e7\u00e3o as etapas de planejamento, design, implementa\u00e7\u00e3o e manuten\u00e7\u00e3o, al\u00e9m de aspectos t\u00e9cnicos e de infraestrutura. Abaixo, apresentamos um processo detalhado dividido em fases principais:</p>"},{"location":"_Disciplina/Roteiros/Django/01_Projeto_Streaming/#1-planejamento","title":"1. Planejamento","text":"<ul> <li>Definir os objetivos: Estabelecer qual ser\u00e1 o p\u00fablico-alvo e as principais funcionalidades (ex: transmiss\u00e3o ao vivo, playlists personalizadas, v\u00eddeos on demand, etc.).</li> <li>Pesquisa de mercado: Analisar apps concorrentes (Spotify, YouTube, Netflix, etc.) para identificar oportunidades e nichos espec\u00edficos.</li> <li>Requisitos funcionais:</li> <li>Cadastro e login de usu\u00e1rios.</li> <li>Upload de conte\u00fado por criadores.</li> <li>Streaming de \u00e1udio e v\u00eddeo.</li> <li>Qualidade adaptativa do stream (ABR \u2013 Adaptive Bitrate Streaming).</li> <li>Recomenda\u00e7\u00f5es personalizadas.</li> <li>Fun\u00e7\u00f5es de compartilhamento e integra\u00e7\u00e3o social.</li> <li>Requisitos t\u00e9cnicos:</li> <li>Suporte a diversos dispositivos (web, mobile, smart TVs).</li> <li>Suporte a diferentes formatos de arquivo (MP3, MP4, HLS, DASH).</li> <li>Sistema de cache para otimizar o carregamento de v\u00eddeos.</li> <li>Integra\u00e7\u00e3o com sistemas de pagamento para assinaturas.</li> </ul>"},{"location":"_Disciplina/Roteiros/Django/01_Projeto_Streaming/#2-arquitetura-do-sistema","title":"2. Arquitetura do Sistema","text":"<ul> <li>Backend:</li> <li>Escolher uma plataforma para gerenciar a infraestrutura (ex: AWS, Azure, Google Cloud).</li> <li>Utilizar servidores de m\u00eddia para transcodifica\u00e7\u00e3o (FFmpeg, Wowza, etc.).</li> <li>Implementar APIs RESTful (pode ser com Django para Python, .NET ou Node.js).</li> <li>Banco de dados para armazenar informa\u00e7\u00f5es sobre os usu\u00e1rios, conte\u00fados e hist\u00f3rico de navega\u00e7\u00e3o (ex: PostgreSQL, MongoDB).</li> <li>Servi\u00e7os de recomenda\u00e7\u00e3o de conte\u00fado com machine learning (ex: TensorFlow, PyTorch).</li> <li>Frontend:</li> <li>Criar interfaces responsivas usando frameworks como React, Vue.js ou Angular.</li> <li>Garantir uma boa experi\u00eancia do usu\u00e1rio (UX) e uma interface intuitiva (UI), especialmente no consumo de m\u00eddia.</li> <li>Entrega de conte\u00fado:</li> <li>Utilizar uma CDN (Content Delivery Network) para distribuir o conte\u00fado globalmente com baixa lat\u00eancia.</li> <li>Implementar uma estrat\u00e9gia de entrega adaptativa (HLS, DASH) para que o usu\u00e1rio receba uma qualidade de streaming adequada \u00e0 sua conex\u00e3o.</li> </ul>"},{"location":"_Disciplina/Roteiros/Django/01_Projeto_Streaming/#3-design","title":"3. Design","text":"<ul> <li>Wireframes e Prototipagem: Desenvolver esbo\u00e7os das interfaces, com navega\u00e7\u00e3o clara e layout que permita f\u00e1cil consumo de conte\u00fado.</li> <li>Design da Experi\u00eancia do Usu\u00e1rio (UX): Definir fluxos de intera\u00e7\u00e3o como login, navega\u00e7\u00e3o por categorias, busca de conte\u00fado, player de v\u00eddeo/\u00e1udio, e feedback ao usu\u00e1rio.</li> <li>Identidade visual: Desenvolver a identidade visual do app, cores, tipografia e estilo, mantendo consist\u00eancia com o p\u00fablico-alvo.</li> </ul>"},{"location":"_Disciplina/Roteiros/Django/01_Projeto_Streaming/#4-implementacao","title":"4. Implementa\u00e7\u00e3o","text":"<ul> <li>Desenvolvimento do Backend:</li> <li>Criar as APIs para o gerenciamento de conte\u00fado (upload, streaming, recomenda\u00e7\u00f5es).</li> <li>Configurar a CDN e servidores de m\u00eddia.</li> <li>Desenvolver um sistema de autentica\u00e7\u00e3o com OAuth2 para permitir login via redes sociais ou e-mail.</li> <li>Implementar um sistema de transcodifica\u00e7\u00e3o para converter os v\u00eddeos/\u00e1udios para diferentes formatos e resolu\u00e7\u00f5es.</li> <li>Desenvolvimento do Frontend:</li> <li>Desenvolver a interface de usu\u00e1rio responsiva, com componentes de player de v\u00eddeo e \u00e1udio.</li> <li>Integrar o frontend com as APIs do backend para autentica\u00e7\u00e3o, carregamento e busca de conte\u00fados.</li> <li>Criar funcionalidade de recomenda\u00e7\u00e3o e playlists personalizadas.</li> <li>Integra\u00e7\u00e3o de pagamento: Configurar gateways de pagamento (ex: Stripe, PayPal) para planos de assinatura ou compra de conte\u00fado.</li> <li>Implementar seguran\u00e7a:</li> <li>SSL/TLS para proteger dados transmitidos.</li> <li>DRM (Digital Rights Management) para proteger o conte\u00fado de c\u00f3pias ilegais.</li> </ul>"},{"location":"_Disciplina/Roteiros/Django/01_Projeto_Streaming/#5-testes","title":"5. Testes","text":"<ul> <li>Testes de Unidade e Funcionais: Validar cada funcionalidade individualmente e o fluxo geral do app (upload de conte\u00fado, streaming, pagamento).</li> <li>Testes de Desempenho e Escalabilidade:</li> <li>Simular a carga de milhares de usu\u00e1rios simult\u00e2neos.</li> <li>Verificar a lat\u00eancia do sistema e capacidade do servidor.</li> <li>Testes de UX: Realizar testes de usabilidade com usu\u00e1rios reais para avaliar a experi\u00eancia e encontrar pontos de melhoria.</li> <li>Testes de Seguran\u00e7a: Testar vulnerabilidades como inje\u00e7\u00e3o de SQL, CSRF, XSS, entre outros.</li> </ul>"},{"location":"_Disciplina/Roteiros/Django/01_Projeto_Streaming/#6-lancamento","title":"6. Lan\u00e7amento","text":"<ul> <li>Publica\u00e7\u00e3o:</li> <li>Publicar o app nas lojas (Google Play, Apple App Store) e na web.</li> <li>Realizar um lan\u00e7amento progressivo para monitorar o desempenho com uma base de usu\u00e1rios controlada antes de expandir.</li> <li>Marketing:</li> <li>Estrat\u00e9gias de SEO para aumentar a visibilidade.</li> <li>Utilizar campanhas de marketing digital (Google Ads, redes sociais, etc.).</li> <li>Parcerias com criadores de conte\u00fado para promover a plataforma.</li> </ul>"},{"location":"_Disciplina/Roteiros/Django/01_Projeto_Streaming/#7-manutencao-e-suporte","title":"7. Manuten\u00e7\u00e3o e Suporte","text":"<ul> <li>Monitoramento e An\u00e1lise:</li> <li>Monitorar o desempenho da infraestrutura com ferramentas como New Relic, AWS CloudWatch, etc.</li> <li>Implementar uma an\u00e1lise cont\u00ednua do comportamento do usu\u00e1rio para ajustar o algoritmo de recomenda\u00e7\u00f5es.</li> <li>Atualiza\u00e7\u00f5es cont\u00ednuas:</li> <li>Realizar melhorias peri\u00f3dicas com base no feedback dos usu\u00e1rios.</li> <li>Implementar novas funcionalidades e corrigir bugs.</li> <li>Escalar a infraestrutura conforme o n\u00famero de usu\u00e1rios cresce.</li> </ul> <p>Este processo garante que o desenvolvimento de um app de streaming de \u00e1udio e v\u00eddeo seja bem estruturado, escal\u00e1vel e capaz de oferecer uma boa experi\u00eancia para os usu\u00e1rios finais.</p>"},{"location":"_Disciplina/Roteiros/Django/02_Modelagem_Streaming/","title":"02 Modelagem Streaming","text":"<p>A modelagem de dados para um sistema que envolve o cadastro/login de usu\u00e1rios e o upload de conte\u00fado por criadores deve cobrir aspectos como autentica\u00e7\u00e3o, controle de permiss\u00f5es e gerenciamento de conte\u00fado. Abaixo est\u00e1 uma proposta de modelagem de dados com entidades essenciais.</p>"},{"location":"_Disciplina/Roteiros/Django/02_Modelagem_Streaming/#1-tabela-user-usuario","title":"1. Tabela <code>User</code> (Usu\u00e1rio)","text":"<p>Esta tabela armazenar\u00e1 os dados dos usu\u00e1rios, incluindo informa\u00e7\u00f5es b\u00e1sicas e de autentica\u00e7\u00e3o.</p> Campo Tipo Descri\u00e7\u00e3o <code>id</code> <code>INT</code> (PK) Identificador \u00fanico do usu\u00e1rio. <code>username</code> <code>VARCHAR</code> Nome de usu\u00e1rio, \u00fanico para cada usu\u00e1rio. <code>email</code> <code>VARCHAR</code> E-mail do usu\u00e1rio, \u00fanico e usado para login. <code>password_hash</code> <code>VARCHAR</code> Hash da senha do usu\u00e1rio para autentica\u00e7\u00e3o. <code>full_name</code> <code>VARCHAR</code> Nome completo do usu\u00e1rio. <code>profile_pic</code> <code>VARCHAR</code> URL da foto de perfil do usu\u00e1rio (opcional). <code>role</code> <code>VARCHAR</code> Fun\u00e7\u00e3o do usu\u00e1rio, como \"creator\" ou \"viewer\". <code>date_joined</code> <code>DATETIME</code> Data e hora do cadastro do usu\u00e1rio. <code>last_login</code> <code>DATETIME</code> \u00daltima data e hora em que o usu\u00e1rio fez login. <code>is_active</code> <code>BOOLEAN</code> Indica se o usu\u00e1rio est\u00e1 ativo ou foi suspenso. <ul> <li>Descri\u00e7\u00e3o: Esta tabela mant\u00e9m os dados principais dos usu\u00e1rios, incluindo informa\u00e7\u00f5es de login e permiss\u00f5es.</li> </ul>"},{"location":"_Disciplina/Roteiros/Django/02_Modelagem_Streaming/#2-tabela-content-conteudo","title":"2. Tabela <code>Content</code> (Conte\u00fado)","text":"<p>Esta tabela armazenar\u00e1 os dados do conte\u00fado carregado pelos criadores.</p> Campo Tipo Descri\u00e7\u00e3o <code>id</code> <code>INT</code> (PK) Identificador \u00fanico do conte\u00fado. <code>user_id</code> <code>INT</code> (FK) Refer\u00eancia ao usu\u00e1rio criador do conte\u00fado. <code>title</code> <code>VARCHAR</code> T\u00edtulo do conte\u00fado. <code>description</code> <code>TEXT</code> Descri\u00e7\u00e3o detalhada do conte\u00fado. <code>file_url</code> <code>VARCHAR</code> URL do arquivo de m\u00eddia (\u00e1udio ou v\u00eddeo). <code>thumbnail_url</code> <code>VARCHAR</code> URL da imagem de miniatura do conte\u00fado. <code>content_type</code> <code>VARCHAR</code> Tipo de conte\u00fado: \"audio\" ou \"video\". <code>upload_date</code> <code>DATETIME</code> Data e hora do upload. <code>views</code> <code>INT</code> N\u00famero de visualiza\u00e7\u00f5es ou plays do conte\u00fado. <code>likes</code> <code>INT</code> N\u00famero de curtidas que o conte\u00fado recebeu. <code>is_public</code> <code>BOOLEAN</code> Indica se o conte\u00fado est\u00e1 dispon\u00edvel publicamente. <code>status</code> <code>VARCHAR</code> Status do conte\u00fado: \"published\", \"draft\", \"blocked\". <ul> <li>Descri\u00e7\u00e3o: Armazena os dados de cada conte\u00fado enviado pelos criadores, incluindo metadados, links de arquivos e status de visibilidade.</li> </ul>"},{"location":"_Disciplina/Roteiros/Django/02_Modelagem_Streaming/#3-tabela-role-permissoes-de-usuario","title":"3. Tabela <code>Role</code> (Permiss\u00f5es de Usu\u00e1rio)","text":"<p>Tabela para definir diferentes permiss\u00f5es de usu\u00e1rio.</p> Campo Tipo Descri\u00e7\u00e3o <code>id</code> <code>INT</code> (PK) Identificador \u00fanico da fun\u00e7\u00e3o. <code>role_name</code> <code>VARCHAR</code> Nome da fun\u00e7\u00e3o (creator, viewer). <code>description</code> <code>TEXT</code> Descri\u00e7\u00e3o das permiss\u00f5es dessa fun\u00e7\u00e3o. <ul> <li>Descri\u00e7\u00e3o: Cada usu\u00e1rio pode ter um papel (role), como criador de conte\u00fado ou visualizador.</li> </ul>"},{"location":"_Disciplina/Roteiros/Django/02_Modelagem_Streaming/#4-tabela-playlist-playlist","title":"4. Tabela <code>Playlist</code> (Playlist)","text":"<p>Usu\u00e1rios podem criar listas de reprodu\u00e7\u00e3o com o conte\u00fado carregado.</p> Campo Tipo Descri\u00e7\u00e3o <code>id</code> <code>INT</code> (PK) Identificador \u00fanico da playlist. <code>user_id</code> <code>INT</code> (FK) Refer\u00eancia ao usu\u00e1rio que criou a playlist. <code>title</code> <code>VARCHAR</code> T\u00edtulo da playlist. <code>description</code> <code>TEXT</code> Descri\u00e7\u00e3o da playlist. <code>is_public</code> <code>BOOLEAN</code> Indica se a playlist \u00e9 p\u00fablica ou privada. <code>creation_date</code> <code>DATETIME</code> Data de cria\u00e7\u00e3o da playlist. <ul> <li>Descri\u00e7\u00e3o: Usu\u00e1rios (criadores ou espectadores) podem organizar conte\u00fados em playlists.</li> </ul>"},{"location":"_Disciplina/Roteiros/Django/02_Modelagem_Streaming/#5-tabela-content_playlist-conteudo-em-playlist","title":"5. Tabela <code>Content_Playlist</code> (Conte\u00fado em Playlist)","text":"<p>Rela\u00e7\u00e3o entre conte\u00fados e playlists.</p> Campo Tipo Descri\u00e7\u00e3o <code>playlist_id</code> <code>INT</code> (FK) Refer\u00eancia \u00e0 playlist. <code>content_id</code> <code>INT</code> (FK) Refer\u00eancia ao conte\u00fado. <ul> <li>Descri\u00e7\u00e3o: Relaciona conte\u00fados espec\u00edficos \u00e0s playlists criadas por usu\u00e1rios.</li> </ul>"},{"location":"_Disciplina/Roteiros/Django/02_Modelagem_Streaming/#6-tabela-comment-comentarios","title":"6. Tabela <code>Comment</code> (Coment\u00e1rios)","text":"<p>Usu\u00e1rios podem comentar sobre os conte\u00fados.</p> Campo Tipo Descri\u00e7\u00e3o <code>id</code> <code>INT</code> (PK) Identificador \u00fanico do coment\u00e1rio. <code>user_id</code> <code>INT</code> (FK) Refer\u00eancia ao usu\u00e1rio que fez o coment\u00e1rio. <code>content_id</code> <code>INT</code> (FK) Refer\u00eancia ao conte\u00fado comentado. <code>comment_text</code> <code>TEXT</code> Texto do coment\u00e1rio. <code>comment_date</code> <code>DATETIME</code> Data e hora do coment\u00e1rio. <ul> <li>Descri\u00e7\u00e3o: Cada coment\u00e1rio est\u00e1 associado a um conte\u00fado e ao usu\u00e1rio que o postou.</li> </ul>"},{"location":"_Disciplina/Roteiros/Django/02_Modelagem_Streaming/#7-tabela-like-curtidas","title":"7. Tabela <code>Like</code> (Curtidas)","text":"<p>Armazena as curtidas de usu\u00e1rios nos conte\u00fados.</p> Campo Tipo Descri\u00e7\u00e3o <code>id</code> <code>INT</code> (PK) Identificador \u00fanico da curtida. <code>user_id</code> <code>INT</code> (FK) Refer\u00eancia ao usu\u00e1rio que curtiu o conte\u00fado. <code>content_id</code> <code>INT</code> (FK) Refer\u00eancia ao conte\u00fado curtido. <code>like_date</code> <code>DATETIME</code> Data e hora da curtida. <ul> <li>Descri\u00e7\u00e3o: Registra as intera\u00e7\u00f5es de curtidas entre usu\u00e1rios e conte\u00fados.</li> </ul>"},{"location":"_Disciplina/Roteiros/Django/02_Modelagem_Streaming/#8-tabela-subscription-assinaturas","title":"8. Tabela <code>Subscription</code> (Assinaturas)","text":"<p>Gerencia as assinaturas dos usu\u00e1rios para acessar conte\u00fados premium.</p> Campo Tipo Descri\u00e7\u00e3o <code>id</code> <code>INT</code> (PK) Identificador \u00fanico da assinatura. <code>user_id</code> <code>INT</code> (FK) Refer\u00eancia ao usu\u00e1rio que assinou. <code>start_date</code> <code>DATETIME</code> Data de in\u00edcio da assinatura. <code>end_date</code> <code>DATETIME</code> Data de t\u00e9rmino da assinatura. <code>status</code> <code>VARCHAR</code> Status da assinatura: \"active\", \"canceled\", \"expired\". <ul> <li>Descri\u00e7\u00e3o: Registra as assinaturas dos usu\u00e1rios ao servi\u00e7o para acessarem funcionalidades premium.</li> </ul>"},{"location":"_Disciplina/Roteiros/Django/02_Modelagem_Streaming/#9-tabela-view_history-historico-de-visualizacao","title":"9. Tabela <code>View_History</code> (Hist\u00f3rico de Visualiza\u00e7\u00e3o)","text":"<p>Armazena o hist\u00f3rico de consumo de m\u00eddia de cada usu\u00e1rio.</p> Campo Tipo Descri\u00e7\u00e3o <code>id</code> <code>INT</code> (PK) Identificador \u00fanico do hist\u00f3rico de visualiza\u00e7\u00e3o. <code>user_id</code> <code>INT</code> (FK) Refer\u00eancia ao usu\u00e1rio que assistiu/escutou o conte\u00fado. <code>content_id</code> <code>INT</code> (FK) Refer\u00eancia ao conte\u00fado visualizado/escutado. <code>view_date</code> <code>DATETIME</code> Data e hora em que o conte\u00fado foi acessado."},{"location":"_Disciplina/Roteiros/Django/02_Modelagem_Streaming/#relacionamentos-principais","title":"Relacionamentos principais:","text":"<ul> <li>User-Content: Cada conte\u00fado \u00e9 criado por um usu\u00e1rio (rela\u00e7\u00e3o 1:N).</li> <li>User-Playlist: Um usu\u00e1rio pode criar v\u00e1rias playlists (1:N).</li> <li>Content-Playlist: Conte\u00fados podem pertencer a v\u00e1rias playlists e vice-versa (N:M).</li> <li>User-Like-Content: Usu\u00e1rios podem curtir v\u00e1rios conte\u00fados, e cada conte\u00fado pode receber v\u00e1rias curtidas (N:M).</li> <li>User-Comment-Content: Um usu\u00e1rio pode fazer v\u00e1rios coment\u00e1rios sobre diferentes conte\u00fados (1:N).</li> </ul> <p>Esse modelo cobre os principais aspectos de um sistema de streaming com suporte a login, upload de conte\u00fado e intera\u00e7\u00f5es como curtidas e coment\u00e1rios.</p> <p>Abaixo est\u00e1 a proposta de um diagrama de classes para a modelagem de dados mencionada, considerando as entidades principais, atributos e relacionamentos:</p>"},{"location":"_Disciplina/Roteiros/Django/02_Modelagem_Streaming/#classes-principais","title":"Classes Principais:","text":"<ol> <li>User</li> <li><code>id: int</code></li> <li><code>username: str</code></li> <li><code>email: str</code></li> <li><code>password_hash: str</code></li> <li><code>full_name: str</code></li> <li><code>profile_pic: str</code></li> <li><code>role: str</code></li> <li><code>date_joined: datetime</code></li> <li><code>last_login: datetime</code></li> <li><code>is_active: bool</code></li> <li> <p>M\u00e9todos:</p> <ul> <li><code>login()</code></li> <li><code>register()</code></li> <li><code>updateProfile()</code></li> </ul> </li> <li> <p>Content</p> </li> <li><code>id: int</code></li> <li><code>title: str</code></li> <li><code>description: str</code></li> <li><code>file_url: str</code></li> <li><code>thumbnail_url: str</code></li> <li><code>content_type: str</code></li> <li><code>upload_date: datetime</code></li> <li><code>views: int</code></li> <li><code>likes: int</code></li> <li><code>is_public: bool</code></li> <li><code>status: str</code></li> <li> <p>M\u00e9todos:</p> <ul> <li><code>upload()</code></li> <li><code>deleteContent()</code></li> <li><code>updateContent()</code></li> </ul> </li> <li> <p>Playlist</p> </li> <li><code>id: int</code></li> <li><code>title: str</code></li> <li><code>description: str</code></li> <li><code>is_public: bool</code></li> <li><code>creation_date: datetime</code></li> <li> <p>M\u00e9todos:</p> <ul> <li><code>addContent()</code></li> <li><code>removeContent()</code></li> </ul> </li> <li> <p>Comment</p> </li> <li><code>id: int</code></li> <li><code>comment_text: str</code></li> <li><code>comment_date: datetime</code></li> <li> <p>M\u00e9todos:</p> <ul> <li><code>addComment()</code></li> <li><code>deleteComment()</code></li> </ul> </li> <li> <p>Like</p> </li> <li><code>id: int</code></li> <li><code>like_date: datetime</code></li> <li> <p>M\u00e9todos:</p> <ul> <li><code>addLike()</code></li> <li><code>removeLike()</code></li> </ul> </li> <li> <p>Subscription</p> </li> <li><code>id: int</code></li> <li><code>start_date: datetime</code></li> <li><code>end_date: datetime</code></li> <li><code>status: str</code></li> <li> <p>M\u00e9todos:</p> <ul> <li><code>subscribe()</code></li> <li><code>cancelSubscription()</code></li> </ul> </li> <li> <p>ViewHistory</p> </li> <li><code>id: int</code></li> <li><code>view_date: datetime</code></li> <li>M\u00e9todos:<ul> <li><code>addView()</code></li> <li><code>getHistory()</code></li> </ul> </li> </ol>"},{"location":"_Disciplina/Roteiros/Django/02_Modelagem_Streaming/#relacionamentos","title":"Relacionamentos:","text":"<ol> <li>User - Content: </li> <li>Rela\u00e7\u00e3o 1:N (Um usu\u00e1rio pode criar v\u00e1rios conte\u00fados).</li> <li> <p>Um criador de conte\u00fado (<code>User</code>) possui uma cole\u00e7\u00e3o de conte\u00fados associados, o que pode ser modelado pela rela\u00e7\u00e3o de composi\u00e7\u00e3o entre <code>User</code> e <code>Content</code>.</p> </li> <li> <p>User - Playlist: </p> </li> <li>Rela\u00e7\u00e3o 1:N (Um usu\u00e1rio pode criar v\u00e1rias playlists).</li> <li> <p>Uma playlist pode conter m\u00faltiplos conte\u00fados, e um usu\u00e1rio pode ser dono de v\u00e1rias playlists.</p> </li> <li> <p>Playlist - Content: </p> </li> <li>Rela\u00e7\u00e3o N:M (Uma playlist pode ter v\u00e1rios conte\u00fados, e um conte\u00fado pode estar em v\u00e1rias playlists).</li> <li> <p>Essa rela\u00e7\u00e3o pode ser representada por uma classe associativa (ou intermedi\u00e1ria), ligando <code>Playlist</code> e <code>Content</code>.</p> </li> <li> <p>User - Comment: </p> </li> <li>Rela\u00e7\u00e3o 1:N (Um usu\u00e1rio pode fazer v\u00e1rios coment\u00e1rios).</li> <li> <p>Um coment\u00e1rio sempre estar\u00e1 associado a um conte\u00fado espec\u00edfico.</p> </li> <li> <p>User - Like - Content: </p> </li> <li>Rela\u00e7\u00e3o N:M (Um usu\u00e1rio pode curtir v\u00e1rios conte\u00fados, e um conte\u00fado pode ter v\u00e1rias curtidas).</li> <li> <p>A classe <code>Like</code> serve como a entidade intermedi\u00e1ria, conectando <code>User</code> e <code>Content</code>.</p> </li> <li> <p>User - Subscription: </p> </li> <li>Rela\u00e7\u00e3o 1:1 (Um usu\u00e1rio pode ter uma assinatura ativa).</li> <li> <p>O usu\u00e1rio pode se inscrever ou cancelar a assinatura.</p> </li> <li> <p>User - ViewHistory - Content:</p> </li> <li>Rela\u00e7\u00e3o N:M (Um usu\u00e1rio pode assistir a v\u00e1rios conte\u00fados e um conte\u00fado pode ser assistido por v\u00e1rios usu\u00e1rios).</li> <li>A classe <code>ViewHistory</code> serve como entidade intermedi\u00e1ria.</li> </ol>"},{"location":"_Disciplina/Roteiros/Django/02_Modelagem_Streaming/#diagrama-de-classes","title":"Diagrama de Classes:","text":"<pre><code>+----------------+       1       +-----------------+       N        +--------------+\n|     User       |&lt;----------------|    Content     |&lt;----------------|  Playlist    |\n+----------------+                 +-----------------+                +--------------+\n| - id           |                 | - id            |                | - id         |\n| - username     |                 | - title         |                | - title      |\n| - email        |                 | - description   |                | - description|\n| - password_hash|                 | - file_url      |                | - is_public  |\n| - role         |                 | - content_type  |                | - creation_date|\n| - date_joined  |                 | - upload_date   |                +--------------+\n+----------------+                 +-----------------+                | addContent() |\n| login()        |                 | upload()        |                | removeContent()|\n| register()     |                 | deleteContent() |                +--------------+\n+----------------+                 +-----------------+\n           |                             |\n           |                             | N\n           | 1                           v\n           v                         +----------------+\n     +--------------+                 |     Comment    |\n     | Subscription |                 +----------------+\n     +--------------+                 | - id           |\n     | - id         |                 | - comment_text |\n     | - start_date |                 | - comment_date |\n     | - end_date   |                 +----------------+\n     | - status     |                 | addComment()   |\n     +--------------+                 | deleteComment()|\n     | subscribe()  |                 +----------------+\n     | cancelSub()  |\n     +--------------+\n</code></pre>"},{"location":"_Disciplina/Roteiros/Django/02_Modelagem_Streaming/#explicacao-do-diagrama","title":"Explica\u00e7\u00e3o do Diagrama:","text":"<ul> <li>User: Centraliza a rela\u00e7\u00e3o com conte\u00fados, playlists, curtidas, assinaturas, hist\u00f3rico de visualiza\u00e7\u00e3o e coment\u00e1rios.</li> <li>Content: Relaciona-se diretamente com o usu\u00e1rio que o criou e pode estar em v\u00e1rias playlists.</li> <li>Playlist: Um usu\u00e1rio pode criar v\u00e1rias playlists, que por sua vez podem conter v\u00e1rios conte\u00fados.</li> <li>Comment e Like: Representam intera\u00e7\u00f5es dos usu\u00e1rios com os conte\u00fados.</li> <li>Subscription: Relaciona-se diretamente ao usu\u00e1rio, representando seu status de assinatura.</li> <li>ViewHistory: Armazena o hist\u00f3rico de visualiza\u00e7\u00e3o do usu\u00e1rio em rela\u00e7\u00e3o aos conte\u00fados consumidos.</li> </ul> <p>Este diagrama captura as intera\u00e7\u00f5es principais entre os dados de usu\u00e1rios, conte\u00fado e funcionalidades relacionadas ao streaming.</p> <p>Aqui est\u00e1 o c\u00f3digo em PlantUML para o diagrama de classes proposto:</p> <pre><code>@startuml\n\nclass User {\n    + int id\n    + String username\n    + String email\n    + String password_hash\n    + String full_name\n    + String profile_pic\n    + String role\n    + DateTime date_joined\n    + DateTime last_login\n    + boolean is_active\n    --\n    + login()\n    + register()\n    + updateProfile()\n}\n\nclass Content {\n    + int id\n    + String title\n    + String description\n    + String file_url\n    + String thumbnail_url\n    + String content_type\n    + DateTime upload_date\n    + int views\n    + int likes\n    + boolean is_public\n    + String status\n    --\n    + upload()\n    + deleteContent()\n    + updateContent()\n}\n\nclass Playlist {\n    + int id\n    + String title\n    + String description\n    + boolean is_public\n    + DateTime creation_date\n    --\n    + addContent()\n    + removeContent()\n}\n\nclass Comment {\n    + int id\n    + String comment_text\n    + DateTime comment_date\n    --\n    + addComment()\n    + deleteComment()\n}\n\nclass Like {\n    + int id\n    + DateTime like_date\n    --\n    + addLike()\n    + removeLike()\n}\n\nclass Subscription {\n    + int id\n    + DateTime start_date\n    + DateTime end_date\n    + String status\n    --\n    + subscribe()\n    + cancelSubscription()\n}\n\nclass ViewHistory {\n    + int id\n    + DateTime view_date\n    --\n    + addView()\n    + getHistory()\n}\n\nUser \"1\" -- \"N\" Content : \"creates\"\nUser \"1\" -- \"N\" Playlist : \"owns\"\nPlaylist \"N\" -- \"M\" Content : \"contains\"\nUser \"1\" -- \"N\" Comment : \"makes\"\nUser \"1\" -- \"N\" Like : \"likes\"\nContent \"1\" -- \"N\" Comment : \"has\"\nContent \"1\" -- \"N\" Like : \"has\"\nUser \"1\" -- \"1\" Subscription : \"subscribes to\"\nUser \"1\" -- \"N\" ViewHistory : \"views\"\nContent \"1\" -- \"N\" ViewHistory : \"viewed by\"\n\n@enduml\n</code></pre> <p>Voc\u00ea pode copiar esse c\u00f3digo e col\u00e1-lo em um editor compat\u00edvel com PlantUML para gerar o diagrama de classes. O diagrama refletir\u00e1 os relacionamentos e atributos discutidos anteriormente.</p>"},{"location":"_Disciplina/Roteiros/Django/03_Rest_Streaming/","title":"03 Rest Streaming","text":"<p>Para criar um aplicativo REST Django que inclua a classe <code>Content</code>, vamos seguir os passos abaixo:</p>"},{"location":"_Disciplina/Roteiros/Django/03_Rest_Streaming/#1-configuracao-inicial-do-projeto-django","title":"1. Configura\u00e7\u00e3o Inicial do Projeto Django","text":"<p>Primeiro, voc\u00ea precisar\u00e1 criar um novo projeto Django e adicionar um app para gerenciar o conte\u00fado.</p> <ol> <li>Adicionar o Virtual Enviroment</li> </ol> <pre><code>ctrl + shift + P\n</code></pre> <ol> <li>Instalar Django</li> </ol> <pre><code>pip install django\n</code></pre> <ol> <li>Crie um novo projeto Django:</li> </ol> <pre><code>django-admin startproject streaming_platform .\n</code></pre> <ol> <li>Crie um app dentro do projeto:</li> </ol> <pre><code>python manage.py startapp content_app\n</code></pre> <ol> <li>Instalar Rest Django Framework</li> </ol> <pre><code>pip install djangorestframework\n</code></pre> <ol> <li>Adicione o app no arquivo <code>settings.py</code>:</li> </ol> <pre><code>   INSTALLED_APPS = [\n       # outros apps padr\u00e3o\n       'rest_framework',\n       'content_app',\n   ]\n</code></pre>"},{"location":"_Disciplina/Roteiros/Django/03_Rest_Streaming/#2-definindo-o-modelo-content","title":"2. Definindo o Modelo <code>Content</code>","text":"<p>No arquivo <code>content_app/models.py</code>, vamos definir a classe <code>Content</code> conforme o modelo proposto:</p> <pre><code>from django.db import models\nfrom django.contrib.auth.models import User\n\nclass Content(models.Model):\n    CONTENT_TYPES = [\n        ('audio', 'Audio'),\n        ('video', 'Video'),\n    ]\n\n    title = models.CharField(max_length=255)\n    description = models.TextField()\n    file_url = models.URLField()\n    thumbnail_url = models.URLField(blank=True, null=True)\n    content_type = models.CharField(max_length=10, choices=CONTENT_TYPES)\n    upload_date = models.DateTimeField(auto_now_add=True)\n    views = models.IntegerField(default=0)\n    likes = models.IntegerField(default=0)\n    is_public = models.BooleanField(default=True)\n    status = models.CharField(max_length=20, default='published')\n    creator = models.ForeignKey(User, related_name='contents', on_delete=models.CASCADE)\n\n    def __str__(self):\n        return self.title\n</code></pre> <ul> <li>Explica\u00e7\u00e3o:</li> <li>O campo <code>creator</code> \u00e9 uma ForeignKey referenciando o usu\u00e1rio que criou o conte\u00fado.</li> <li><code>content_type</code> define se o conte\u00fado \u00e9 \u00e1udio ou v\u00eddeo.</li> <li><code>file_url</code> \u00e9 o campo que cont\u00e9m a URL do arquivo de m\u00eddia.</li> </ul> <p>2.1 Migrar o Banco de Dados Para aplicar as mudan\u00e7as do modelo no banco de dados, execute as migra\u00e7\u00f5es:</p> <pre><code>python manage.py makemigrations\npython manage.py migrate\n</code></pre> <p>2.2. Acesso ao Django Admin</p> <pre><code>python manage.py createsuperuser\n</code></pre> <p>2.3. Rodar o nosso sistema</p> <pre><code>python manage.py runserver\n</code></pre> <p>2.4. Para visualizar classe content no Django Admin precisamos adicionar o registro no arquivo admin.py do content_app</p> <pre><code>from content_app import models\n\nadmin.site.register(models.Content)\n</code></pre>"},{"location":"_Disciplina/Roteiros/Django/03_Rest_Streaming/#3-serializador-serializer-para-content","title":"3. Serializador (Serializer) para <code>Content</code>","text":"<p>No Django REST, precisamos de um serializador para transformar o modelo em um formato JSON que possa ser exposto via API.</p> <p>Crie o arquivo <code>content_app/serializers.py</code>:</p> <pre><code>from rest_framework import serializers\nfrom .models import Content\n\nclass ContentSerializer(serializers.ModelSerializer):\n    class Meta:\n        model = Content\n        fields = '__all__'\n</code></pre>"},{"location":"_Disciplina/Roteiros/Django/03_Rest_Streaming/#4-views-para-o-content","title":"4. Views para o <code>Content</code>","text":"<p>No arquivo <code>content_app/views.py</code>, crie as views utilizando o Django REST framework para expor a API.</p> <pre><code>from rest_framework import viewsets\nfrom .models import Content\nfrom .serializers import ContentSerializer\nfrom rest_framework.permissions import IsAuthenticatedOrReadOnly\n\nclass ContentViewSet(viewsets.ModelViewSet):\n    queryset = Content.objects.all()\n    serializer_class = ContentSerializer\n    permission_classes = [IsAuthenticatedOrReadOnly]\n\n    def perform_create(self, serializer):\n        serializer.save(creator=self.request.user)\n</code></pre> <ul> <li>Explica\u00e7\u00e3o:</li> <li><code>ContentViewSet</code> fornece as a\u00e7\u00f5es padr\u00e3o de um ViewSet (list, create, retrieve, update, destroy).</li> <li><code>perform_create</code> sobrescreve o m\u00e9todo <code>create</code> para garantir que o criador (<code>creator</code>) seja o usu\u00e1rio logado.</li> </ul>"},{"location":"_Disciplina/Roteiros/Django/03_Rest_Streaming/#5-urls-para-o-app","title":"5. URLs para o App","text":"<p>Crie um arquivo <code>content_app/urls.py</code> e defina as rotas para o <code>ContentViewSet</code>:</p> <pre><code>from rest_framework.routers import DefaultRouter\nfrom .views import ContentViewSet\n\nrouter = DefaultRouter()\nrouter.register(r'contents', ContentViewSet)\n\nurlpatterns = router.urls\n</code></pre> <p>Agora, no arquivo principal de URLs do projeto <code>streaming_platform/urls.py</code>, inclua o roteamento do app <code>content_app</code>:</p> <pre><code>from django.contrib import admin\nfrom django.urls import path, include\n\nurlpatterns = [\n    path('admin/', admin.site.urls),\n    path('api/', include('content_app.urls')),\n]\n</code></pre>"},{"location":"_Disciplina/Roteiros/Django/03_Rest_Streaming/#6-configurar-autenticacao","title":"6. Configurar Autentica\u00e7\u00e3o","text":"<p>Como estamos utilizando o campo <code>creator</code> baseado no usu\u00e1rio logado, \u00e9 importante configurar a autentica\u00e7\u00e3o no Django REST framework.</p> <p>No arquivo <code>settings.py</code>, adicione a configura\u00e7\u00e3o para o Django REST framework:</p> <pre><code>REST_FRAMEWORK = {\n    'DEFAULT_AUTHENTICATION_CLASSES': [\n        'rest_framework.authentication.SessionAuthentication',\n        'rest_framework.authentication.BasicAuthentication',\n    ],\n    'DEFAULT_PERMISSION_CLASSES': [\n        'rest_framework.permissions.IsAuthenticatedOrReadOnly',\n    ],\n}\n</code></pre>"},{"location":"_Disciplina/Roteiros/Django/03_Rest_Streaming/#7-migrar-o-banco-de-dados","title":"7. Migrar o Banco de Dados","text":"<p>Para aplicar as mudan\u00e7as do modelo no banco de dados, execute as migra\u00e7\u00f5es:</p> <pre><code>python manage.py makemigrations\npython manage.py migrate\n</code></pre>"},{"location":"_Disciplina/Roteiros/Django/03_Rest_Streaming/#8-testando-a-api","title":"8. Testando a API","text":"<p>Agora, voc\u00ea pode testar a API usando ferramentas como o Postman ou curl. Alguns endpoints dispon\u00edveis seriam:</p> <ul> <li><code>GET /api/contents/</code>: Lista todos os conte\u00fados.</li> <li><code>POST /api/contents/</code>: Cria um novo conte\u00fado (requer autentica\u00e7\u00e3o).</li> <li><code>GET /api/contents/&lt;id&gt;/</code>: Detalhes de um conte\u00fado espec\u00edfico.</li> <li><code>PUT /api/contents/&lt;id&gt;/</code>: Atualiza um conte\u00fado (requer autentica\u00e7\u00e3o).</li> <li><code>DELETE /api/contents/&lt;id&gt;/</code>: Remove um conte\u00fado (requer autentica\u00e7\u00e3o).</li> </ul>"},{"location":"_Disciplina/Roteiros/Django/03_Rest_Streaming/#9-administracao-no-django-admin","title":"9. Administra\u00e7\u00e3o no Django Admin","text":"<p>Para facilitar a visualiza\u00e7\u00e3o dos conte\u00fados no Django Admin, voc\u00ea pode registrar o modelo <code>Content</code> no admin. No arquivo <code>content_app/admin.py</code>:</p> <pre><code>from django.contrib import admin\nfrom .models import Content\n\nadmin.site.register(Content)\n</code></pre> <p>Agora, ao acessar o painel de administra\u00e7\u00e3o do Django, voc\u00ea poder\u00e1 visualizar e gerenciar os conte\u00fados.</p>"},{"location":"_Disciplina/Roteiros/Django/03_Rest_Streaming/#resumo","title":"Resumo","text":"<p>Essa implementa\u00e7\u00e3o cria um app RESTful no Django com suporte \u00e0 cria\u00e7\u00e3o, leitura, atualiza\u00e7\u00e3o e exclus\u00e3o (CRUD) de conte\u00fados, incluindo autentica\u00e7\u00e3o e associa\u00e7\u00e3o com os criadores. Voc\u00ea pode expandir a aplica\u00e7\u00e3o para adicionar funcionalidades adicionais, como filtros ou buscas.</p>"},{"location":"_Disciplina/Roteiros/Django/04_Shell_Streaming/","title":"04 Shell Streaming","text":"<p>O Django Shell \u00e9 uma ferramenta interativa extremamente \u00fatil para trabalhar diretamente com os dados da sua aplica\u00e7\u00e3o, testar funcionalidades, e manipular modelos de forma r\u00e1pida. No caso do app de streaming de \u00e1udio e v\u00eddeo que criamos, o Django Shell pode ser usado para executar v\u00e1rias opera\u00e7\u00f5es no banco de dados sem precisar criar views ou usar a interface do admin.</p>"},{"location":"_Disciplina/Roteiros/Django/04_Shell_Streaming/#acessando-o-django-shell","title":"Acessando o Django Shell","text":"<p>Para abrir o Django Shell, voc\u00ea pode executar o seguinte comando no terminal, dentro do diret\u00f3rio do seu projeto Django:</p> <pre><code>python manage.py shell\n</code></pre>"},{"location":"_Disciplina/Roteiros/Django/04_Shell_Streaming/#possibilidades-no-django-shell","title":"Possibilidades no Django Shell","text":"<p>Aqui est\u00e3o algumas opera\u00e7\u00f5es que voc\u00ea pode realizar diretamente no shell, utilizando o modelo <code>Content</code> que criamos no app.</p>"},{"location":"_Disciplina/Roteiros/Django/04_Shell_Streaming/#1-criar-um-novo-conteudo","title":"1. Criar um novo conte\u00fado","text":"<p>No Django Shell, voc\u00ea pode criar novos registros no banco de dados, sem precisar usar o formul\u00e1rio HTML.</p> <pre><code>from content.models import Content\n\n# Criar um novo objeto de conte\u00fado\ncontent = Content.objects.create(\n    title=\"Django Tutorial\",\n    description=\"A comprehensive tutorial on Django framework.\",\n    file_url=\"https://example.com/videos/django_tutorial.mp4\",\n    thumbnail_url=\"https://example.com/thumbnails/django_thumb.jpg\",\n    content_type=\"video\",\n    is_public=True\n)\n\nprint(content)  # Ver o conte\u00fado criado\n</code></pre> <p>Esse c\u00f3digo cria um novo conte\u00fado e salva diretamente no banco de dados. O <code>Content.objects.create()</code> combina a cria\u00e7\u00e3o e o salvamento em uma \u00fanica linha.</p>"},{"location":"_Disciplina/Roteiros/Django/04_Shell_Streaming/#2-listar-todos-os-conteudos","title":"2. Listar todos os conte\u00fados","text":"<p>Para obter todos os conte\u00fados que foram criados at\u00e9 agora, voc\u00ea pode usar o m\u00e9todo <code>all()</code> do queryset.</p> <pre><code>contents = Content.objects.all()\nfor content in contents:\n    print(content.title, content.description)\n</code></pre> <p>Isso ir\u00e1 listar todos os conte\u00fados cadastrados, mostrando o t\u00edtulo e a descri\u00e7\u00e3o de cada um.</p>"},{"location":"_Disciplina/Roteiros/Django/04_Shell_Streaming/#3-filtrar-conteudos","title":"3. Filtrar conte\u00fados","text":"<p>Voc\u00ea pode filtrar registros espec\u00edficos com base em crit\u00e9rios. Por exemplo, listar apenas os conte\u00fados p\u00fablicos (<code>is_public=True</code>):</p> <pre><code>public_contents = Content.objects.filter(is_public=True)\nfor content in public_contents:\n    print(f\"T\u00edtulo: {content.title}, P\u00fablico: {content.is_public}\")\n</code></pre> <p>Ou buscar por tipo de conte\u00fado, como todos os v\u00eddeos:</p> <pre><code>videos = Content.objects.filter(content_type=\"video\")\nfor video in videos:\n    print(f\"V\u00eddeo: {video.title}\")\n</code></pre>"},{"location":"_Disciplina/Roteiros/Django/04_Shell_Streaming/#4-atualizar-um-conteudo-existente","title":"4. Atualizar um conte\u00fado existente","text":"<p>No Django Shell, voc\u00ea pode buscar um objeto e atualiz\u00e1-lo. Vamos modificar um conte\u00fado espec\u00edfico:</p> <pre><code># Encontrar um conte\u00fado pelo ID (ou por outro campo)\ncontent_to_update = Content.objects.get(id=1)\n\n# Atualizar os campos\ncontent_to_update.title = \"Updated Django Tutorial\"\ncontent_to_update.description = \"Updated description for the Django tutorial.\"\ncontent_to_update.save()  # Salvar as altera\u00e7\u00f5es no banco de dados\n\nprint(\"Conte\u00fado atualizado:\", content_to_update.title, content_to_update.description)\n</code></pre>"},{"location":"_Disciplina/Roteiros/Django/04_Shell_Streaming/#5-excluir-um-conteudo","title":"5. Excluir um conte\u00fado","text":"<p>Se voc\u00ea quiser remover um conte\u00fado do banco de dados, pode usar o m\u00e9todo <code>delete()</code>:</p> <pre><code># Encontrar o conte\u00fado pelo ID e deletar\ncontent_to_delete = Content.objects.get(id=1)\ncontent_to_delete.delete()\n\nprint(\"Conte\u00fado deletado com sucesso!\")\n</code></pre>"},{"location":"_Disciplina/Roteiros/Django/04_Shell_Streaming/#6-consultas-avancadas","title":"6. Consultas avan\u00e7adas","text":"<p>Voc\u00ea tamb\u00e9m pode realizar consultas mais complexas, como ordenar os conte\u00fados por t\u00edtulo ou buscar aqueles criados recentemente:</p> <ul> <li>Ordenar por t\u00edtulo:</li> </ul> <pre><code>sorted_contents = Content.objects.order_by('title')\nfor content in sorted_contents:\n    print(content.title)\n</code></pre> <ul> <li>Filtrar por data de cria\u00e7\u00e3o (supondo que o modelo tem um campo <code>created_at</code>):</li> </ul> <pre><code>from django.utils import timezone\nrecent_contents = Content.objects.filter(created_at__gte=timezone.now() - timezone.timedelta(days=7))\nfor content in recent_contents:\n    print(content.title)\n</code></pre>"},{"location":"_Disciplina/Roteiros/Django/04_Shell_Streaming/#7-verificar-metodos-personalizados-se-houver","title":"7. Verificar m\u00e9todos personalizados (se houver)","text":"<p>Se voc\u00ea tiver m\u00e9todos personalizados no modelo <code>Content</code>, pode test\u00e1-los diretamente no Django Shell.</p> <p>Por exemplo, se voc\u00ea tiver um m\u00e9todo que retorna se o conte\u00fado \u00e9 um v\u00eddeo:</p> <pre><code>class Content(models.Model):\n    # campos...\n\n    def is_video(self):\n        return self.content_type == 'video'\n</code></pre> <p>Voc\u00ea pode test\u00e1-lo no shell assim:</p> <pre><code>content = Content.objects.get(id=1)\nprint(content.is_video())  # True se for um v\u00eddeo, False se for \u00e1udio\n</code></pre>"},{"location":"_Disciplina/Roteiros/Django/04_Shell_Streaming/#8-verificar-a-contagem-de-conteudos","title":"8. Verificar a contagem de conte\u00fados","text":"<p>Se voc\u00ea quiser ver quantos conte\u00fados j\u00e1 foram cadastrados no total ou em categorias espec\u00edficas:</p> <pre><code># Total de conte\u00fados\ntotal_contents = Content.objects.count()\nprint(\"Total de conte\u00fados:\", total_contents)\n\n# Total de v\u00eddeos\nvideo_count = Content.objects.filter(content_type='video').count()\nprint(\"Total de v\u00eddeos:\", video_count)\n</code></pre>"},{"location":"_Disciplina/Roteiros/Django/04_Shell_Streaming/#conclusao","title":"Conclus\u00e3o","text":"<p>O Django Shell permite explorar o modelo de dados do seu app rapidamente, sem a necessidade de criar views, templates ou interagir com a API. Ele \u00e9 muito \u00fatil para testar funcionalidades, realizar consultas, manipular dados e garantir que os dados estejam sendo gerados e tratados conforme esperado. No contexto de um app de streaming, voc\u00ea pode facilmente listar, criar, atualizar e deletar conte\u00fados de \u00e1udio e v\u00eddeo diretamente pelo shell, otimizando o desenvolvimento e a manuten\u00e7\u00e3o da aplica\u00e7\u00e3o.</p>"},{"location":"_Disciplina/Roteiros/Django/05_Consume_Streaming/","title":"05 Consume Streaming","text":"<p>Para acessar a API criada no Django REST framework, siga os passos abaixo. A API est\u00e1 acess\u00edvel atrav\u00e9s de rotas prefixadas por <code>api/</code> conforme configurado no arquivo <code>urls.py</code>. Voc\u00ea pode testar a API usando ferramentas como Postman, Insomnia, ou at\u00e9 mesmo cURL no terminal.</p>"},{"location":"_Disciplina/Roteiros/Django/05_Consume_Streaming/#1-urls-principais-da-api","title":"1. URLs Principais da API","text":"<p>Com base na configura\u00e7\u00e3o do roteamento, as URLs dispon\u00edveis s\u00e3o:</p> <ul> <li>Listar todos os conte\u00fados: <code>GET /api/contents/</code></li> <li>Criar um novo conte\u00fado: <code>POST /api/contents/</code> (Requer autentica\u00e7\u00e3o)</li> <li>Ver detalhes de um conte\u00fado espec\u00edfico: <code>GET /api/contents/&lt;id&gt;/</code></li> <li>Atualizar um conte\u00fado: <code>PUT /api/contents/&lt;id&gt;/</code> (Requer autentica\u00e7\u00e3o)</li> <li>Deletar um conte\u00fado: <code>DELETE /api/contents/&lt;id&gt;/</code> (Requer autentica\u00e7\u00e3o)</li> </ul>"},{"location":"_Disciplina/Roteiros/Django/05_Consume_Streaming/#2-acessando-via-navegador","title":"2. Acessando via Navegador","text":"<p>Se voc\u00ea estiver rodando o servidor de desenvolvimento do Django localmente, use o comando:</p> <pre><code>python manage.py runserver\n</code></pre> <p>Agora, voc\u00ea pode acessar a API via navegador (ou Postman) em:</p> <ul> <li>http://127.0.0.1:8000/api/contents/ \u2014 para listar todos os conte\u00fados.</li> </ul> <p>O Django REST framework oferece uma interface de navega\u00e7\u00e3o de API embutida. Se voc\u00ea acessar a API pelo navegador, ver\u00e1 uma interface amig\u00e1vel onde pode visualizar, criar, editar e excluir registros.</p>"},{"location":"_Disciplina/Roteiros/Django/05_Consume_Streaming/#3-autenticacao-de-usuario","title":"3. Autentica\u00e7\u00e3o de Usu\u00e1rio","text":"<p>Alguns endpoints (como criar, atualizar e deletar conte\u00fado) requerem que o usu\u00e1rio esteja autenticado. Existem v\u00e1rias maneiras de se autenticar:</p>"},{"location":"_Disciplina/Roteiros/Django/05_Consume_Streaming/#a-autenticacao-de-sessao","title":"a) Autentica\u00e7\u00e3o de Sess\u00e3o","text":"<p>Se voc\u00ea estiver logado como usu\u00e1rio no Django Admin, pode testar a API no mesmo navegador porque as credenciais de sess\u00e3o ser\u00e3o reutilizadas.</p> <ol> <li>Acesse o Django Admin em <code>http://127.0.0.1:8000/admin/</code>.</li> <li>Fa\u00e7a login com um superusu\u00e1rio.</li> <li>Agora, v\u00e1 para <code>http://127.0.0.1:8000/api/contents/</code> e voc\u00ea poder\u00e1 fazer opera\u00e7\u00f5es autenticadas diretamente no navegador.</li> </ol>"},{"location":"_Disciplina/Roteiros/Django/05_Consume_Streaming/#b-autenticacao-basica-basic-auth","title":"b) Autentica\u00e7\u00e3o B\u00e1sica (Basic Auth)","text":"<p>Para testar com ferramentas como Postman ou cURL, voc\u00ea pode usar autentica\u00e7\u00e3o b\u00e1sica.</p> <p>No Postman: 1. No cabe\u00e7alho da requisi\u00e7\u00e3o, v\u00e1 at\u00e9 a aba \"Authorization\". 2. Selecione o tipo \"Basic Auth\". 3. Insira seu username e password.</p> <p>Com cURL: Voc\u00ea pode usar o seguinte comando no terminal para criar um novo conte\u00fado (por exemplo):</p> <pre><code>curl -X POST http://127.0.0.1:8000/api/contents/ \\\n  -H \"Content-Type: application/json\" \\\n  -u &lt;username&gt;:&lt;password&gt; \\\n  -d '{\n        \"title\": \"Sample Video\",\n        \"description\": \"A sample video description\",\n        \"file_url\": \"http://example.com/sample.mp4\",\n        \"thumbnail_url\": \"http://example.com/thumb.jpg\",\n        \"content_type\": \"video\",\n        \"is_public\": true\n      }'\n</code></pre>"},{"location":"_Disciplina/Roteiros/Django/05_Consume_Streaming/#4-exemplos-de-requisicoes","title":"4. Exemplos de Requisi\u00e7\u00f5es","text":""},{"location":"_Disciplina/Roteiros/Django/05_Consume_Streaming/#a-get-listar-todos-os-conteudos","title":"a) GET - Listar todos os conte\u00fados","text":"<p>Voc\u00ea pode listar todos os conte\u00fados dispon\u00edveis com a seguinte requisi\u00e7\u00e3o:</p> <p>Com cURL: <pre><code>curl -X GET http://127.0.0.1:8000/api/contents/\n</code></pre></p>"},{"location":"_Disciplina/Roteiros/Django/05_Consume_Streaming/#b-post-criar-um-novo-conteudo","title":"b) POST - Criar um novo conte\u00fado","text":"<p>Para criar um novo conte\u00fado, voc\u00ea precisa estar autenticado e fornecer os dados adequados:</p> <p>No Postman: 1. Defina o m\u00e9todo como <code>POST</code>. 2. No campo URL, insira <code>http://127.0.0.1:8000/api/contents/</code>. 3. V\u00e1 at\u00e9 a aba \"Body\" e selecione <code>raw</code> com o tipo <code>JSON</code>, e insira algo como:    <pre><code>{\n    \"title\": \"My Video\",\n    \"description\": \"A video description\",\n    \"file_url\": \"http://example.com/video.mp4\",\n    \"thumbnail_url\": \"http://example.com/thumbnail.jpg\",\n    \"content_type\": \"video\",\n    \"is_public\": true\n}\n</code></pre> 4. Envie a requisi\u00e7\u00e3o.</p>"},{"location":"_Disciplina/Roteiros/Django/05_Consume_Streaming/#c-put-atualizar-um-conteudo","title":"c) PUT - Atualizar um conte\u00fado","text":"<p>Atualizar um conte\u00fado requer que voc\u00ea esteja autenticado e seja o criador do conte\u00fado.</p> <p>Com cURL: <pre><code>curl -X PUT http://127.0.0.1:8000/api/contents/&lt;id&gt;/ \\\n  -H \"Content-Type: application/json\" \\\n  -u &lt;username&gt;:&lt;password&gt; \\\n  -d '{\n        \"title\": \"Updated Video Title\",\n        \"description\": \"Updated description\"\n      }'\n</code></pre></p>"},{"location":"_Disciplina/Roteiros/Django/05_Consume_Streaming/#d-delete-remover-um-conteudo","title":"d) DELETE - Remover um conte\u00fado","text":"<p>Para deletar um conte\u00fado (somente se voc\u00ea for o criador ou administrador):</p> <p>Com cURL: <pre><code>curl -X DELETE http://127.0.0.1:8000/api/contents/&lt;id&gt;/ \\\n  -u &lt;username&gt;:&lt;password&gt;\n</code></pre></p>"},{"location":"_Disciplina/Roteiros/Django/05_Consume_Streaming/#5-filtros-e-busca","title":"5. Filtros e Busca","text":"<p>Voc\u00ea pode adicionar filtros de busca com base nos campos do modelo <code>Content</code> (como <code>title</code>, <code>content_type</code>, etc.), integrando a funcionalidade de filtros no Django REST framework usando <code>DjangoFilterBackend</code>.</p> <p>Exemplo de adi\u00e7\u00e3o de filtro para busca por t\u00edtulo ou tipo de conte\u00fado:</p> <p>No <code>views.py</code>: <pre><code>from rest_framework import viewsets, filters\nfrom django_filters.rest_framework import DjangoFilterBackend\n\nclass ContentViewSet(viewsets.ModelViewSet):\n    queryset = Content.objects.all()\n    serializer_class = ContentSerializer\n    filter_backends = [DjangoFilterBackend, filters.SearchFilter]\n    search_fields = ['title', 'content_type']\n</code></pre></p> <p>Agora voc\u00ea pode buscar por t\u00edtulo ou tipo de conte\u00fado:</p> <ul> <li><code>GET /api/contents/?search=My Video</code></li> <li><code>GET /api/contents/?search=audio</code></li> </ul>"},{"location":"_Disciplina/Roteiros/Django/05_Consume_Streaming/#resumo","title":"Resumo:","text":"<ol> <li>Acesse a API via <code>http://127.0.0.1:8000/api/contents/</code>.</li> <li>Utilize autentica\u00e7\u00e3o para opera\u00e7\u00f5es que requerem login (POST, PUT, DELETE).</li> <li>Use ferramentas como Postman ou cURL para testar os endpoints.</li> <li>Adicione filtros ou funcionalidades adicionais conforme necess\u00e1rio.</li> </ol> <p>Assim, a API est\u00e1 configurada e pronta para ser consumida por frontends, aplicativos m\u00f3veis ou outras aplica\u00e7\u00f5es REST.</p>"},{"location":"_Disciplina/Roteiros/Django/06_Consume_Streaming_Web/","title":"06 Consume Streaming Web","text":"<p>Para criar um aplicativo HTML/JavaScript que consome o endpoint <code>contents</code> da API Django REST, podemos usar fetch API para fazer as requisi\u00e7\u00f5es. Vou fornecer uma estrutura b\u00e1sica com um exemplo funcional que faz as opera\u00e7\u00f5es de GET para listar o conte\u00fado e POST para criar um novo conte\u00fado.</p>"},{"location":"_Disciplina/Roteiros/Django/06_Consume_Streaming_Web/#passos","title":"Passos:","text":"<ol> <li>Estrutura HTML: Vamos criar um formul\u00e1rio para adicionar novo conte\u00fado e uma tabela para listar os conte\u00fados.</li> <li>JavaScript: Fun\u00e7\u00f5es para realizar as requisi\u00e7\u00f5es HTTP utilizando <code>fetch</code>.</li> <li>CSS: Estiliza\u00e7\u00e3o b\u00e1sica para tornar a interface mais atraente.</li> </ol>"},{"location":"_Disciplina/Roteiros/Django/06_Consume_Streaming_Web/#1-criacao-do-arquivo-htmljavascript","title":"1. Cria\u00e7\u00e3o do arquivo HTML/JavaScript","text":""},{"location":"_Disciplina/Roteiros/Django/06_Consume_Streaming_Web/#arquivo-indexhtml","title":"Arquivo: <code>index.html</code>","text":"<pre><code>&lt;!DOCTYPE html&gt;\n&lt;html lang=\"en\"&gt;\n&lt;head&gt;\n    &lt;meta charset=\"UTF-8\"&gt;\n    &lt;meta name=\"viewport\" content=\"width=device-width, initial-scale=1.0\"&gt;\n    &lt;title&gt;App de Conte\u00fado&lt;/title&gt;\n    &lt;style&gt;\n        body {\n            font-family: Arial, sans-serif;\n            padding: 20px;\n            background-color: #f4f4f4;\n        }\n        h1 {\n            color: #333;\n        }\n        .content-list {\n            margin-top: 20px;\n        }\n        .content-list table {\n            width: 100%;\n            border-collapse: collapse;\n        }\n        .content-list th, .content-list td {\n            border: 1px solid #ccc;\n            padding: 10px;\n            text-align: left;\n        }\n        .form-section {\n            margin-bottom: 20px;\n        }\n        .form-section input, .form-section button {\n            padding: 10px;\n            margin-right: 10px;\n        }\n    &lt;/style&gt;\n&lt;/head&gt;\n&lt;body&gt;\n\n    &lt;h1&gt;Conte\u00fados Dispon\u00edveis&lt;/h1&gt;\n\n    &lt;!-- Formul\u00e1rio para adicionar conte\u00fado --&gt;\n    &lt;div class=\"form-section\"&gt;\n        &lt;h2&gt;Adicionar Novo Conte\u00fado&lt;/h2&gt;\n        &lt;form id=\"contentForm\"&gt;\n            &lt;input type=\"text\" id=\"title\" placeholder=\"T\u00edtulo\" required&gt;\n            &lt;input type=\"text\" id=\"description\" placeholder=\"Descri\u00e7\u00e3o\" required&gt;\n            &lt;input type=\"url\" id=\"file_url\" placeholder=\"URL do arquivo\" required&gt;\n            &lt;input type=\"url\" id=\"thumbnail_url\" placeholder=\"URL da miniatura\" required&gt;\n            &lt;select id=\"content_type\"&gt;\n                &lt;option value=\"video\"&gt;V\u00eddeo&lt;/option&gt;\n                &lt;option value=\"audio\"&gt;\u00c1udio&lt;/option&gt;\n            &lt;/select&gt;\n            &lt;label for=\"is_public\"&gt;P\u00fablico?&lt;/label&gt;\n            &lt;input type=\"checkbox\" id=\"is_public\" checked&gt;\n            &lt;button type=\"submit\"&gt;Adicionar Conte\u00fado&lt;/button&gt;\n        &lt;/form&gt;\n    &lt;/div&gt;\n\n    &lt;!-- Listagem de conte\u00fados --&gt;\n    &lt;div class=\"content-list\"&gt;\n        &lt;h2&gt;Lista de Conte\u00fados&lt;/h2&gt;\n        &lt;table id=\"contentTable\"&gt;\n            &lt;thead&gt;\n                &lt;tr&gt;\n                    &lt;th&gt;ID&lt;/th&gt;\n                    &lt;th&gt;T\u00edtulo&lt;/th&gt;\n                    &lt;th&gt;Descri\u00e7\u00e3o&lt;/th&gt;\n                    &lt;th&gt;Tipo&lt;/th&gt;\n                    &lt;th&gt;P\u00fablico&lt;/th&gt;\n                &lt;/tr&gt;\n            &lt;/thead&gt;\n            &lt;tbody&gt;\n                &lt;!-- Conte\u00fados ser\u00e3o inseridos aqui --&gt;\n            &lt;/tbody&gt;\n        &lt;/table&gt;\n    &lt;/div&gt;\n\n    &lt;script&gt;\n        const apiUrl = 'http://127.0.0.1:8000/api/contents/';\n\n        // Fun\u00e7\u00e3o para obter e listar conte\u00fados\n        async function fetchContents() {\n            try {\n                const response = await fetch(apiUrl);\n                const data = await response.json();\n                const contentTable = document.querySelector('#contentTable tbody');\n                contentTable.innerHTML = '';\n\n                data.forEach(content =&gt; {\n                    const row = `\n                        &lt;tr&gt;\n                            &lt;td&gt;${content.id}&lt;/td&gt;\n                            &lt;td&gt;${content.title}&lt;/td&gt;\n                            &lt;td&gt;${content.description}&lt;/td&gt;\n                            &lt;td&gt;${content.content_type}&lt;/td&gt;\n                            &lt;td&gt;${content.is_public ? 'Sim' : 'N\u00e3o'}&lt;/td&gt;\n                        &lt;/tr&gt;\n                    `;\n                    contentTable.innerHTML += row;\n                });\n            } catch (error) {\n                console.error('Erro ao buscar conte\u00fados:', error);\n            }\n        }\n\n        // Fun\u00e7\u00e3o para adicionar novo conte\u00fado\n        async function addContent(event) {\n            event.preventDefault();\n\n            const title = document.getElementById('title').value;\n            const description = document.getElementById('description').value;\n            const file_url = document.getElementById('file_url').value;\n            const thumbnail_url = document.getElementById('thumbnail_url').value;\n            const content_type = document.getElementById('content_type').value;\n            const is_public = document.getElementById('is_public').checked;\n\n            const contentData = {\n                title,\n                description,\n                file_url,\n                thumbnail_url,\n                content_type,\n                is_public\n            };\n\n            try {\n                const response = await fetch(apiUrl, {\n                    method: 'POST',\n                    headers: {\n                        'Content-Type': 'application/json'\n                    },\n                    body: JSON.stringify(contentData)\n                });\n\n                if (response.ok) {\n                    alert('Conte\u00fado adicionado com sucesso!');\n                    fetchContents(); // Atualiza a lista de conte\u00fados\n                    document.getElementById('contentForm').reset(); // Limpa o formul\u00e1rio\n                } else {\n                    alert('Erro ao adicionar conte\u00fado');\n                }\n            } catch (error) {\n                console.error('Erro ao adicionar conte\u00fado:', error);\n            }\n        }\n\n        // Inicializar a p\u00e1gina carregando os conte\u00fados\n        document.addEventListener('DOMContentLoaded', fetchContents);\n\n        // Evento de envio do formul\u00e1rio\n        document.getElementById('contentForm').addEventListener('submit', addContent);\n\n    &lt;/script&gt;\n\n&lt;/body&gt;\n&lt;/html&gt;\n</code></pre>"},{"location":"_Disciplina/Roteiros/Django/06_Consume_Streaming_Web/#explicacao-do-codigo","title":"Explica\u00e7\u00e3o do C\u00f3digo","text":"<ol> <li>HTML Estrutura:</li> <li>Um formul\u00e1rio na se\u00e7\u00e3o <code>form-section</code> permite adicionar um novo conte\u00fado, com campos para t\u00edtulo, descri\u00e7\u00e3o, URL do arquivo, URL da miniatura, tipo de conte\u00fado (v\u00eddeo ou \u00e1udio), e um checkbox para indicar se \u00e9 p\u00fablico.</li> <li> <p>Uma tabela na se\u00e7\u00e3o <code>content-list</code> lista os conte\u00fados que s\u00e3o retornados da API.</p> </li> <li> <p>JavaScript:</p> </li> <li>A fun\u00e7\u00e3o <code>fetchContents()</code> faz uma requisi\u00e7\u00e3o GET para o endpoint <code>contents</code> e preenche a tabela com os dados.</li> <li>A fun\u00e7\u00e3o <code>addContent()</code> faz uma requisi\u00e7\u00e3o POST para o mesmo endpoint, criando um novo conte\u00fado com base nos dados fornecidos pelo usu\u00e1rio no formul\u00e1rio.</li> <li>A fun\u00e7\u00e3o <code>fetchContents()</code> \u00e9 chamada no evento <code>DOMContentLoaded</code> para listar os conte\u00fados assim que a p\u00e1gina \u00e9 carregada.</li> <li> <p>O evento de submit do formul\u00e1rio \u00e9 tratado por <code>addContent()</code> para enviar o conte\u00fado \u00e0 API.</p> </li> <li> <p>CSS: </p> </li> <li>O CSS b\u00e1sico estiliza o layout da p\u00e1gina, a tabela e o formul\u00e1rio, mantendo a interface limpa e funcional.</li> </ol>"},{"location":"_Disciplina/Roteiros/Django/06_Consume_Streaming_Web/#como-testar-o-aplicativo","title":"Como Testar o Aplicativo","text":"<ol> <li> <p>Rodar a API Django:    Certifique-se de que a API Django REST est\u00e1 rodando localmente, acess\u00edvel em <code>http://127.0.0.1:8000/api/contents/</code>.</p> </li> <li> <p>Servir o Arquivo HTML:    Salve o arquivo como <code>index.html</code> e abra no navegador.</p> </li> <li> <p>Testando as Fun\u00e7\u00f5es:</p> </li> <li>Voc\u00ea pode adicionar conte\u00fados pelo formul\u00e1rio e, ao fazer isso, a tabela ser\u00e1 atualizada automaticamente com o novo conte\u00fado.</li> <li>Todos os conte\u00fados da API ser\u00e3o listados na tabela assim que a p\u00e1gina for carregada.</li> </ol> <p>Dessa forma, voc\u00ea ter\u00e1 um app front-end em HTML e JavaScript que consome a API Django REST e permite listar e adicionar conte\u00fados facilmente.</p>"},{"location":"_Disciplina/Roteiros/Django/07_Admin_Streaming/","title":"07 Admin Streaming","text":"<p>O Django Admin \u00e9 uma ferramenta robusta e personaliz\u00e1vel, que permite gerenciar os dados do banco e configurar o backend da aplica\u00e7\u00e3o atrav\u00e9s de uma interface administrativa. A seguir, est\u00e3o algumas das principais caracter\u00edsticas de personaliza\u00e7\u00e3o do Django Admin, que tornam a ferramenta ainda mais poderosa para desenvolvedores e administradores:</p>"},{"location":"_Disciplina/Roteiros/Django/07_Admin_Streaming/#1-modeladmin-customizacao-de-exibicao-dos-modelos","title":"1. ModelAdmin: Customiza\u00e7\u00e3o de Exibi\u00e7\u00e3o dos Modelos","text":"<p>Atrav\u00e9s do <code>ModelAdmin</code>, voc\u00ea pode controlar a forma como cada modelo \u00e9 exibido no Django Admin. Algumas personaliza\u00e7\u00f5es incluem:</p> <ul> <li><code>list_display</code>: Define os campos que ser\u00e3o exibidos na lista de registros do modelo. Por exemplo:</li> </ul> <pre><code>class ContentAdmin(admin.ModelAdmin):\n    list_display = ('title', 'content_type', 'is_public', 'created_at')\n</code></pre> <ul> <li><code>list_filter</code>: Adiciona filtros laterais para facilitar a segmenta\u00e7\u00e3o dos registros. Exemplo:</li> </ul> <pre><code>list_filter = ('content_type', 'is_public', 'created_at')\n</code></pre> <ul> <li><code>search_fields</code>: Permite adicionar um campo de busca para procurar registros espec\u00edficos. Exemplo:</li> </ul> <pre><code>search_fields = ('title', 'description')\n</code></pre>"},{"location":"_Disciplina/Roteiros/Django/07_Admin_Streaming/#2-campos-de-ordenacao","title":"2. Campos de Ordena\u00e7\u00e3o","text":"<p>Com a op\u00e7\u00e3o <code>ordering</code>, voc\u00ea pode definir a ordem padr\u00e3o em que os registros ser\u00e3o exibidos.</p> <pre><code>ordering = ['-created_at']\n</code></pre>"},{"location":"_Disciplina/Roteiros/Django/07_Admin_Streaming/#3-campos-de-edicao-inline","title":"3. Campos de Edi\u00e7\u00e3o Inline","text":"<p>Django Admin permite editar objetos relacionados dentro de um formul\u00e1rio de outro objeto, usando inlines. Por exemplo, se voc\u00ea tem um modelo <code>Comment</code> relacionado a um <code>Content</code>, pode configurar o <code>Comment</code> como inline no <code>ContentAdmin</code>.</p> <pre><code>class CommentInline(admin.TabularInline):\n    model = Comment\n    extra = 1  # N\u00famero de campos de coment\u00e1rio exibidos inicialmente\n\nclass ContentAdmin(admin.ModelAdmin):\n    inlines = [CommentInline]\n</code></pre>"},{"location":"_Disciplina/Roteiros/Django/07_Admin_Streaming/#4-personalizacao-dos-formularios-de-edicao","title":"4. Personaliza\u00e7\u00e3o dos Formul\u00e1rios de Edi\u00e7\u00e3o","text":"<p>Voc\u00ea pode definir quais campos ser\u00e3o exibidos na p\u00e1gina de edi\u00e7\u00e3o, bem como organiz\u00e1-los em se\u00e7\u00f5es:</p> <ul> <li><code>fields</code>: Define os campos que estar\u00e3o dispon\u00edveis no formul\u00e1rio.</li> </ul> <pre><code>fields = ('title', 'description', 'file_url', 'thumbnail_url')\n</code></pre> <ul> <li><code>fieldsets</code>: Agrupa os campos em se\u00e7\u00f5es, permitindo adicionar cabe\u00e7alhos de se\u00e7\u00e3o:</li> </ul> <pre><code>fieldsets = (\n    ('Informa\u00e7\u00f5es B\u00e1sicas', {'fields': ('title', 'description')}),\n    ('Detalhes do Arquivo', {'fields': ('file_url', 'thumbnail_url')}),\n)\n</code></pre>"},{"location":"_Disciplina/Roteiros/Django/07_Admin_Streaming/#5-acoes-personalizadas","title":"5. A\u00e7\u00f5es Personalizadas","text":"<p>Com o Django Admin, voc\u00ea pode definir a\u00e7\u00f5es customizadas para executar opera\u00e7\u00f5es em lote nos registros selecionados. Por exemplo, uma a\u00e7\u00e3o para marcar conte\u00fados como p\u00fablicos:</p> <pre><code>def make_public(modeladmin, request, queryset):\n    queryset.update(is_public=True)\nmake_public.short_description = \"Marcar conte\u00fados como p\u00fablicos\"\n\nclass ContentAdmin(admin.ModelAdmin):\n    actions = [make_public]\n</code></pre>"},{"location":"_Disciplina/Roteiros/Django/07_Admin_Streaming/#6-filtros-e-campos-de-busca-personalizados","title":"6. Filtros e Campos de Busca Personalizados","text":"<p>Al\u00e9m dos filtros de lista, voc\u00ea pode criar filtros personalizados para necessidades espec\u00edficas e adicionar campos de busca din\u00e2micos.</p> <ul> <li>Filtros Personalizados: Use o <code>SimpleListFilter</code> para definir filtros avan\u00e7ados.</li> </ul> <pre><code>from django.contrib.admin import SimpleListFilter\n\nclass PublicContentFilter(SimpleListFilter):\n    title = 'public'\n    parameter_name = 'is_public'\n\n    def lookups(self, request, model_admin):\n        return [('yes', 'Public'), ('no', 'Private')]\n\n    def queryset(self, request, queryset):\n        if self.value() == 'yes':\n            return queryset.filter(is_public=True)\n        if self.value() == 'no':\n            return queryset.filter(is_public=False)\n\nclass ContentAdmin(admin.ModelAdmin):\n    list_filter = (PublicContentFilter,)\n</code></pre>"},{"location":"_Disciplina/Roteiros/Django/07_Admin_Streaming/#7-permissoes-e-controle-de-acesso","title":"7. Permiss\u00f5es e Controle de Acesso","text":"<p>O Django Admin permite definir permiss\u00f5es espec\u00edficas por modelo e campo, como:</p> <ul> <li>Permiss\u00f5es por modelo: No <code>ModelAdmin</code>, voc\u00ea pode restringir quem pode visualizar, adicionar, editar ou excluir registros.</li> <li>Controle de campos espec\u00edficos: Restringe quem pode ver ou editar campos espec\u00edficos. Isso \u00e9 feito criando m\u00e9todos como <code>has_change_permission</code>.</li> </ul>"},{"location":"_Disciplina/Roteiros/Django/07_Admin_Streaming/#8-edicao-em-lote","title":"8. Edi\u00e7\u00e3o em Lote","text":"<p>A edi\u00e7\u00e3o em lote facilita a atualiza\u00e7\u00e3o r\u00e1pida de registros selecionados ao permitir que se aplique a\u00e7\u00f5es de uma s\u00f3 vez.</p>"},{"location":"_Disciplina/Roteiros/Django/07_Admin_Streaming/#9-customizacao-de-templates-e-css","title":"9. Customiza\u00e7\u00e3o de Templates e CSS","text":"<p>O Django permite que voc\u00ea substitua os templates do admin ou altere o CSS para refletir um estilo espec\u00edfico, modificando o visual da interface administrativa.</p>"},{"location":"_Disciplina/Roteiros/Django/07_Admin_Streaming/#exemplo-completo","title":"Exemplo Completo","text":"<pre><code>from django.contrib import admin\nfrom .models import Content, Comment\n\nclass CommentInline(admin.TabularInline):\n    model = Comment\n    extra = 1\n\nclass ContentAdmin(admin.ModelAdmin):\n    list_display = ('title', 'content_type', 'is_public', 'created_at')\n    list_filter = ('content_type', 'is_public', 'created_at')\n    search_fields = ('title', 'description')\n    ordering = ['-created_at']\n    inlines = [CommentInline]\n    actions = [make_public]\n    fieldsets = (\n        ('Informa\u00e7\u00f5es B\u00e1sicas', {'fields': ('title', 'description')}),\n        ('Detalhes do Arquivo', {'fields': ('file_url', 'thumbnail_url')}),\n    )\n\nadmin.site.register(Content, ContentAdmin)\n</code></pre> <p>Com essas configura\u00e7\u00f5es, o Django Admin se torna uma interface poderosa para a administra\u00e7\u00e3o do seu app de streaming, com filtros, personaliza\u00e7\u00f5es e uma apar\u00eancia adaptada ao fluxo de trabalho. Isso otimiza o gerenciamento de conte\u00fado, facilitando a navega\u00e7\u00e3o e a organiza\u00e7\u00e3o dos registros.</p>"},{"location":"_Disciplina/Roteiros/Django/Intro%20Django/","title":"Intro Django","text":"<p>Para criar um Django REST API com base nas classes que definimos no diagrama, voc\u00ea pode seguir os passos abaixo. Vamos estruturar o app com as classes principais.</p> <p>Ps:. N\u00e3o esque\u00e7a de sempre criar o ambiente virtual( ctrl +shift + P =&gt; Python Create Enviroment ) antes de come\u00e7ar qualquer projeto.</p>"},{"location":"_Disciplina/Roteiros/Django/Intro%20Django/#1-configuracao-inicial-do-projeto-django","title":"1. Configura\u00e7\u00e3o Inicial do Projeto Django","text":"<p>Certifique-se de ter o Django e o Django REST Framework instalados. Se ainda n\u00e3o estiverem instalados, execute:</p> <pre><code>pip install django\n</code></pre>"},{"location":"_Disciplina/Roteiros/Django/Intro%20Django/#criacao-do-projeto-e-app","title":"Cria\u00e7\u00e3o do Projeto e App","text":"<pre><code>django-admin startproject project\n\npython manage.py startapp app\n</code></pre>"},{"location":"_Disciplina/Roteiros/Django/Intro%20Django/#2-configurar-o-projeto-django","title":"2. Configurar o Projeto Django","text":"<p>No arquivo <code>settings.py</code> do projeto, adicione o <code>rest_framework</code> e o novo app <code>activities</code> na lista de aplicativos instalados:</p> <pre><code>INSTALLED_APPS = [\n    # Apps Django\n    'django.contrib.admin',\n    'django.contrib.auth',\n    'django.contrib.contenttypes',\n    'django.contrib.sessions',\n    'django.contrib.messages',\n    'django.contrib.staticfiles',\n    'app',\n]\n</code></pre>"},{"location":"_Disciplina/Roteiros/Django/Intro%20Django/#3-criar-as-migrations-e-migrar-o-banco-de-dados","title":"3. Criar as Migrations e Migrar o Banco de Dados","text":"<p>Agora que o modelo est\u00e1 pronto, criamos as migra\u00e7\u00f5es e aplicamos ao banco de dados:</p> <pre><code>python manage.py makemigrations\npython manage.py migrate\n</code></pre>"},{"location":"_Disciplina/Roteiros/Django/Intro%20Django/#4-iniciar-o-servidor-do-django","title":"4. Iniciar o servidor do Django:","text":"<pre><code>python manage.py runserver\n</code></pre> <p>Acesse <code>http://127.0.0.1:8000/api/</code> para ver os endpoints dispon\u00edveis para criar e visualizar atividades, tipos de atividades, m\u00e9tricas e hist\u00f3rico.</p>"},{"location":"_Disciplina/Roteiros/Django/Intro%20Django/#5-criar-super-usuario","title":"5. Criar super Usu\u00e1rio","text":"<pre><code>python manage.py createsuperuser\n</code></pre>"},{"location":"_Disciplina/Roteiros/Django/Intro%20Django/#6-django-admin","title":"6. Django-Admin","text":"<pre><code>localhost:8000/admin\n</code></pre>"},{"location":"_Disciplina/Roteiros/Django/Intro%20Django/#7-criar-o-models","title":"7. Criar o Models","text":"<p>Defina um modelo para representar um empregado:</p> <pre><code>from django.db import models\n\nclass Employee(models.Model):\n    name = models.CharField(max_length=100)\n    role = models.CharField(max_length=100)**\n    department = models.CharField(max_length=100)**\n\n    def __str__(self):\n        return self.name\n</code></pre> <p>Agora aplique novamente o makemigrations para atualizar os models dispon\u00edveis no app e o migrate para gerar a tabela no banco</p> <pre><code>python manage.py makemigrations\npython manage.py migrate\n</code></pre>"},{"location":"_Disciplina/Roteiros/Django/Intro%20Django/#8-adicionar-ao-painel-do-django-admin","title":"8. Adicionar ao Painel do Django-Admin","text":"<p>No app/admin.py import a nova classe Employee no Django-Admin</p> <pre><code>from django.contrib import admin\nfrom .models import Employee\n\nadmin.site.register(Employee)\n</code></pre>"},{"location":"_Disciplina/Roteiros/Django/Intro%20Django/#9-django-admin","title":"9. Django-Admin","text":"<p>Rode novamente e entre no endere\u00e7o do Django-Admin</p> <pre><code>python manage.py runserver\nlocalhost:8000/admin\n</code></pre> <p>Para cada model adicionado devemos repetir o makemigrations  e o migrate e adicionarmos ao painel Django-Admin</p>"},{"location":"_Disciplina/Roteiros/Django/Intro%20Django/#10-adicione-o-department","title":"10. Adicione o Department","text":"<pre><code>from django.db import models\n\nclass Department(models.Model):\n    name = models.CharField(max_length=100)\n\n    def __str__(self):\n        return self.name\n\nclass Employee(models.Model):\n    name = models.CharField(max_length=100)\n    email = models.EmailField()\n    role = models.CharField(max_length=100)\n    department = models.ForeignKey(Department, on_delete=models.CASCADE)\n\n    def __str__(self):\n        return self.name\n</code></pre>"},{"location":"base/5w2h/","title":"5W2H","text":""},{"location":"base/5w2h/#introducao","title":"Introdu\u00e7\u00e3o","text":"<p>     O 5W2H \u00e9 uma ferramenta administrativa  que pode ser utilizada para diferentes contextos dentro de uma organiza\u00e7\u00e3o, como na organiza\u00e7\u00e3o para planejamento estrat\u00e9gico e guia na execu\u00e7\u00e3o de a\u00e7\u00f5es. O 5W2H baseia-se em 7 perguntas (What?, Why?, Where?, Who?, When?, How? e How much?), com o intuito de esclarecer e organizar ideias. A ferramenta ser\u00e1 utilizada como um guia de a\u00e7\u00f5es, tornando os objetivos mais evidentes para a equipe, auxiliando na compreens\u00e3o, organiza\u00e7\u00e3o e tomadas de decis\u00f5es no projeto. </p>"},{"location":"base/5w2h/#metodologia","title":"Metodologia","text":"<p>     A equipe se reuniu para esclarecimento sobre o tema do projeto, a partir dos pontos debatidos foi poss\u00edvel responder \u00e0s quest\u00f5es do 5W2H.   </p>"},{"location":"base/5w2h/#questoes-5w2h","title":"Quest\u00f5es 5W2H","text":""},{"location":"base/5w2h/#versao-10","title":"Vers\u00e3o 1.0","text":""},{"location":"base/5w2h/#visao-geral","title":"Vis\u00e3o geral","text":"Quest\u00e3o Resposta What?(O que deve ser\u00e1 feito?) Aplicativo Web App para.... Why? (Por que isso ser\u00e1 feito?) Para auxiliar... Where? (Onde ser\u00e1 feito?) O trabalho ser\u00e1 realizado.... When? (Quando ser\u00e1 feito?) Durante o semestre de XXXX Who? (Quem ir\u00e1 fazer?) A equipe \u00e9 formada pelos alunos... How? (Como ser\u00e1 feito?) Utilizando metodologia RUP/UP e ferramentas como... How much? (Quanto custar\u00e1?) O custo do projeto ser\u00e1 o tempo e esfor\u00e7o para o desenvolvimento da aplica\u00e7\u00e3o"},{"location":"base/5w2h/#versao-20","title":"Vers\u00e3o 2.0","text":""},{"location":"base/5w2h/#visao-produto","title":"Vis\u00e3o produto","text":"Quest\u00e3o Resposta What?(O que deve ser\u00e1 feito?) Ger\u00eancia de XXXX Why? (Por que isso ser\u00e1 feito?) Para auxiliar na... Where? (Onde ser\u00e1 feito?) No...) When? (Quando ser\u00e1 feito?) A ger\u00eancia ser\u00e1.... Who? (Quem ir\u00e1 fazer?) Pessoa(s).... How? (Como ser\u00e1 feito?) Utilizando o nome do aplicativo... How much? (Quanto custar\u00e1?) Tempo...."},{"location":"base/5w2h/#conclusao","title":"Conclus\u00e3o","text":"<p>O 5W2H \u00e9 um t\u00e9cnica bem simples e de f\u00e1cil entendimento, sem a necessidade de um especialista. Dentro da disciplina a t\u00e9cnica fornece um entendimento melhor, para a equipe, sobre o projeto como responsabilidades, motiva\u00e7\u00e3o e organiza\u00e7\u00e3o de a\u00e7\u00f5es.   </p>"},{"location":"base/5w2h/#referencias-bibliograficas","title":"Refer\u00eancias Bibliogr\u00e1ficas","text":"<p>5W2H: disponivel em :https://www../</p> <p>O que \u00e9 5W2H, disponivel em :https://www...</p>"},{"location":"base/5w2h/#autores","title":"Autor(es)","text":"Data Vers\u00e3o Descri\u00e7\u00e3o Autor(es) 24/08/20 1.0 Cria\u00e7\u00e3o do documento xxx xxxx 09/09/20 2.0 Adicionada vis\u00e3o produto xxxx xxxx"},{"location":"base/Brainstorm/","title":"Brainstorm","text":""},{"location":"base/Brainstorm/#introducao","title":"Introdu\u00e7\u00e3o","text":"<p> O brainstorm \u00e9 uma t\u00e9cnica de elicita\u00e7\u00e3o de requisitos que consiste em reunir a equipe e discutir sobre diversos t\u00f3picos gerais do projeto apresentados no documento problema de neg\u00f3cio. No brainstorm o di\u00e1logo \u00e9 incentivado e cr\u00edticas s\u00e3o evitadas para permitir que todos colaborem com suas pr\u00f3prias ideias. </p>"},{"location":"base/Brainstorm/#metodologia","title":"Metodologia","text":"<p> A equipe se reuniu para debater ideias gerais sobre o projeto via..., come\u00e7ou .... e terminou..., onde o XXXX XXXX foi o moderador, direcionando a equipe com quest\u00f5es pr\u00e9-elaboradas, e transcrevendo as respostas para o documento. </p>"},{"location":"base/Brainstorm/#brainstorm","title":"Brainstorm","text":""},{"location":"base/Brainstorm/#versao-10","title":"Vers\u00e3o 1.0","text":""},{"location":"base/Brainstorm/#perguntas","title":"Perguntas","text":""},{"location":"base/Brainstorm/#1-qual-o-objetivo-principal-da-aplicacao","title":"1. Qual o objetivo principal da aplica\u00e7\u00e3o?","text":"<p> XXXX - Deve ser uma plataforma onde qualquer pessoa possa... </p> <p>ZZZ - A plataforma deve fornece...</p> <p>YYYY - O objetivo da aplica\u00e7\u00e3o \u00e9....</p> <p>WWWW - O principal objetivo da aplica\u00e7\u00e3o \u00e9 a...</p> <p>KKKK - A plataforma deve gerenciar... </p>"},{"location":"base/Brainstorm/#2-como-sera-o-processo-para-cadastrar-um-novo-cliente","title":"2. Como ser\u00e1 o processo para cadastrar um novo cliente?","text":"<p> XXXX - O moderador dever\u00e1 fazer login e...  YYYY - O cliente...  WWWW - Com o usu\u00e1rio logado, ele dever\u00e1...  ZZZZ - O cliente...  KKK - O cliente...  ---  ### 3. Como ser\u00e1 a forma de adicionar produtos?  <p> XXXX - O cliente ao cadastrar... </p> <p> YYYYY - O produto tem... </p> ZZZZ - O produto....  XXXX - O produto....   ---  ### 4. Outras perguntas pertinentes ao contexto  <p> XXXX - Com a localiza\u00e7\u00e3o...  YYYY - O cliente...  ZZZ - O cliente...  ---  ### 5. \"Outras perguntas pertinentes ao contexto\", Como seria a forma de adicionar do cliente adicionar os produtos ? <p> XXX - O cliente.... </p>  ### 6. Quais informa\u00e7\u00f5es seriam interessante para o cliente? <p> XXX - Informa\u00e7\u00f5es...     ZZZZ - O cliente usu\u00e1rio poder\u00e1 acessar informa\u00e7\u00f5es...     WWWWs - O usu\u00e1rio poder\u00e1 ver scouts de partidas do torneio, ver as regras dos torneios, locais e data das partidas.  </p>  ### Requisitos elicitados  |ID|Descri\u00e7\u00e3o| |----|-------------| |BS01| O cliente...| |BS02| O cliente...| |BS03| O cliente...| |BS04| O cliente...| |BS05| O cliente...| |BS06| O cliente...| |BS07| O cliente...| |BS08| O cliente...| |BS09| O cliente...| |BS10| O produto...| |BS11| O produto...| |BS12| O produto...| |BS13| O produto...| |BS14| O produto...| |BS15| O produto...|  ## Conclus\u00e3o <p> Atrav\u00e9s da aplica\u00e7\u00e3o da t\u00e9cnica, foi poss\u00edvel elicitar alguns dos primeiros requisitos do projeto. </p> ## Refer\u00eancias Bibliogr\u00e1ficas  &gt; BARBOSA, S. D. J; DA SILVA, B. S. Intera\u00e7\u00e3o humano-computador. Elsevier, 2010.   ## Autor(es) | Data | Vers\u00e3o | Descri\u00e7\u00e3o | Autor(es) | | -- | -- | -- | -- | | DD/MM/YYYY | 1.0 | Cria\u00e7\u00e3o do documento | XXX XXXX, XXXX XXXX, YYY YYYY e ZZZ XXXX |"},{"location":"base/doc_template/","title":"Modelo de Documento","text":""},{"location":"base/doc_template/#introducao","title":"Introdu\u00e7\u00e3o","text":""},{"location":"base/doc_template/#metodologia","title":"Metodologia","text":""},{"location":"base/doc_template/#desenvolvimento-renomeie-este-topico","title":"Desenvolvimento (Renomeie este t\u00f3pico)","text":""},{"location":"base/doc_template/#versao-10","title":"Vers\u00e3o 1.0","text":""},{"location":"base/doc_template/#conclusao","title":"Conclus\u00e3o","text":""},{"location":"base/doc_template/#referencias","title":"Refer\u00eancias","text":""},{"location":"base/doc_template/#autores","title":"Autor(es)","text":"Data Vers\u00e3o Descri\u00e7\u00e3o Autor(es) dd/mm/aa 1.0 Cria\u00e7\u00e3o do documento Autores"},{"location":"base/documento_de_visao/","title":"Documento de Vis\u00e3o","text":""},{"location":"base/documento_de_visao/#introducao","title":"Introdu\u00e7\u00e3o","text":"<p> O prop\u00f3sito deste documento \u00e9 fornecer uma vis\u00e3o geral sobre o projeto que ser\u00e1 realizado na disciplina Arquitetura e Desenho de Software 2020/1, na Universidade de Bras\u00edlia. Sendo assim, Nesse documento ser\u00e3o descritas de maneira resumida as principais funcionalidades, usabilidades, o problema que ser\u00e1 abordado e os objetivos da equipe. </p>"},{"location":"base/documento_de_visao/#descricao-do-problema","title":"Descri\u00e7\u00e3o do Problema","text":"<p> Lorem Ipsum is simply dummy text of the printing and typesetting industry. Lorem Ipsum has been the industry's standard dummy text ever since the 1500s, when an unknown printer took a galley of type and scrambled it to make a type specimen book. It has survived not only five centuries, but also the leap into electronic typesetting, remaining essentially unchanged. </p>"},{"location":"base/documento_de_visao/#problema","title":"Problema","text":"<p>Dificuldade em gerenciar e organizar...</p>"},{"location":"base/documento_de_visao/#impactados","title":"Impactados","text":"<p>Usu\u00e1rios....</p>"},{"location":"base/documento_de_visao/#consequencia","title":"Consequ\u00eancia","text":"<p>A cria\u00e7\u00e3o de novos....</p>"},{"location":"base/documento_de_visao/#solucao","title":"Solu\u00e7\u00e3o","text":"<p>Utilizar a aplica\u00e7\u00e3o que ser\u00e1 desenvolvida visando resolver...</p>"},{"location":"base/documento_de_visao/#objetivos","title":"Objetivos","text":"<p> O objetivo da equipe de desenvolvimento \u00e9 fornecer... </p>"},{"location":"base/documento_de_visao/#descricao-do-usuario","title":"Descri\u00e7\u00e3o do Usu\u00e1rio","text":"<p> Os usu\u00e1rios ser\u00e3o.... </p>"},{"location":"base/documento_de_visao/#recursos-do-produto","title":"Recursos do produto","text":""},{"location":"base/documento_de_visao/#conta","title":"Conta","text":"<p> O cliente poder\u00e1 realizar seu cadastro.... </p>"},{"location":"base/documento_de_visao/#loja","title":"Loja","text":"<p> O cliente poder\u00e1 cadastrar uma loja \u00fanica.... </p>"},{"location":"base/documento_de_visao/#produto","title":"Produto","text":"<p> O cliente poder\u00e1 cadastrar.... </p>"},{"location":"base/documento_de_visao/#pesquisa-sobre-lojas","title":"Pesquisa sobre Lojas","text":"<p> O cliente poder\u00e1 pesquisar... </p>"},{"location":"base/documento_de_visao/#restricoes","title":"Restri\u00e7\u00f5es","text":"<p> A aplica\u00e7\u00e3o n\u00e3o ser\u00e1 respons\u00e1vel... </p>"},{"location":"base/documento_de_visao/#referencias-bibliograficas","title":"Refer\u00eancias Bibliogr\u00e1ficas","text":"<p>Documento de vis\u00e3o. Dispon\u00edvel em https://www... Acesso em dd/MM/yyYY</p> <p>Documento de vis\u00e3o. Dispon\u00edvel em  Acesso em dd/MM/yyYY</p>"},{"location":"base/documento_de_visao/#versionamento","title":"Versionamento","text":"Data Vers\u00e3o Descri\u00e7\u00e3o Autor(es) DD/MM/YYYY 1.0 Cria\u00e7\u00e3o do documento XXX XXXX e ZZZ ZZZZ"},{"location":"base/empresa/","title":"Empresa","text":""},{"location":"base/empresa/#member-get-member","title":"Member Get Member","text":""},{"location":"base/empresa/#resumo","title":"Resumo","text":"<p>A funcionalidade Member Get Member permite que os usu\u00e1rios da plataforma recomendem e convidem novos membros para se cadastrarem. Atrav\u00e9s de um sistema de convites, os usu\u00e1rios atuais podem compartilhar links personalizados para novos usu\u00e1rios, incentivando o crescimento da comunidade da plataforma.</p>"},{"location":"base/empresa/#objetivo","title":"Objetivo","text":"<p>Incentivar o crescimento org\u00e2nico da plataforma, permitindo que usu\u00e1rios existentes convidem novos membros para se cadastrarem. Al\u00e9m disso, a funcionalidade busca aumentar o engajamento ao oferecer recompensas tanto para quem indica quanto para quem \u00e9 convidado, promovendo uma rede colaborativa de desenvolvimento profissional. Jornadas do Usu\u00e1rio</p> <ol> <li>Convidar um Novo Membro</li> <li>Receber um Convite e Cadastrar-se    Requisitos T\u00e9cnicos</li> </ol>"},{"location":"base/empresa/#banco-de-dados","title":"Banco de Dados:","text":"<p>\u2022 Armazenar o link de convite personalizado associado ao ID do usu\u00e1rio \u2022 que envia o convite. \u2022 Registrar o v\u00ednculo entre o usu\u00e1rio que enviou o convite e o novo \u2022 usu\u00e1rio que se cadastrou atrav\u00e9s do link. \u2022 Manter hist\u00f3rico de convites enviados e aceitos para cada usu\u00e1rio.</p>"},{"location":"base/empresa/#frontend","title":"Frontend:","text":"<p>\u2022 Interface para exibir o link de convite personalizado para o usu\u00e1rio. \u2022 Bot\u00f5es de compartilhamento integrados para redes sociais e email. \u2022 P\u00e1gina de cadastro que identifica o convite e exibe o nome do usu\u00e1rio \u2022 que enviou o convite.</p>"},{"location":"base/empresa/#backend","title":"Backend:","text":"<p>\u2022 APIs para gerar e gerenciar links de convite personalizados. \u2022 Valida\u00e7\u00e3o do link de convite durante o processo de cadastro para garantir que o novo usu\u00e1rio seja corretamente vinculado ao usu\u00e1rio que enviou o convite. \u2022 Controle de limites de convites por usu\u00e1rio, se aplic\u00e1vel. \u2022 Autentica\u00e7\u00e3o e Autoriza\u00e7\u00e3o: \u2022 Garantir que apenas usu\u00e1rios autenticados possam acessar e gerar links de convite.</p> <p>Verificar a validade do link de convite durante o cadastro do novo usu\u00e1rio (evitar o uso de links expirados ou inv\u00e1lidos).</p>"},{"location":"base/empresa/#_1","title":"Empresa","text":"<p>Regras de Neg\u00f3cio</p> <ol> <li>Gera\u00e7\u00e3o de Links de Convite:</li> <li>Limite de Convites:</li> <li>Validade dos Links de Convite:</li> <li>Vincula\u00e7\u00e3o de Convites:</li> <li>Cadastro do Convidado:</li> <li>Sem Benef\u00edcios Imediatos:</li> </ol>"},{"location":"base/empresa/#swot-pessoal","title":"SWOT Pessoal","text":""},{"location":"base/empresa/#resumo_1","title":"Resumo","text":"<p>A funcionalidade SWOT Pessoal permite que o usu\u00e1rio realize uma an\u00e1lise SWOT (Strengths, Weaknesses, Opportunities, Threats) de sua pr\u00f3pria carreira, identificando seus pontos fortes, pontos fracos, oportunidades de crescimento e amea\u00e7as que podem impactar seu desenvolvimento profissional.</p>"},{"location":"base/empresa/#objetivo_1","title":"Objetivo","text":"<p>Permitir que o usu\u00e1rio identifique e avalie seus pontos fortes, fraquezas, oportunidades e amea\u00e7as em rela\u00e7\u00e3o \u00e0 sua carreira, facilitando a cria\u00e7\u00e3o de um plano de a\u00e7\u00e3o alinhado ao seu desenvolvimento profissional. Estes dados ser\u00e3o utilizados para auxiliar o sistema na personaliza\u00e7\u00e3o do plano de carreira, miss\u00f5es e outros recursos.</p>"},{"location":"base/empresa/#jornadas-do-usuario","title":"Jornadas do Usu\u00e1rio","text":"<p>1. Primeira Utiliza\u00e7\u00e3o (Cria\u00e7\u00e3o da Matriz SWOT) </p> <ol> <li> <p>O usu\u00e1rio acessa a funcionalidade SWOT Pessoal no menu da plataforma. </p> </li> <li> <p>A interface apresenta uma breve introdu\u00e7\u00e3o sobre o que \u00e9 a an\u00e1lise SWOT e seus benef\u00edcios. </p> </li> <li> <p>O usu\u00e1rio responde a perguntas orientadoras ou insere informa\u00e7\u00f5es diretamente nas quatro categorias: For\u00e7as, Fraquezas, Oportunidades e Amea\u00e7as. </p> </li> <li> <p>Ap\u00f3s preencher todos os campos, o usu\u00e1rio revisa as respostas e confirma a conclus\u00e3o da an\u00e1lise. </p> </li> <li> <p>A matriz SWOT \u00e9 gerada e apresentada ao usu\u00e1rio em um formato visual. </p> </li> <li> <p>O usu\u00e1rio pode acessar a an\u00e1lise SWOT finalizada em sua \u00e1rea pessoal.</p> </li> <li> <p>Revis\u00e3o da Matriz SWOT </p> </li> <li> <p>O usu\u00e1rio acessa a funcionalidade e visualiza sua matriz SWOT anterior. </p> </li> <li> <p>A plataforma oferece a op\u00e7\u00e3o de atualizar as informa\u00e7\u00f5es nas quatro categorias (For\u00e7as, Fraquezas, Oportunidades e Amea\u00e7as). </p> </li> <li> <p>O usu\u00e1rio revisa e confirma as novas entradas.</p> </li> <li> <p>A matriz atualizada \u00e9 gerada e substitui a anterior.</p> </li> </ol> <p>Requisitos T\u00e9cnicos</p> <p>Banco de Dados:</p> <p>Armazenamento de dados da an\u00e1lise SWOT: cada an\u00e1lise SWOT deve ser associada ao perfil do usu\u00e1rio, com campos para For\u00e7as, Fraquezas, Oportunidades e Amea\u00e7as. Hist\u00f3rico de an\u00e1lises: manter um registro das an\u00e1lises anteriores, caso o usu\u00e1rio queira comparar vers\u00f5es antigas.</p> <p>Frontend:</p> <p>Cria\u00e7\u00e3o de uma interface intuitiva e responsiva para o preenchimento das categorias da an\u00e1lise SWOT. Exibi\u00e7\u00e3o visual da matriz SWOT em formato de quadrantes, destacando os itens inseridos pelo usu\u00e1rio.</p> <p>Backend:</p> <p>APIs para o envio e armazenamento das informa\u00e7\u00f5es preenchidas pelo usu\u00e1rio (For\u00e7as, Fraquezas, Oportunidades e Amea\u00e7as). Manter a seguran\u00e7a dos dados do usu\u00e1rio, garantindo que apenas ele possa acessar sua an\u00e1lise SWOT. Regras de Neg\u00f3cio 19. Periodicidade da An\u00e1lise: O usu\u00e1rio pode realizar uma nova an\u00e1lise SWOT a cada x dias (configur\u00e1vel). Durante esse intervalo, o usu\u00e1rio pode visualizar a an\u00e1lise anterior, mas n\u00e3o pode edit\u00e1-la at\u00e9 que o per\u00edodo configurado seja completado. 20. Exclusividade da An\u00e1lise: Cada an\u00e1lise SWOT \u00e9 pessoal e exclusiva ao usu\u00e1rio. Nem outros usu\u00e1rios nem administradores ter\u00e3o acesso \u00e0s an\u00e1lises SWOT de terceiros, garantindo total privacidade das informa\u00e7\u00f5es. 21. Preenchimento Parcial: O usu\u00e1rio pode salvar uma an\u00e1lise SWOT mesmo que ela n\u00e3o esteja totalmente preenchida. A an\u00e1lise ser\u00e1 considerada como \"Pendente\" at\u00e9 que seja marcada como \u201cConclu\u00edda\u201d. O usu\u00e1rio poder\u00e1 voltar a qualquer momento para finalizar e marcar a an\u00e1lise como \"Conclu\u00edda\". 22. Hist\u00f3rico de An\u00e1lises: O sistema deve manter um hist\u00f3rico das an\u00e1lises SWOT realizadas pelo usu\u00e1rio. O usu\u00e1rio pode consultar as an\u00e1lises anteriores.</p>"},{"location":"base/empresa/#feedbacks-do-produto","title":"Feedbacks do Produto","text":""},{"location":"base/empresa/#resumo_2","title":"Resumo","text":"<p>A funcionalidade Captura de Feedbacks sobre o Produto permitir\u00e1 que os usu\u00e1rios forne\u00e7am feedback diretamente na plataforma sobre sua experi\u00eancia de uso, funcionalidades, desempenho e sugest\u00f5es de melhoria. A ferramenta ser\u00e1 integrada de forma simples e acess\u00edvel, com op\u00e7\u00f5es de feedback direto ou atrav\u00e9s de question\u00e1rios r\u00e1pidos.</p> <p>Objetivo</p> <p>Esses feedbacks ser\u00e3o armazenados para an\u00e1lise pela equipe da plataforma, ajudando a identificar \u00e1reas de melhoria e poss\u00edveis novas funcionalidades a serem desenvolvidas. Jornadas do Usu\u00e1rio 23. Envio de Feedback Espont\u00e2neo 24. O usu\u00e1rio acessa a se\u00e7\u00e3o Feedback no menu da plataforma. 25. A plataforma exibe um formul\u00e1rio simples para o usu\u00e1rio relatar sua experi\u00eancia, incluindo campos opcionais para: \u2022 Coment\u00e1rios gerais. \u2022 Sugest\u00f5es de melhoria. \u2022 Relato de problemas t\u00e9cnicos ou erros. 26. O usu\u00e1rio preenche os campos desejados e envia o feedback. 27. A plataforma confirma o recebimento do feedback e exibe uma mensagem 28. de agradecimento.</p>"},{"location":"base/empresa/#requisitos-tecnicos","title":"Requisitos T\u00e9cnicos","text":""},{"location":"base/empresa/#banco-de-dados_1","title":"\u2022 Banco de Dados:","text":"<p>o Armazenar os feedbacks enviados pelos usu\u00e1rios, incluindo: \uf0a7 ID do usu\u00e1rio. \uf0a7 Texto do feedback. \uf0a7 Tipo de feedback (sugest\u00e3o, coment\u00e1rio, relato de erro). \uf0a7 Data e hora do envio. o Garantir que os feedbacks sejam associados ao perfil do usu\u00e1rio para rastreabilidade e an\u00e1lise futura.</p>"},{"location":"base/empresa/#frontend_1","title":"\u2022 Frontend:","text":"<p>o Interface de formul\u00e1rio simples e intuitivo para o envio de feedback. o Campos opcionais para tipos de feedback, como: \uf0a7 Coment\u00e1rios gerais. \uf0a7 Sugest\u00f5es de melhorias. \uf0a7 Relatos de erros ou problemas t\u00e9cnicos. o Mensagem de confirma\u00e7\u00e3o ap\u00f3s o envio do feedback.</p>"},{"location":"base/empresa/#backend_1","title":"Backend:","text":"<p>o APIs para receber, processar e armazenar os feedbacks enviados pelos usu\u00e1rios. o Garantir que os feedbacks sejam armazenados de forma segura e possam ser acessados pela equipe de an\u00e1lise. Autentica\u00e7\u00e3o e Autoriza\u00e7\u00e3o: \u2022 Garantir que apenas usu\u00e1rios autenticados possam enviar feedbacks, associando cada feedback ao perfil do usu\u00e1rio.</p>"},{"location":"base/empresa/#regras-de-negocio","title":"Regras de Neg\u00f3cio","text":""},{"location":"base/empresa/#acesso-a-funcionalidade","title":"* Acesso \u00e0 Funcionalidade:","text":"<p>Apenas usu\u00e1rios autenticados podem enviar feedbacks pela plataforma.</p>"},{"location":"base/empresa/#tipos-de-feedback","title":"* Tipos de Feedback:","text":"<p>\u2022 O feedback pode ser classificado em categorias opcionais, como: \u2022 Coment\u00e1rios gerais. \u2022 Sugest\u00f5es de melhoria. \u2022 Relato de erros ou problemas t\u00e9cnicos.</p>"},{"location":"base/empresa/#envio-de-feedback-parcial","title":"* Envio de Feedback Parcial:","text":"<p>\u2022 O usu\u00e1rio n\u00e3o \u00e9 obrigado a preencher todos os campos do feedback. Se desejar, pode deixar alguns campos em branco e enviar apenas um coment\u00e1rio.</p>"},{"location":"base/empresa/#confirmacao-de-envio","title":"* Confirma\u00e7\u00e3o de Envio:","text":"<p>Ap\u00f3s o envio do feedback, o sistema deve exibir uma mensagem de confirma\u00e7\u00e3o, assegurando o usu\u00e1rio que o feedback foi recebido.</p>"},{"location":"base/empresa/#numero-de-feedbacks","title":"* N\u00famero de Feedbacks:","text":"<p>N\u00e3o h\u00e1 limite para a quantidade de feedbacks que um usu\u00e1rio pode enviar. O usu\u00e1rio pode fornecer feedbacks m\u00faltiplos a qualquer momento. \u2003</p>"},{"location":"base/empresa/#feedbacks-entre-usuarios","title":"Feedbacks entre Usu\u00e1rios","text":""},{"location":"base/empresa/#resumo_3","title":"Resumo","text":"<p>A funcionalidade Envio e Recebimento de Feedbacks entre Usu\u00e1rios permitir\u00e1 que os usu\u00e1rios da plataforma enviem e recebam feedbacks uns dos outros, promovendo uma cultura de colabora\u00e7\u00e3o e desenvolvimento pessoal. Os feedbacks podem ser solicitados ou enviados espontaneamente, abrangendo aspectos como compet\u00eancias, comportamentos ou atividades realizadas. Essa funcionalidade ajudar\u00e1 os usu\u00e1rios a obter insights valiosos de colegas, mentores ou outros membros da comunidade, facilitando o crescimento cont\u00ednuo e o autodesenvolvimento.</p>"},{"location":"base/empresa/#objetivo_2","title":"Objetivo","text":"<p>Facilitar a troca de feedbacks entre os usu\u00e1rios da plataforma, permitindo que eles ofere\u00e7am e recebam avalia\u00e7\u00f5es construtivas sobre suas compet\u00eancias e comportamentos profissionais. A funcionalidade busca promover o crescimento cont\u00ednuo e o autodesenvolvimento, fortalecendo a intera\u00e7\u00e3o e colabora\u00e7\u00e3o entre os membros da comunidade.</p>"},{"location":"base/empresa/#jornadas-do-usuario_1","title":"Jornadas do Usu\u00e1rio","text":"<p>1. Solicitar Feedback de Outro Usu\u00e1rio</p> <ul> <li>O usu\u00e1rio acessa a se\u00e7\u00e3o Feedback entre Usu\u00e1rios e escolhe a op\u00e7\u00e3o   \"Solicitar Feedback\".</li> <li> <p>O usu\u00e1rio seleciona o destinat\u00e1rio (um colega ou mentor da plataforma) e   define o tipo de feedback que deseja receber (ex.: feedback sobre   compet\u00eancias, comportamentos, ou uma atividade espec\u00edfica).</p> </li> <li> <p>O solicitante pode incluir uma mensagem opcional explicando o contexto   ou o que gostaria de receber como retorno.</p> </li> <li>Ap\u00f3s enviar o feedback, o solicitante visualiza uma mensagem informando   que o feedback foi recebido.</li> </ul> <p>2\\. Enviar Feedback Espont\u00e2neo a Outro Usu\u00e1rio</p> <ul> <li>O usu\u00e1rio acessa a se\u00e7\u00e3o Feedback entre Usu\u00e1rios e escolhe a op\u00e7\u00e3o   \"Enviar Feedback\".</li> <li> <p>O usu\u00e1rio seleciona o destinat\u00e1rio e define o tipo de feedback   (compet\u00eancias, comportamentos, ou outra \u00e1rea de foco).</p> </li> <li> <p>O usu\u00e1rio preenche o feedback e envia diretamente, sem a necessidade de   solicita\u00e7\u00e3o pr\u00e9via.</p> </li> <li>O destinat\u00e1rio recebe o feedback em sua \u00e1rea pessoal.</li> </ul> <p>3. Visualizar Feedback Recebido</p> <ul> <li>O usu\u00e1rio acessa sua \u00e1rea pessoal e visualiza os feedbacks recebidos.</li> <li>O usu\u00e1rio pode consultar o hist\u00f3rico de feedbacks e responder ao   feedback, se desejar, para iniciar uma conversa ou pedir mais detalhes.</li> </ul> <p>4\\. Reportar Feedback Recebido</p> <ul> <li>O usu\u00e1rio acessa a se\u00e7\u00e3o de Feedbacks Recebidos e visualiza um   feedback que considera ofensivo ou inapropriado.</li> <li> <p>Na interface de visualiza\u00e7\u00e3o do feedback, o usu\u00e1rio encontra a op\u00e7\u00e3o   \"Reportar\".</p> </li> <li> <p>O usu\u00e1rio clica na op\u00e7\u00e3o \"Reportar\" e seleciona o motivo do report (ex.:   conte\u00fado ofensivo, impr\u00f3prio, ou fora das diretrizes da plataforma).</p> </li> <li> <p>O sistema exibe uma confirma\u00e7\u00e3o de que o feedback foi reportado e ser\u00e1   revisado pela equipe da plataforma.</p> </li> <li> <p>A equipe de modera\u00e7\u00e3o recebe o report, revisa o conte\u00fado, e toma as   medidas cab\u00edveis (ex.: remo\u00e7\u00e3o do feedback, aviso ou suspens\u00e3o do   usu\u00e1rio que enviou o feedback).</p> </li> <li>O usu\u00e1rio que reportou o feedback pode ser informado do resultado da   revis\u00e3o, dependendo das diretrizes da plataforma.</li> </ul>"},{"location":"base/empresa/#requisitos-tecnicos_1","title":"Requisitos T\u00e9cnicos","text":"<p>Banco de Dados:</p> <p>\u2022 Armazenar todos os feedbacks enviados entre os usu\u00e1rios, incluindo: o ID do remetente (usu\u00e1rio que enviou o feedback). o ID do destinat\u00e1rio (usu\u00e1rio que recebeu o feedback). o Tipo de feedback (compet\u00eancias, comportamentos, atividade o espec\u00edfica, etc.). o Conte\u00fado do feedback (texto inserido pelo remetente). o Data e hora de envio.</p> <p>\u2022 Armazenar logs de report de feedbacks, incluindo:</p> <p>o ID do feedback reportado. o Motivo do report (conte\u00fado ofensivo, impr\u00f3prio, etc.). o ID do usu\u00e1rio que reportou o feedback. o Status do report (pendente, revisado, a\u00e7\u00e3o tomada).</p>"},{"location":"base/empresa/#frontend_2","title":"Frontend:","text":"<p>\u2022 Interface para envio de feedbacks com op\u00e7\u00f5es para:</p> <p>o Sele\u00e7\u00e3o do destinat\u00e1rio. o Escolha do tipo de feedback (compet\u00eancias, comportamentos, o etc.). o Campo de texto para a mensagem do feedback.</p> <p>\u2022 Interface para solicita\u00e7\u00e3o de feedback, onde o usu\u00e1rio pode selecionaro destinat\u00e1rio e especificar o contexto da solicita\u00e7\u00e3o.</p> <p>\u2022 Visualiza\u00e7\u00e3o dos feedbacks recebidos em uma \u00e1rea privada, com aop\u00e7\u00e3o de responder ao feedback.</p> <p>\u2022 Bot\u00e3o \"Reportar\" dispon\u00edvel na visualiza\u00e7\u00e3o de feedbacks recebidos,permitindo que o usu\u00e1rio selecione o motivo do report e envie asolicita\u00e7\u00e3o de revis\u00e3o.</p>"},{"location":"base/empresa/#backend_2","title":"Backend:","text":"<p>\u2022 APIs para:</p> <p>o Envio de feedbacks entre usu\u00e1rios, garantindo que o feedback seja o armazenado de forma segura e privada. o Solicita\u00e7\u00e3o de feedback com as op\u00e7\u00f5es para selecionar o o destinat\u00e1rio e o contexto. o Gerenciamento de feedbacks recebidos, incluindo o hist\u00f3rico de o feedbacks. o Processamento de reports de feedbacks, registrando o motivo do o report. o Sistema de modera\u00e7\u00e3o que permite \u00e0 equipe revisar feedbacks o reportados e tomar as medidas cab\u00edveis (ex.: remo\u00e7\u00e3o do feedback o ou aviso ao usu\u00e1rio).</p> <p>\u2022 Garantir a seguran\u00e7a dos dados, assegurando que somente oremetente e o destinat\u00e1rio possam acessar o conte\u00fado do feedback.</p>"},{"location":"base/empresa/#autenticacao-e-autorizacao","title":"Autentica\u00e7\u00e3o e Autoriza\u00e7\u00e3o:","text":"<p>\u2022 Garantir que apenas usu\u00e1rios autenticados possam enviar, solicitar, visualizar e reportar feedbacks. \u2022 Implementar regras de autoriza\u00e7\u00e3o para que apenas o destinat\u00e1rio tenha acesso ao feedback recebido e apenas o remetente ao feedback enviado.</p>"},{"location":"base/empresa/#regras-de-negocio_1","title":"Regras de Neg\u00f3cio","text":"<ol> <li>Privacidade dos Feedbacks:    \u2022 Todos os feedbacks s\u00e3o estritamente privados, vis\u00edveis apenas pelo remetente (quem enviou) e pelo destinat\u00e1rio (quem recebeu). Nenhum outro usu\u00e1rio, incluindo administradores, tem acesso aos feedbacks trocados entre os usu\u00e1rios.</li> <li>Envio de Feedback:    Qualquer usu\u00e1rio autenticado pode enviar feedback espont\u00e2neo a outro usu\u00e1rio, selecionando o destinat\u00e1rio dentro da plataforma e preenchendo o formul\u00e1rio de feedback.    O feedback deve estar relacionado a compet\u00eancias, comportamentos, ou atividades espec\u00edficas, com a op\u00e7\u00e3o de adicionar uma mensagem contextual.</li> <li>Solicita\u00e7\u00e3o de Feedback:    \u2022 Qualquer usu\u00e1rio autenticado pode solicitar feedback de outro usu\u00e1rio, especificando o tipo de feedback desejado (compet\u00eancias, comportamentos, etc.) e o contexto da solicita\u00e7\u00e3o.    \u2022 O destinat\u00e1rio tem a liberdade de aceitar ou ignorar a solicita\u00e7\u00e3o de feedback sem penalidades.</li> <li>Limites de Feedbacks:</li> </ol> <p>\u2022 N\u00e3o h\u00e1 limites definidos para o n\u00famero de feedbacks que um usu\u00e1riopode enviar ou receber. Os usu\u00e1rios podem fornecer feedbacks m\u00faltiplos de acordo com as necessidades.</p> <ol> <li>Respostas aos Feedbacks:</li> </ol> <p>\u2022 Ap\u00f3s receber um feedback, o destinat\u00e1rio pode responder diretamente ao remetente para agradecer ou solicitar mais detalhes. A resposta tamb\u00e9m ser\u00e1 privada e apenas vis\u00edvel para o remetente original e o destinat\u00e1rio.</p> <ol> <li>Modera\u00e7\u00e3o de Conte\u00fado:</li> </ol> <p>\u2022 Todos os feedbacks devem seguir as diretrizes de uso da plataforma. Qualquer conte\u00fado ofensivo, impr\u00f3prio ou fora das normas pode ser reportado pelo destinat\u00e1rio. \u2022 O usu\u00e1rio que recebeu um feedback pode report\u00e1-lo como ofensivo ou impr\u00f3prio. O sistema registrar\u00e1 o report e o feedback ser\u00e1 revisado pela equipe da plataforma. \u2022 A equipe de modera\u00e7\u00e3o ser\u00e1 respons\u00e1vel por revisar os feedbacks reportados e tomar as medidas cab\u00edveis, como remo\u00e7\u00e3o do feedback ou aplica\u00e7\u00e3o de avisos ao usu\u00e1rio que enviou o conte\u00fado reportado.</p> <ol> <li>Processo de Report:</li> </ol> <p>\u2022 O destinat\u00e1rio de um feedback pode reportar o conte\u00fado se considerar que ele viola as diretrizes da plataforma. \u2022 Ap\u00f3s o report, o sistema registra o motivo. \u2022 A equipe de modera\u00e7\u00e3o revisa o feedback e decide se uma a\u00e7\u00e3o \u00e9 necess\u00e1ria (remo\u00e7\u00e3o ou advert\u00eancia ao remetente). \u2022 O usu\u00e1rio que reportou o feedback pode ser informado do resultado da modera\u00e7\u00e3o, dependendo das diretrizes da plataforma.</p>"},{"location":"base/entrevista/","title":"Entrevista","text":""},{"location":"base/entrevista/#introducao","title":"Introdu\u00e7\u00e3o","text":"<p> A t\u00e9cnica da entrevista trata-se de uma conversa guiada por um roteiro de perguntas ou t\u00f3picos, na qual visa questionar o stakeholders sobre o sistema atual e esclarecer as suas necessidades sobre o sistema que ser\u00e1 desenvolvido. A entrevista permite investiga\u00e7\u00e3o em profundidade sobre um problema, dessa forma coletar uma grande quantidade de informa\u00e7\u00f5es para o sistema. </p>"},{"location":"base/entrevista/#metodologia","title":"Metodologia","text":"<p> Para esta entrevista optamos por seguir um modelo de entrevista aberta, onde ter\u00e1 uma s\u00e9rie de perguntas de apoio pr\u00e9-definidas com finalidade do stakeholders expor informa\u00e7\u00f5es importantes para o sistema. As quest\u00f5es s\u00e3o formuladas e filtradas, de acordo com o interesse da equipe com o prop\u00f3sito de orientar o entrevistador durante a entrevista. O entrevistador e entrevistado tem liberdade para abordar qualquer assunto relacionado ao sistema durante a entrevista. </p>"},{"location":"base/entrevista/#roteiro","title":"Roteiro","text":"<ul> <li>Voc\u00ea.... ?</li> <li>Como funcionava.... ?</li> <li>Voc\u00ea j\u00e1 usou alguma aplica\u00e7\u00e3o.... </li> <li>Teve algum problema.... ?</li> <li>O que voc\u00ea acha de uma aplica\u00e7\u00e3o..... ?</li> <li>Para voc\u00ea qual seria o sistema ideal.... ?</li> <li>Voc\u00ea gostaria de poder se cadastrar..... </li> <li>voc\u00ea gostaria que as informa\u00e7\u00f5es... </li> </ul>"},{"location":"base/entrevista/#entrevistas","title":"Entrevistas","text":""},{"location":"base/entrevista/#versao-10","title":"Vers\u00e3o 1.0","text":""},{"location":"base/entrevista/#entrevista-1","title":"Entrevista 1","text":"Nome Papel xxxx Pedro Entrevistador xxxx xxxx Entrevistado Data Hor\u00e1rio de inicio Hor\u00e1rio de fim Descri\u00e7\u00e3o 03/09/20 12:11 12:38 Entrevista realizada via hangouts. Nome do participante Di\u00e1logo durante a apresenta\u00e7\u00e3o dos projetos XXX XXXX: Voc\u00ea... XXX XXXX: Sim.... XXX XXXX: Como... XXXX XXXX: J\u00e1..."},{"location":"base/entrevista/#requisitos-elicitados","title":"Requisitos elicitados","text":"ID Descri\u00e7\u00e3o REQ01 O ... REQ02 O ... REQ03 O ... REQ04 O ... REQ05 O ... REQ06 O ... REQ07 O ... REQ08 O ... REQ09 O ... REQ10 O ..."},{"location":"base/entrevista/#conclusao","title":"Conclus\u00e3o","text":"<p> Atrav\u00e9s da aplica\u00e7\u00e3o da t\u00e9cnica, foi poss\u00edvel elicitar alguns requisitos importantes para o projeto. </p>"},{"location":"base/entrevista/#referencias","title":"Refer\u00eancias","text":""},{"location":"base/entrevista/#autores","title":"Autor(es)","text":"Data Vers\u00e3o Descri\u00e7\u00e3o Autor(es) DD/MM/YYYY 1.0 Cria\u00e7\u00e3o do documento xxx XXXX DD/MM/YYYY 2.0 Adi\u00e7\u00e3o da entrevista 1 XXX XXXX DD/MM/YYYY 2.1 Adi\u00e7\u00e3o dos requisitos elicitados e conclus\u00e3o XXXX XXXXX"},{"location":"base/mapa_mental/","title":"Mapas Mentais","text":""},{"location":"base/mapa_mental/#introducao","title":"Introdu\u00e7\u00e3o","text":"<p> Mapa mental consiste em criar resumos cheios de s\u00edmbolos, cores, setas e frases de efeito com o objetivo de organizar o conte\u00fado e facilitar associa\u00e7\u00f5es entre as informa\u00e7\u00f5es destacadas. Esse material \u00e9 muito indicado para pessoas que t\u00eam facilidade de aprender de forma visual. </p>"},{"location":"base/mapa_mental/#metodologia","title":"Metodologia","text":"<p> Foi levantado um ponto importante sobre o app e, assim, foi produzido o mapa mental. O documento foi produzido utilizando a ferramenta... </p>"},{"location":"base/mapa_mental/#mapa-mental-geral","title":"Mapa mental - Geral.","text":""},{"location":"base/mapa_mental/#versao-10","title":"Vers\u00e3o 1.0","text":""},{"location":"base/mapa_mental/#mapa-mental-1","title":"Mapa mental 1","text":""},{"location":"base/mapa_mental/#mapa-mental-2","title":"Mapa mental 2","text":""},{"location":"base/mapa_mental/#conclusao","title":"Conclus\u00e3o","text":"<p> O mapa mental \u00e9 uma ficha de estudos que ajuda a dar uma vis\u00e3o geral do tema, e ajuda a fixar os pontos mais importantes sobre o app. </p>"},{"location":"base/mapa_mental/#referencias","title":"Refer\u00eancias","text":"<p>Mapa MentalXXX,  Dispon\u00edvel em: https://www.....</p> <p>Ferramentas para Mapas Mentais. Dispon\u00edvel em: https://www....</p> <p>Plataforma para usu\u00e1rios colaborar no desenho... Dispon\u00edvel em: https://...</p>"},{"location":"base/mapa_mental/#versionamento","title":"Versionamento","text":"Data Vers\u00e3o Descri\u00e7\u00e3o Autor(es) dd/mm/yy 1.0 Cria\u00e7\u00e3o do documento xxx xxxx dd/mm/yy 2.0 Adicionado Mapa mental 2 xxxx xxxx"},{"location":"base/metodologia/","title":"Metodologia","text":""},{"location":"base/metodologia/#introducao","title":"Introdu\u00e7\u00e3o","text":"<p> A metodologia pode ser definida como a sistematiza\u00e7\u00e3o de m\u00e9todos e t\u00e9cnicas com o intuito de se alcan\u00e7ar um objetivo. Este documento aborda os m\u00e9todos e t\u00e9cnica de metodologias, processos e pr\u00e1ticas (Scrum, XP, Kanban, RUP) de acordo com o objetivo da equipe e da disciplina. </p>"},{"location":"base/metodologia/#metodologia","title":"Metodologia","text":"<p>A equipe utiliza v\u00e1rios m\u00e9todos e t\u00e9cnicas de diversas metodologias, processos e pr\u00e1ticas, para o desenvolvimento. Com o estudo e  experi\u00eancia da equipe sobre as metodologias \u00e1geis, foi poss\u00edvel identificar aspectos das diversas metodologias, que a equipe utiliza para o desenvolvimento do projeto.</p> <p>Metodologias, processos e pr\u00e1ticas identificados:</p> <ul> <li> <p>RUP/UP:<p> RUP/UP \u00e9 uma metodologia.... </p></p> </li> <li> <p>POO (OOP Oriented Object Programming):<p> POO (OOP) \u00e9 uma... </p></p> </li> <li> <p>RUP (Rational Unified Process):<p> O Rational Unified Process \u00e9 um Processo de Engenharia de Software. Ele fornece....</p> <p>  - [Kanban](https://www...):</p> <p>O sistema kanban \u00e9 uma metodologia \u00e1gil....</p> <p>   ## Metodologias de desenvolvimento:  ### Vers\u00e3o 1.0  ### RUP (Rational Unified Process)  #### Pr\u00e1ticas:  - **Desenvolvimento iterativo**: A abordagem iterativa \u00e9 necess\u00e1ria para....  - **Verifica\u00e7\u00e3o da qualidade de software**: A qualidade deve ser revista com respeito aos requisitos com base...   ### Kanban  <p> O Kanban \u00e9 t\u00e9cnica que prop\u00f5e a utiliza\u00e7\u00e3o de cart\u00f5es em um quadro... </p>  - **Lista de Tarefas**: Cont\u00e9m todas as tarefas do projeto. - **Incremento**: Cont\u00e9m as tarefas a serem executadas durante a Sprint. - **Em andamento**: Cont\u00e9m as tarefas que est\u00e3o em andamento. - **Revis\u00e3o**: Cont\u00e9m as tarefas que precisam ser revisadas para conclus\u00e3o. - **Concluido**: Cont\u00e9m as tarefas que j\u00e1 foram revisadas e conclu\u00eddas.   ## Conclus\u00e3o  <p>  Com o estudo das metodologias.....  </p>  ## Refer\u00eancias  &gt; [1] SCRUM, Disponivel em: https://www....  &gt; [2] Sistema Kanban, Disponivel em: https://www...  &gt; [3] Extreme Programming, Disponivel em: http://www...  &gt; [5] Rational Unified Process, Disponivel em: https://www...  &gt; [6] EXTREME PROGRAMMING, Disponivel em: https://www...   ## Autor(es)  | Data | Vers\u00e3o | Descri\u00e7\u00e3o | Autor(es) | | -- | -- | -- | -- | | 05/mm/xx | 1.0 | Cria\u00e7\u00e3o  | xxx xxx e xxxxx xxxxx | | 06/mm/xx | 1.1 | Adicionado  | xxx xxxx e xxxxx xxxx | | 06/mm/XX | 1.2 | Adicionado  | xxx xxxx e xxxxxx xxxxxx | | 06/mm/xx | 1.3 | Adicionado xxxx | xxx xxxx e xxxx xxxxx | | 06/mm/xx | 1.4 | Adicionadoxxxx | xxxx xxxxx e xxxx xxxxx | | mm/mm/xx | 1.5 | Revis\u00e3o do documento | xxxx xxxxx | | mm/mm/xx | 1.6 | Ajuste no topico Scrum | xxxx xxxx e xxxx xxxx |"},{"location":"base/pesquisa/","title":"Pesquisa","text":""},{"location":"base/pesquisa/#pesquisa_1","title":"Pesquisa","text":""},{"location":"base/pesquisa/#pesquisa_2","title":"Pesquisa","text":"<p>Pesquisa realizada para compreens\u00e3o das principais caracter\u00edsticas do Aplicativo de Streaming.</p> <p>Dorothy followed her through many of the beautiful rooms in her castle.</p>"},{"location":"base/prototipo_alta_fidelidade/","title":"Prot\u00f3tipo","text":""},{"location":"base/prototipo_alta_fidelidade/#introducao","title":"Introdu\u00e7\u00e3o","text":"<p> A constru\u00e7\u00e3o do prot\u00f3tipo de alta fidelidade auxilia a equipe de desenvolvimento a encontrar um n\u00edvel de detalhes abrangentes, extrair funcionalidades, testar usabilidade, e tamb\u00e9m fornece uma base para o gerenciamento do projeto pois com o prot\u00f3tipo \u00e9 poss\u00edvel realizar estimativas de quanto tempo ser\u00e1 necess\u00e1rio desempenhar em cada funcionalidade. </p>"},{"location":"base/prototipo_alta_fidelidade/#metodologia","title":"Metodologia","text":"<p> Iniciamos o projeto atrav\u00e9s dos levantamentos iniciais da equipe, ap\u00f3s discuss\u00f5es a ferramenta Figma foi selecionada para produzir o prot\u00f3tipo de alta fidelidade com aux\u00edlio do Material Design Color Tool. </p>"},{"location":"base/prototipo_alta_fidelidade/#prototipo-de-alta-fidelidade","title":"Prot\u00f3tipo de alta fidelidade","text":""},{"location":"base/prototipo_alta_fidelidade/#versao-10","title":"Vers\u00e3o 1.0","text":""},{"location":"base/prototipo_alta_fidelidade/#tela-login","title":"Tela Login","text":""},{"location":"base/prototipo_alta_fidelidade/#tela-cadastro-1","title":"Tela Cadastro 1","text":""},{"location":"base/prototipo_alta_fidelidade/#tela-cadastro-2","title":"Tela Cadastro 2","text":""},{"location":"base/prototipo_alta_fidelidade/#tela-esqueceu-senha","title":"Tela Esqueceu Senha","text":""},{"location":"base/prototipo_alta_fidelidade/#tela-do-feed","title":"Tela do Feed","text":""},{"location":"base/prototipo_alta_fidelidade/#tela-feed-com-configuracoes","title":"Tela Feed com configura\u00e7\u00f5es","text":""},{"location":"base/prototipo_alta_fidelidade/#tela-perfil","title":"Tela Perfil","text":""},{"location":"base/prototipo_alta_fidelidade/#tela-cadastrar-torneio-1","title":"Tela Cadastrar torneio 1","text":""},{"location":"base/prototipo_alta_fidelidade/#tela-cadastrar-torneio-2","title":"Tela Cadastrar torneio 2","text":""},{"location":"base/prototipo_alta_fidelidade/#tela-cadastrar-torneio-3","title":"Tela Cadastrar torneio 3","text":""},{"location":"base/prototipo_alta_fidelidade/#tela-cadastrar-torneio-4","title":"Tela Cadastrar torneio 4","text":""},{"location":"base/prototipo_alta_fidelidade/#tela-com-meus-torneios","title":"Tela com meus torneios","text":""},{"location":"base/prototipo_alta_fidelidade/#tela-de-inscricao-em-torneio","title":"Tela de inscri\u00e7\u00e3o em torneio","text":"<p> Na primeira vers\u00e3o do prot\u00f3tipo utilizamos a ferramenta Material Design Color Tool  para auxiliar na cria\u00e7\u00e3o da paleta de cores do aplicativo, definimos as cores base do aplicativo mas as cores definidas para as telas 12 e 13 ainda n\u00e3o foram decididas. </p>"},{"location":"base/prototipo_alta_fidelidade/#versao-20","title":"Vers\u00e3o 2.0","text":""},{"location":"base/prototipo_alta_fidelidade/#tela-login_1","title":"Tela Login","text":""},{"location":"base/prototipo_alta_fidelidade/#tela-cadastro","title":"Tela Cadastro","text":""},{"location":"base/prototipo_alta_fidelidade/#tela-esqueceu-senha_1","title":"Tela Esqueceu Senha","text":""},{"location":"base/prototipo_alta_fidelidade/#tela-perfil_1","title":"Tela Perfil","text":""},{"location":"base/prototipo_alta_fidelidade/#tela-do-feed_1","title":"Tela do Feed","text":""},{"location":"base/prototipo_alta_fidelidade/#tela-cadastrar-em-um-torneio","title":"Tela Cadastrar em um torneio","text":""},{"location":"base/prototipo_alta_fidelidade/#tela-cadastrar-torneio","title":"Tela Cadastrar torneio","text":""},{"location":"base/prototipo_alta_fidelidade/#tela-cadastrar-torneio-2_1","title":"Tela Cadastrar torneio 2","text":""},{"location":"base/prototipo_alta_fidelidade/#tela-dos-meus-torneios","title":"Tela dos meus torneios","text":""},{"location":"base/prototipo_alta_fidelidade/#tela-das-chaves-do-torneio","title":"Tela das chaves do torneio","text":""},{"location":"base/prototipo_alta_fidelidade/#tela-das-estatiscicas","title":"Tela das estat\u00edscicas","text":""},{"location":"base/prototipo_alta_fidelidade/#tela-de-adicionar-resultado-das-partidas","title":"Tela de adicionar resultado das partidas","text":"<p>link para o Prot\u00f3tipo</p>"},{"location":"base/prototipo_alta_fidelidade/#conclusao","title":"Conclus\u00e3o","text":"<p> A partir da elabora\u00e7\u00e3o do prot\u00f3tipo foi poss\u00edvel ter uma no\u00e7\u00e3o inicial da interface do usu\u00e1rio, definindo fluxo, paleta de cores, bot\u00f5es, app bars e diversas outras funcionalidades </p>"},{"location":"base/prototipo_alta_fidelidade/#referencias","title":"Refer\u00eancias","text":"<p>Material Design Color Tool. Dispon\u00edvel em:  https://material.io/resources/color/#!/?view.left=0&amp;view.right=0</p> <p>PMI. Um guia do conhecimento em gerenciamento de projetos. Guia PMBOK\u00ae 5a. ed. EUA: Project Management Institute, 2013.</p> <p>Ferramenta Figma. Dispon\u00edvel em https://www.figma.com</p>"},{"location":"base/prototipo_alta_fidelidade/#autores","title":"Autor(es)","text":"Data Vers\u00e3o Descri\u00e7\u00e3o Autor(es) 07/09/20 1.0 Cria\u00e7\u00e3o do documento Lucas Alexandre e Matheus Estanislau 07/09/20 1.1 Adicionado as imagens do prot\u00f3tipo Lucas Alexandre e Matheus Estanislau 07/09/20 1.2 Adicionado conclus\u00e3o e refer\u00eancias Lucas Alexandre e Matheus Estanislau 26/10/20 2.0 Adicionada a vers\u00e3o 2.0 do prot\u00f3tipo Jo\u00e3o Pedro, Lucas Alexandre, Matheus Estanislau, Moacir Mascarenha e Renan Cristyan"},{"location":"iteracao/interacao1/","title":"Itera\u00e7\u00e3o 1 (15/08/24 \u00e0 28/08/2024)","text":""},{"location":"iteracao/interacao1/#planejamento-de-iteracao","title":"Planejamento de Itera\u00e7\u00e3o","text":""},{"location":"iteracao/interacao1/#presentes-na-reuniao-xxxxx","title":"Presentes na reuni\u00e3o: XXXXX","text":""},{"location":"iteracao/interacao1/#lista-de-tarefas-da-iteracao","title":"Lista de Tarefas da Itera\u00e7\u00e3o","text":"Tarefa Responsabilidade Decidir o nome o projeto. Todos Criar o reposit\u00f3rio nos padr\u00f5es (Organizar wiki). Matheus Criar issues no GitHub / ZenHub Renan Configura\u00e7\u00e3o do grupo do Telegram(configurar bot). Moacir Estudar e escolher as metodologias. Todos Documento de vis\u00e3o XXX e XXXXX Elaborar5w2H XXX e XXXXX Mapas Mentais XXX e XXXXX Brainstorming Todos Entrevistas XXX e XXXXX Prototipa\u00e7\u00e3o. XXX e XXXXX"},{"location":"iteracao/interacao1/#sprint-retrospectivereview-meeting","title":"Sprint Retrospective/Review Meeting","text":""},{"location":"iteracao/interacao1/#presentes-na-reuniao-xxxx","title":"Presentes na reuni\u00e3o: XXXX","text":""},{"location":"iteracao/interacao1/#dividas-da-iteracao","title":"Dividas da Itera\u00e7\u00e3o","text":""},{"location":"iteracao/interacao1/#riscos-encontrados","title":"Riscos Encontrados","text":"<ul> <li>Nenhum: Plano de gerenciamento de riscos n\u00e3o implementado.</li> </ul>"},{"location":"iteracao/interacao1/#pontos-positivos","title":"Pontos Positivos","text":""},{"location":"iteracao/interacao1/#pontos-negativos","title":"Pontos Negativos","text":""},{"location":"iteracao/interacao1/#o-que-podemos-melhorar","title":"O que podemos melhorar?","text":"<ul> <li>Ter mais foco na reuni\u00f5es para evitar o desperd\u00edcio de tempo.</li> <li>A equipe deve ter mais autonomia em rela\u00e7\u00e3o \u00e0 falta de membros.</li> <li>Podemos utilizar algo ferramenta de timebox para maior efetividade nas reuni\u00f5es, sugest\u00e3o: https://timebox.cedrotech.com/</li> </ul>"},{"location":"iteracao/interacao1/#ferramentas-utilizadas","title":"Ferramentas utilizadas","text":"<ul> <li>Reuni\u00e3o: Hangouts</li> <li>Colheita dos pontos: Mentimeter</li> </ul>"},{"location":"iteracao/interacao2/","title":"Itera\u00e7\u00e3o 2 (29/09/24 \u00e0 11/09/2024)","text":""},{"location":"iteracao/interacao2/#planejamento-de-iteracao","title":"Planejamento de Itera\u00e7\u00e3o","text":""},{"location":"iteracao/interacao2/#presentes-na-reuniao-xxxxx","title":"Presentes na reuni\u00e3o: XXXXX","text":""},{"location":"iteracao/interacao2/#lista-de-tarefas-da-iteracao","title":"Lista de Tarefas da Itera\u00e7\u00e3o","text":"Tarefa Responsabilidade Decidir o nome o projeto. Todos Criar o reposit\u00f3rio nos padr\u00f5es (Organizar wiki). Matheus Criar issues no GitHub / ZenHub Renan Configura\u00e7\u00e3o do grupo do Telegram(configurar bot). Moacir Estudar e escolher as metodologias. Todos Documento de vis\u00e3o XXX e XXXXX Elaborar5w2H XXX e XXXXX Mapas Mentais XXX e XXXXX Brainstorming Todos Entrevistas XXX e XXXXX Prototipa\u00e7\u00e3o. XXX e XXXXX"},{"location":"iteracao/interacao2/#sprint-retrospectivereview-meeting","title":"Sprint Retrospective/Review Meeting","text":""},{"location":"iteracao/interacao2/#presentes-na-reuniao-xxxx","title":"Presentes na reuni\u00e3o: XXXX","text":""},{"location":"iteracao/interacao2/#dividas-da-iteracao","title":"Dividas da Itera\u00e7\u00e3o","text":""},{"location":"iteracao/interacao2/#riscos-encontrados","title":"Riscos Encontrados","text":"<ul> <li>Nenhum: Plano de gerenciamento de riscos n\u00e3o implementado.</li> </ul>"},{"location":"iteracao/interacao2/#pontos-positivos","title":"Pontos Positivos","text":""},{"location":"iteracao/interacao2/#pontos-negativos","title":"Pontos Negativos","text":""},{"location":"iteracao/interacao2/#o-que-podemos-melhorar","title":"O que podemos melhorar?","text":"<ul> <li>Ter mais foco na reuni\u00f5es para evitar o desperd\u00edcio de tempo.</li> <li>A equipe deve ter mais autonomia em rela\u00e7\u00e3o \u00e0 falta de membros.</li> <li>Podemos utilizar algo ferramenta de timebox para maior efetividade nas reuni\u00f5es, sugest\u00e3o: https://timebox.cedrotech.com/</li> </ul>"},{"location":"iteracao/interacao2/#ferramentas-utilizadas","title":"Ferramentas utilizadas","text":"<ul> <li>Reuni\u00e3o: Hangouts</li> <li>Colheita dos pontos: Mentimeter</li> </ul>"},{"location":"iteracao/interacao3/","title":"Itera\u00e7\u00e3o 3 (12/09/24 \u00e0 25/09/2024)","text":""},{"location":"iteracao/interacao3/#planejamento-de-iteracao","title":"Planejamento de Itera\u00e7\u00e3o","text":""},{"location":"iteracao/interacao3/#presentes-na-reuniao-xxxxx","title":"Presentes na reuni\u00e3o: XXXXX","text":""},{"location":"iteracao/interacao3/#lista-de-tarefas-da-iteracao","title":"Lista de Tarefas da Itera\u00e7\u00e3o","text":"Tarefa Responsabilidade Decidir o nome o projeto. Todos Criar o reposit\u00f3rio nos padr\u00f5es (Organizar wiki). Matheus Criar issues no GitHub / ZenHub Renan Configura\u00e7\u00e3o do grupo do Telegram(configurar bot). Moacir Estudar e escolher as metodologias. Todos Documento de vis\u00e3o XXX e XXXXX Elaborar5w2H XXX e XXXXX Mapas Mentais XXX e XXXXX Brainstorming Todos Entrevistas XXX e XXXXX Prototipa\u00e7\u00e3o. XXX e XXXXX"},{"location":"iteracao/interacao3/#sprint-retrospectivereview-meeting","title":"Sprint Retrospective/Review Meeting","text":""},{"location":"iteracao/interacao3/#presentes-na-reuniao-xxxx","title":"Presentes na reuni\u00e3o: XXXX","text":""},{"location":"iteracao/interacao3/#dividas-da-iteracao","title":"Dividas da Itera\u00e7\u00e3o","text":""},{"location":"iteracao/interacao3/#riscos-encontrados","title":"Riscos Encontrados","text":"<ul> <li>Nenhum: Plano de gerenciamento de riscos n\u00e3o implementado.</li> </ul>"},{"location":"iteracao/interacao3/#pontos-positivos","title":"Pontos Positivos","text":""},{"location":"iteracao/interacao3/#pontos-negativos","title":"Pontos Negativos","text":""},{"location":"iteracao/interacao3/#o-que-podemos-melhorar","title":"O que podemos melhorar?","text":"<ul> <li>Ter mais foco na reuni\u00f5es para evitar o desperd\u00edcio de tempo.</li> <li>A equipe deve ter mais autonomia em rela\u00e7\u00e3o \u00e0 falta de membros.</li> <li>Podemos utilizar algo ferramenta de timebox para maior efetividade nas reuni\u00f5es, sugest\u00e3o: https://timebox.cedrotech.com/</li> </ul>"},{"location":"iteracao/interacao3/#ferramentas-utilizadas","title":"Ferramentas utilizadas","text":"<ul> <li>Reuni\u00e3o: Hangouts</li> <li>Colheita dos pontos: Mentimeter</li> </ul>"},{"location":"iteracao/interacao4/","title":"Itera\u00e7\u00e3o 4 (26/09/24 \u00e0 09/10/2024)","text":""},{"location":"iteracao/interacao4/#planejamento-de-iteracao","title":"Planejamento de Itera\u00e7\u00e3o","text":""},{"location":"iteracao/interacao4/#presentes-na-reuniao-xxxxx","title":"Presentes na reuni\u00e3o: XXXXX","text":""},{"location":"iteracao/interacao4/#lista-de-tarefas-da-iteracao","title":"Lista de Tarefas da Itera\u00e7\u00e3o","text":"Tarefa Responsabilidade Decidir o nome o projeto. Todos Criar o reposit\u00f3rio nos padr\u00f5es (Organizar wiki). Matheus Criar issues no GitHub / ZenHub Renan Configura\u00e7\u00e3o do grupo do Telegram(configurar bot). Moacir Estudar e escolher as metodologias. Todos Documento de vis\u00e3o XXX e XXXXX Elaborar5w2H XXX e XXXXX Mapas Mentais XXX e XXXXX Brainstorming Todos Entrevistas XXX e XXXXX Prototipa\u00e7\u00e3o. XXX e XXXXX"},{"location":"iteracao/interacao4/#sprint-retrospectivereview-meeting","title":"Sprint Retrospective/Review Meeting","text":""},{"location":"iteracao/interacao4/#presentes-na-reuniao-xxxx","title":"Presentes na reuni\u00e3o: XXXX","text":""},{"location":"iteracao/interacao4/#dividas-da-iteracao","title":"Dividas da Itera\u00e7\u00e3o","text":""},{"location":"iteracao/interacao4/#riscos-encontrados","title":"Riscos Encontrados","text":"<ul> <li>Nenhum: Plano de gerenciamento de riscos n\u00e3o implementado.</li> </ul>"},{"location":"iteracao/interacao4/#pontos-positivos","title":"Pontos Positivos","text":""},{"location":"iteracao/interacao4/#pontos-negativos","title":"Pontos Negativos","text":""},{"location":"iteracao/interacao4/#o-que-podemos-melhorar","title":"O que podemos melhorar?","text":"<ul> <li>Ter mais foco na reuni\u00f5es para evitar o desperd\u00edcio de tempo.</li> <li>A equipe deve ter mais autonomia em rela\u00e7\u00e3o \u00e0 falta de membros.</li> <li>Podemos utilizar algo ferramenta de timebox para maior efetividade nas reuni\u00f5es, sugest\u00e3o: https://timebox.cedrotech.com/</li> </ul>"},{"location":"iteracao/interacao4/#ferramentas-utilizadas","title":"Ferramentas utilizadas","text":"<ul> <li>Reuni\u00e3o: Hangouts</li> <li>Colheita dos pontos: Mentimeter</li> </ul>"},{"location":"iteracao/interacao5/","title":"Itera\u00e7\u00e3o 5 (10/10/24 \u00e0 23/10/2024)","text":""},{"location":"iteracao/interacao5/#planejamento-de-iteracao","title":"Planejamento de Itera\u00e7\u00e3o","text":""},{"location":"iteracao/interacao5/#presentes-na-reuniao-xxxxx","title":"Presentes na reuni\u00e3o: XXXXX","text":""},{"location":"iteracao/interacao5/#lista-de-tarefas-da-iteracao","title":"Lista de Tarefas da Itera\u00e7\u00e3o","text":"Tarefa Responsabilidade Decidir o nome o projeto. Todos Criar o reposit\u00f3rio nos padr\u00f5es (Organizar wiki). Matheus Criar issues no GitHub / ZenHub Renan Configura\u00e7\u00e3o do grupo do Telegram(configurar bot). Moacir Estudar e escolher as metodologias. Todos Documento de vis\u00e3o XXX e XXXXX Elaborar5w2H XXX e XXXXX Mapas Mentais XXX e XXXXX Brainstorming Todos Entrevistas XXX e XXXXX Prototipa\u00e7\u00e3o. XXX e XXXXX"},{"location":"iteracao/interacao5/#sprint-retrospectivereview-meeting","title":"Sprint Retrospective/Review Meeting","text":""},{"location":"iteracao/interacao5/#presentes-na-reuniao-xxxx","title":"Presentes na reuni\u00e3o: XXXX","text":""},{"location":"iteracao/interacao5/#dividas-da-iteracao","title":"Dividas da Itera\u00e7\u00e3o","text":""},{"location":"iteracao/interacao5/#riscos-encontrados","title":"Riscos Encontrados","text":"<ul> <li>Nenhum: Plano de gerenciamento de riscos n\u00e3o implementado.</li> </ul>"},{"location":"iteracao/interacao5/#pontos-positivos","title":"Pontos Positivos","text":""},{"location":"iteracao/interacao5/#pontos-negativos","title":"Pontos Negativos","text":""},{"location":"iteracao/interacao5/#o-que-podemos-melhorar","title":"O que podemos melhorar?","text":"<ul> <li>Ter mais foco na reuni\u00f5es para evitar o desperd\u00edcio de tempo.</li> <li>A equipe deve ter mais autonomia em rela\u00e7\u00e3o \u00e0 falta de membros.</li> <li>Podemos utilizar algo ferramenta de timebox para maior efetividade nas reuni\u00f5es, sugest\u00e3o: https://timebox.cedrotech.com/</li> </ul>"},{"location":"iteracao/interacao5/#ferramentas-utilizadas","title":"Ferramentas utilizadas","text":"<ul> <li>Reuni\u00e3o: Hangouts</li> <li>Colheita dos pontos: Mentimeter</li> </ul>"},{"location":"iteracao/interacao6/","title":"Itera\u00e7\u00e3o 6 (24/10/24 \u00e0 06/11/2024)","text":""},{"location":"iteracao/interacao6/#planejamento-de-iteracao","title":"Planejamento de Itera\u00e7\u00e3o","text":""},{"location":"iteracao/interacao6/#presentes-na-reuniao-xxxxx","title":"Presentes na reuni\u00e3o: XXXXX","text":""},{"location":"iteracao/interacao6/#lista-de-tarefas-da-iteracao","title":"Lista de Tarefas da Itera\u00e7\u00e3o","text":"Tarefa Responsabilidade Decidir o nome o projeto. Todos Criar o reposit\u00f3rio nos padr\u00f5es (Organizar wiki). Matheus Criar issues no GitHub / ZenHub Renan Configura\u00e7\u00e3o do grupo do Telegram(configurar bot). Moacir Estudar e escolher as metodologias. Todos Documento de vis\u00e3o XXX e XXXXX Elaborar5w2H XXX e XXXXX Mapas Mentais XXX e XXXXX Brainstorming Todos Entrevistas XXX e XXXXX Prototipa\u00e7\u00e3o. XXX e XXXXX"},{"location":"iteracao/interacao6/#sprint-retrospectivereview-meeting","title":"Sprint Retrospective/Review Meeting","text":""},{"location":"iteracao/interacao6/#presentes-na-reuniao-xxxx","title":"Presentes na reuni\u00e3o: XXXX","text":""},{"location":"iteracao/interacao6/#dividas-da-iteracao","title":"Dividas da Itera\u00e7\u00e3o","text":""},{"location":"iteracao/interacao6/#riscos-encontrados","title":"Riscos Encontrados","text":"<ul> <li>Nenhum: Plano de gerenciamento de riscos n\u00e3o implementado.</li> </ul>"},{"location":"iteracao/interacao6/#pontos-positivos","title":"Pontos Positivos","text":""},{"location":"iteracao/interacao6/#pontos-negativos","title":"Pontos Negativos","text":""},{"location":"iteracao/interacao6/#o-que-podemos-melhorar","title":"O que podemos melhorar?","text":"<ul> <li>Ter mais foco na reuni\u00f5es para evitar o desperd\u00edcio de tempo.</li> <li>A equipe deve ter mais autonomia em rela\u00e7\u00e3o \u00e0 falta de membros.</li> <li>Podemos utilizar algo ferramenta de timebox para maior efetividade nas reuni\u00f5es, sugest\u00e3o: https://timebox.cedrotech.com/</li> </ul>"},{"location":"iteracao/interacao6/#ferramentas-utilizadas","title":"Ferramentas utilizadas","text":"<ul> <li>Reuni\u00e3o: Hangouts</li> <li>Colheita dos pontos: Mentimeter</li> </ul>"},{"location":"iteracao/interacao7/","title":"Itera\u00e7\u00e3o 7 (07/11/24 \u00e0 20/10/2024)","text":""},{"location":"iteracao/interacao7/#planejamento-de-iteracao","title":"Planejamento de Itera\u00e7\u00e3o","text":""},{"location":"iteracao/interacao7/#presentes-na-reuniao-xxxxx","title":"Presentes na reuni\u00e3o: XXXXX","text":""},{"location":"iteracao/interacao7/#lista-de-tarefas-da-iteracao","title":"Lista de Tarefas da Itera\u00e7\u00e3o","text":"Tarefa Responsabilidade Decidir o nome o projeto. Todos Criar o reposit\u00f3rio nos padr\u00f5es (Organizar wiki). Matheus Criar issues no GitHub / ZenHub Renan Configura\u00e7\u00e3o do grupo do Telegram(configurar bot). Moacir Estudar e escolher as metodologias. Todos Documento de vis\u00e3o XXX e XXXXX Elaborar5w2H XXX e XXXXX Mapas Mentais XXX e XXXXX Brainstorming Todos Entrevistas XXX e XXXXX Prototipa\u00e7\u00e3o. XXX e XXXXX"},{"location":"iteracao/interacao7/#sprint-retrospectivereview-meeting","title":"Sprint Retrospective/Review Meeting","text":""},{"location":"iteracao/interacao7/#presentes-na-reuniao-xxxx","title":"Presentes na reuni\u00e3o: XXXX","text":""},{"location":"iteracao/interacao7/#dividas-da-iteracao","title":"Dividas da Itera\u00e7\u00e3o","text":""},{"location":"iteracao/interacao7/#riscos-encontrados","title":"Riscos Encontrados","text":"<ul> <li>Nenhum: Plano de gerenciamento de riscos n\u00e3o implementado.</li> </ul>"},{"location":"iteracao/interacao7/#pontos-positivos","title":"Pontos Positivos","text":""},{"location":"iteracao/interacao7/#pontos-negativos","title":"Pontos Negativos","text":""},{"location":"iteracao/interacao7/#o-que-podemos-melhorar","title":"O que podemos melhorar?","text":"<ul> <li>Ter mais foco na reuni\u00f5es para evitar o desperd\u00edcio de tempo.</li> <li>A equipe deve ter mais autonomia em rela\u00e7\u00e3o \u00e0 falta de membros.</li> <li>Podemos utilizar algo ferramenta de timebox para maior efetividade nas reuni\u00f5es, sugest\u00e3o: https://timebox.cedrotech.com/</li> </ul>"},{"location":"iteracao/interacao7/#ferramentas-utilizadas","title":"Ferramentas utilizadas","text":"<ul> <li>Reuni\u00e3o: Hangouts</li> <li>Colheita dos pontos: Mentimeter</li> </ul>"},{"location":"modelagem/","title":"Modelagem","text":""},{"location":"modelagem/das/","title":"Documento de Arquitetura de Software (DAS)","text":""},{"location":"modelagem/das/#nome-do-projeto","title":"\"Nome do Projeto\"","text":""},{"location":"modelagem/das/#introducao","title":"Introdu\u00e7\u00e3o","text":""},{"location":"modelagem/das/#proposta","title":"Proposta","text":"<p> Este documento apresenta uma vis\u00e3o geral da arquitetura do sistema, utilizando diferentes vis\u00f5es arquiteturais para destacar diferentes aspectos do sistema. \u00c9 utilizado para capturar as decis\u00f5es arquiteturais significativas que fizeram parte do sistema. </p>"},{"location":"modelagem/das/#escopo","title":"Escopo","text":"<p> A aplica\u00e7\u00e3o \"XXXX\" tem o objetivo fornecer... </p>"},{"location":"modelagem/das/#definicoes-acronimos-e-abreviacoes","title":"Defini\u00e7\u00f5es, Acr\u00f4nimos e Abrevia\u00e7\u00f5es","text":"<ul> <li>MVC -</li> <li>MVT -</li> <li>SIGLA PARA O APP - Nome do Aplicativo</li> </ul>"},{"location":"modelagem/das/#visao-geral","title":"Vis\u00e3o Geral","text":"<p> O Documento de Arquitetura de Software (DAS) trata-se de uma vis\u00e3o geral de toda a arquitetura do sistema, observando diferentes aspectos do mesmo. Neste documento ser\u00e3o abordadas as seguintes vis\u00f5es da aplica\u00e7\u00e3o TCM: </p> <ul> <li>Caso de Uso;</li> <li>L\u00f3gica;</li> <li>Implanta\u00e7\u00e3o;</li> <li>Implementa\u00e7\u00e3o;</li> <li>Dados;</li> </ul>"},{"location":"modelagem/das/#representacao-arquitetural","title":"Representa\u00e7\u00e3o Arquitetural","text":""},{"location":"modelagem/das/#cliente-servidor","title":"Cliente-Servidor","text":"<p> Cliente-Servidor \u00e9 um modelo de arquitetura... </p> <p>Cliente (Frontend):</p> <ul> <li>View: Consiste.....</li> </ul> <p>Servidor (Backend):</p> <ul> <li>Controller: faz a conex\u00e3o entre as camadas...</li> <li>Service: Respons\u00e1vel pela l\u00f3gica...</li> <li>Model: Respons\u00e1vel pela persist\u00eancia...</li> </ul>"},{"location":"modelagem/das/#objetivos-de-arquitetura-e-restricoes","title":"Objetivos de Arquitetura e Restri\u00e7\u00f5es","text":""},{"location":"modelagem/das/#objetivos","title":"Objetivos","text":"<p> Seguran\u00e7a:    - Persist\u00eancia:    -  Privacidade:    - Middlewares: Foi usado middlewares... Desempenho:    Requisi\u00e7\u00f5es... Reusabilidade:    Componentes no Frontend... </p>"},{"location":"modelagem/das/#restricoes","title":"Restri\u00e7\u00f5es","text":"<p> Tamanho da tela:...  Portabilidade:...  | IE | Edge  | Firefox | Chrome | Safari | Googlebot | | -- | ----- | ------- | ------ | ------ | --------- | | 11 | &gt;= 14 | &gt;= 52   | &gt;= 49  | &gt;= 10  | Sim       |  Servi\u00e7os: Os servi\u00e7os oferecidos....  Acesso a internet: A aplica\u00e7\u00e3o est\u00e1 limitada apenas a conex\u00e3o com internet  </p>"},{"location":"modelagem/das/#ferramentas-utilizadas","title":"Ferramentas Utilizadas","text":"<ul> <li>XXX: Ambiente de execu\u00e7\u00e3o...</li> <li>XXXX: Linguagem de programa\u00e7\u00e3o...   Typescript: XXXX</li> <li>XXXX: XXXX</li> <li>XXX: XXXX</li> <li>XXXX: XXXX</li> <li>XXXX: XXXX</li> <li>XXXX: XXXX</li> <li>XXXXX: XXXX.</li> </ul>"},{"location":"modelagem/das/#visao-de-caso-de-uso","title":"Vis\u00e3o de Caso de Uso","text":"<p> O primeiro caso de uso descreve a a\u00e7\u00e3o... </p> <p></p> <p></p>"},{"location":"modelagem/das/#visao-logica","title":"Vis\u00e3o L\u00f3gica","text":""},{"location":"modelagem/das/#visao-de-implantacao","title":"Vis\u00e3o de Implanta\u00e7\u00e3o","text":""},{"location":"modelagem/das/#visao-de-implementacao","title":"Vis\u00e3o de Implementa\u00e7\u00e3o","text":""},{"location":"modelagem/das/#visao-geral_1","title":"Vis\u00e3o Geral","text":""},{"location":"modelagem/das/#visao-de-dados","title":"Vis\u00e3o de Dados","text":""},{"location":"modelagem/das/#modelo-entidade-relacionamento-mer","title":"Modelo Entidade Relacionamento (MER)","text":""},{"location":"modelagem/das/#entidades-e-relacionamentos","title":"Entidades e Relacionamentos:","text":""},{"location":"modelagem/das/#diagrama-entidade-relacionamento-der","title":"Diagrama Entidade Relacionamento (DER)","text":""},{"location":"modelagem/das/#tamanho-e-desempenho","title":"Tamanho e Desempenho","text":""},{"location":"modelagem/das/#qualidade","title":"Qualidade","text":""},{"location":"modelagem/das/#referencias-bibliograficas","title":"Refer\u00eancias Bibliogr\u00e1ficas","text":""},{"location":"modelagem/das/#historico-de-versao","title":"Hist\u00f3rico de Vers\u00e3o","text":"Data Vers\u00e3o Descri\u00e7\u00e3o Autor(es) 08/11/2020 1.0 Criada estrutura b\u00e1sica do documento xxx xxx, xxx xx, xxx xx, xxx xxx e xxx xxxx 15/11/2020 1.1 Representa\u00e7\u00e3o arquitetural e objetivos e restri\u00e7\u00f5es arquiteturais. Autores 19/11/2020 1.2 Adi\u00e7\u00e3o dos diagramas, vis\u00f5es, tamanho e desempenho e qualidade Autores 20/11/2020 1.3 Adi\u00e7\u00e3o da descri\u00e7\u00e3o de MER e DER Autores 20/11/2020 1.4 Adi\u00e7\u00e3o do t\u00f3pico de qualidade Autores 20/11/2020 1.5 Revis\u00e3o Autores"},{"location":"modelagem/diagrama_de_classes/","title":"Diagrama de Classes","text":""},{"location":"modelagem/diagrama_de_classes/#introducao","title":"Introdu\u00e7\u00e3o","text":"<p> O diagrama de classes UML \u00e9 um diagrama que mostra a estrutura do sistema desenhado no n\u00edvel de classes e interfaces, ilustra as funcionalidades, depend\u00eancias e relacionamentos de cada elemento. Pode ser vista como uma representa\u00e7\u00e3o visual da arquitetura de um sistema.  </p>"},{"location":"modelagem/diagrama_de_classes/#metodologia","title":"Metodologia","text":"<p> A equipe se reuniu por .... e realizou um brainstorm onde foram dicutidos os t\u00f3picos chaves e a arquitetura geral dos sistemas, e assim criamos...  Para a cria\u00e7\u00e3o da primeira vers\u00e3o do diagrama de classes, a equipe utilizou o programa... Al\u00e9m disso, foi utilizado... para videoconfer\u00eancia e Visual Studio Code / Live Share para elabora\u00e7\u00e3o da documenta\u00e7\u00e3o.  ## Diagrama de Classes  ### Vers\u00e3o 1.0  ![Diagrama de Classes](../assets/diagrama_de_classes/diagrama_de_classes.png)  ### Vers\u00e3o 1.1  ![Diagrama de Classes](../assets/diagrama_de_classes/diagrama_de_classes_1.1.png)  ### Vers\u00e3o 2.0  ![Diagrama de Classes](../assets/diagrama_de_classes/diagrama_de_classes_2.0.png)  #### Rastreabilidade de Requisitos  | ID                     | Descri\u00e7\u00e3o | | ---------------------- | ----------- | | US17, US18, US19, US20 | Torneio     | | US01, US06, US07, US08 | Usu\u00e1rio    | | US45                   | Rodada      | | US35                   | Partida     |  ## Conclus\u00e3o  <p> Atrav\u00e9s do diagrama de classes, foi poss\u00edvel representar a estrutura do sistema a n\u00edvel de classes e auxiliar na modelagem da arquitetura geral, al\u00e9m do banco de dados. Ao longo do desenvolvimento da disciplina, iremos adaptar e evoluir o diagrama e sua documenta\u00e7\u00e3o para refletir no estado atual do projeto. </p>  ## Refer\u00eancias  &gt; UML Class and Object Diagrams Overview. Dispon\u00edvel em https://www.uml-diagrams.org/class-diagrams-overview.html. Acesso em 21/09/20  &gt; UML Class Diagram Tutorial. Dispon\u00edvel em https://www.youtube.com/watch?v=UI6lqHOVHic. Acesso em 21/09/20  &gt; UML Class Relationship Diagrams. Dispon\u00edvel em https://www.cs.odu.edu/~zeil/cs330/latest/Public/classDiagrams/index.html#other-class-diagram-elements Acesso em 19/10/20  ## Autor(es)  | Data     | Vers\u00e3o | Descri\u00e7\u00e3o                        | Autor(es)                                                                            | | -------- | ------- | ---------------------------------- | ------------------------------------------------------------------------------------ | | 21/09/20 | 1.0     | Cria\u00e7\u00e3o do documento             | Jo\u00e3o Pedro, Lucas Alexandre, Matheus Estanislau, Moacir Mascarenha e Renan Cristyan | | 28/09/20 | 1.1     | Ajustes no documento               | Jo\u00e3o Pedro e Renan Cristyan                                                         | | 28/09/20 | 1.2     | Adicionado diagrama de classes 1.1 | Jo\u00e3o Pedro e Renan Cristyan                                                         | | 26/10/20 | 2.0     | Adicionado diagrama de classes 2.0 | Jo\u00e3o Pedro, Lucas Alexandre, Matheus Estanislau, Moacir Mascarenha e Renan Cristyan |"},{"location":"modelagem/Casos%20de%20Uso/Exemplo%20Biblioteca%20Digital/","title":"Exemplo Biblioteca Digital","text":""},{"location":"modelagem/Casos%20de%20Uso/Exemplo%20Biblioteca%20Digital/#problema-de-modelagem","title":"Problema de Modelagem","text":"<p>Voc\u00ea foi contratado para desenvolver um sistema para gerenciar uma biblioteca de livros digitais. O sistema permitir\u00e1 que os usu\u00e1rios fa\u00e7am login, procurem livros, reservem livros, e baixem c\u00f3pias para leitura offline. A biblioteca tamb\u00e9m oferece assinatura premium, onde os usu\u00e1rios podem acessar livros exclusivos e ganhar vantagens especiais, como reservas antecipadas e downloads ilimitados.</p>"},{"location":"modelagem/Casos%20de%20Uso/Exemplo%20Biblioteca%20Digital/#caso-de-uso","title":"Caso de Uso","text":""},{"location":"modelagem/Casos%20de%20Uso/Exemplo%20Biblioteca%20Digital/#titulo-usuario-reserva-um-livro","title":"T\u00edtulo: Usu\u00e1rio Reserva um Livro","text":"<ol> <li>Ator Principal: Usu\u00e1rio autenticado</li> <li>Atores Secund\u00e1rios: Sistema de pagamento (para verifica\u00e7\u00e3o de status de assinatura)</li> <li>Pr\u00e9-condi\u00e7\u00f5es:</li> <li>O usu\u00e1rio deve estar autenticado.</li> <li>O livro desejado deve estar dispon\u00edvel para reserva.</li> <li>Fluxo Principal:</li> <li>O usu\u00e1rio navega na biblioteca e seleciona um livro dispon\u00edvel.</li> <li>O sistema verifica se o usu\u00e1rio \u00e9 um assinante premium.<ul> <li>Se sim, permite a reserva imediata.</li> <li>Se n\u00e3o, verifica se o n\u00famero de reservas permitidas n\u00e3o foi excedido.</li> </ul> </li> <li>O sistema realiza a reserva do livro e informa o prazo m\u00e1ximo para retirada.</li> <li>O sistema atualiza o status do livro como \"Reservado\" e o associa ao usu\u00e1rio.</li> <li>Fluxos Alternativos:</li> <li>Se o livro n\u00e3o estiver dispon\u00edvel para reserva, o sistema informa ao usu\u00e1rio que o livro est\u00e1 indispon\u00edvel.</li> <li>Se o usu\u00e1rio excedeu o limite de reservas, o sistema informa que n\u00e3o \u00e9 poss\u00edvel realizar mais reservas.</li> <li>P\u00f3s-condi\u00e7\u00f5es:</li> <li>O livro \u00e9 reservado com sucesso e o status \u00e9 atualizado.</li> <li>O usu\u00e1rio \u00e9 notificado do prazo para retirar o livro.</li> </ol>"},{"location":"modelagem/Casos%20de%20Uso/Exemplo%20Biblioteca%20Digital/#pontos-para-modelagem","title":"Pontos para Modelagem","text":"<p>A partir deste caso de uso, voc\u00ea pode definir os seguintes objetos e suas intera\u00e7\u00f5es:</p> <ol> <li>Usu\u00e1rio:</li> <li>Atributos: nome, email, status de assinatura, n\u00famero de reservas.</li> <li> <p>M\u00e9todos: autenticar(), reservarLivro(), cancelarReserva().</p> </li> <li> <p>Livro:</p> </li> <li>Atributos: t\u00edtulo, autor, status (dispon\u00edvel, reservado, indispon\u00edvel), prazo de retirada.</li> <li> <p>M\u00e9todos: verificarDisponibilidade(), reservar(), liberarReserva().</p> </li> <li> <p>Biblioteca:</p> </li> <li>Atributos: cat\u00e1logo de livros, usu\u00e1rios cadastrados.</li> <li> <p>M\u00e9todos: buscarLivro(), registrarReserva(), verificarLimiteReservas().</p> </li> <li> <p>Assinatura:</p> </li> <li>Atributos: tipo (premium, b\u00e1sico), limite de reservas.</li> <li>M\u00e9todos: verificarBenef\u00edcios().</li> </ol> <p>Esse cen\u00e1rio pode ser expandido com novos casos de uso, como o gerenciamento de downloads ou renova\u00e7\u00e3o de assinaturas.</p>"},{"location":"modelagem/Casos%20de%20Uso/casosdeuso/","title":"Diagrama de Casos de Uso","text":""},{"location":"modelagem/Casos%20de%20Uso/casosdeuso/#casos-de-uso","title":"Casos de Uso","text":""},{"location":"modelagem/Casos%20de%20Uso/casosdeuso/#descricao","title":"Descri\u00e7\u00e3o:","text":"<ul> <li> <p>Contas</p> <ul> <li>Cria\u00e7\u00e3o</li> <li>Entrada</li> <li>Altera\u00e7\u00e3o</li> <li>Recuperar Senha</li> <li>Exclus\u00e3o L\u00f3gica</li> <li>Visualiza\u00e7\u00e3o</li> </ul> </li> <li> <p>Perfis</p> <ul> <li>Edi\u00e7\u00e3o</li> <li>Pesquisar</li> <li>Visualiza\u00e7\u00e3o</li> <li>Seguir/Deixar de Seguir</li> </ul> </li> <li> <p>Postagens (P\u00fablico)       </p> <ul> <li>Cria\u00e7\u00e3o</li> <li>Exclus\u00e3o</li> <li>Intera\u00e7\u00e3o</li> <li>Visualiza\u00e7\u00e3o</li> </ul> </li> <li> <p>Mensagens (Privado)</p> <ul> <li>Cria\u00e7\u00e3o</li> <li>Exclus\u00e3o</li> <li>Visualiza\u00e7\u00e3o</li> </ul> </li> <li> <p>Galerias</p> <ul> <li>Albuns</li> </ul> </li> <li>Blogs</li> <li>Grupos</li> </ul>"},{"location":"modelagem/Casos%20de%20Uso/casosdeuso/#criacao-de-uma-conta-no-sistema","title":"Cria\u00e7\u00e3o de uma conta no sistema","text":"<ul> <li> <p>Atores:</p> <ul> <li>Usu\u00e1rio</li> <li>Sistema</li> </ul> </li> <li> <p>Pr\u00e9-Condi\u00e7\u00f5es:</p> <ul> <li>Nenhuma</li> </ul> </li> <li> <p>Fluxo B\u00e1sico:</p> <ol> <li>Usu\u00e1rio fornece e-mail, senha e confirma\u00e7\u00f5es</li> <li>Dados do Usu\u00e1rio s\u00e3o validados pelo Sistema</li> <li>Dados do Usu\u00e1rio s\u00e3o encriptados pelo Sistema</li> <li>Dados do Usu\u00e1rio s\u00e3o persistidos pelo Sistema</li> <li>Sistema gera um link com prazo de expira\u00e7\u00e3o</li> <li>Sistema envia e-mail de verifica\u00e7\u00e3o, com o link, para o Usu\u00e1rio</li> <li>Usu\u00e1rio confirma o e-mail antes do link expirar</li> <li>Sistema confirma que o Cadastro do Usu\u00e1rio foi realizado com sucesso</li> <li>Sistema redireciona o Usu\u00e1rio para a p\u00e1gina de Entrada</li> </ol> </li> <li> <p>Fluxos Alternativos:</p> <ul> <li>2a. E-mail do Usu\u00e1rio \u00e9 inv\u00e1lido     2a1. Sistema exibe mensagem de erro</li> <li>2b. Senha do Usu\u00e1rio n\u00e3o respeita regras de seguran\u00e7a<ul> <li>2b1. Sistema exibe mensagem de erro</li> </ul> </li> <li>3a. Usu\u00e1rio tenta confirmar o e-mail depois de o link expirar<ul> <li>3a1. Sistema sugere que o Usu\u00e1rio realize um novo Cadastro</li> </ul> </li> </ul> </li> </ul>"},{"location":"modelagem/Casos%20de%20Uso/casosdeuso/#entrada-do-usuario-no-sistema","title":"Entrada do usu\u00e1rio no sistema","text":"<ul> <li> <p>Atores:</p> <ul> <li>Usu\u00e1rio</li> <li>Sistema</li> </ul> </li> <li> <p>Pr\u00e9-Condi\u00e7\u00f5es:     Usu\u00e1rio deve estar cadastrado</p> </li> <li> <p>Fluxo B\u00e1sico:</p> <ul> <li> <ol> <li>Usu\u00e1rio fornece e-mail e senha</li> </ol> </li> <li> <ol> <li>Sistema autentica o Usu\u00e1rio</li> </ol> </li> <li> <ol> <li>Sistema redireciona o Usu\u00e1rio para a p\u00e1gina inicial</li> </ol> </li> </ul> </li> <li> <p>Fluxos Alternativos:</p> <ul> <li>2a. Dados do Usu\u00e1rio Inv\u00e1lidos<ul> <li>2a1. Sistema exibe mensagem de erro</li> </ul> </li> <li>3a. Primeio acesso do Usu\u00e1rio<ul> <li>3a1. Sistema redireciona o Usu\u00e1rio para a p\u00e1gina de edi\u00e7\u00e3o de perfil</li> </ul> </li> </ul> </li> </ul>"},{"location":"modelagem/Classes/classes/","title":"Classes","text":"<p>Aqui est\u00e1 um exemplo b\u00e1sico de um diagrama de classe para a classe <code>Carro</code> usando PlantUML:</p> <pre><code>@startuml\nclass Carro {\n  +marca: String\n  +modelo: String\n  +ano: int\n  +cor: String\n  +velocidade: int\n\n  +acelerar(): void\n  +frear(): void\n  +ligar(): void\n  +desligar(): void\n}\n@enduml\n</code></pre> <p>Esse diagrama representa uma classe <code>Carro</code> com atributos como <code>marca</code>, <code>modelo</code>, <code>ano</code>, <code>cor</code>, e <code>velocidade</code>, al\u00e9m de m\u00e9todos como <code>acelerar</code>, <code>frear</code>, <code>ligar</code> e <code>desligar</code>.</p>"},{"location":"modelagem/Classes/classes/#11","title":"1:1","text":"<p>Temos um exemplo de diagrama UML com PlantUML para ilustrar uma associa\u00e7\u00e3o 1:1 entre as classes <code>Carro</code> e <code>Motor</code>. Nesse caso, um carro possui um \u00fanico motor, e cada motor pertence a um \u00fanico carro.</p> <pre><code>@startuml\nclass Carro {\n  +marca: String\n  +modelo: String\n  +ano: int\n  +cor: String\n  +velocidade: int\n\n  +acelerar(): void\n  +frear(): void\n  +ligar(): void\n  +desligar(): void\n}\n\nclass Motor {\n  +potencia: int\n  +tipo: String\n\n  +ligarMotor(): void\n  +desligarMotor(): void\n}\n\nCarro \"1\" -- \"1\" Motor : possui\n@enduml\n</code></pre> <p>Neste diagrama, temos:</p> <ul> <li>Uma associa\u00e7\u00e3o 1:1 entre <code>Carro</code> e <code>Motor</code>.</li> <li>A classe <code>Carro</code> tem atributos como <code>marca</code>, <code>modelo</code>, <code>ano</code>, <code>cor</code>, e m\u00e9todos como <code>acelerar</code>, <code>frear</code>.</li> <li>A classe <code>Motor</code> tem atributos como <code>potencia</code> e <code>tipo</code>, al\u00e9m de m\u00e9todos como <code>ligarMotor</code> e <code>desligarMotor</code>.</li> </ul> <p>A rela\u00e7\u00e3o \u00e9 representada por uma linha com \"1\" em ambos os lados, indicando uma associa\u00e7\u00e3o 1:1.</p>"},{"location":"modelagem/Classes/classes/#1n","title":"1:N","text":"<p>Um exemplo de diagrama UML usando PlantUML para ilustrar uma associa\u00e7\u00e3o 1:N entre as classes <code>Carro</code> e <code>Roda</code>, onde um carro tem v\u00e1rias rodas, mas cada roda pertence a apenas um carro.</p> <pre><code>@startuml\nclass Carro {\n  +marca: String\n  +modelo: String\n  +ano: int\n  +cor: String\n  +velocidade: int\n\n  +acelerar(): void\n  +frear(): void\n  +ligar(): void\n  +desligar(): void\n}\n\nclass Roda {\n  +tamanho: int\n  +tipo: String\n\n  +girar(): void\n  +frear(): void\n}\n\nCarro \"1\" -- \"4\" Roda : possui\n@enduml\n</code></pre> <p>Neste diagrama:</p> <ul> <li>A classe <code>Carro</code> pode ter v\u00e1rias rodas (4, neste caso), mas cada <code>Roda</code> pertence a um \u00fanico <code>Carro</code>.</li> <li>A rela\u00e7\u00e3o 1:N \u00e9 representada por \"1\" no lado do <code>Carro</code> e \"4\" no lado da <code>Roda</code>, indicando que um carro pode ter 4 rodas.</li> </ul> <p>Essa \u00e9 uma forma simples de representar uma associa\u00e7\u00e3o 1:N. Voc\u00ea pode ajustar os n\u00fameros para refletir outros casos de uso, como um carro com um n\u00famero vari\u00e1vel de rodas.</p>"},{"location":"modelagem/Classes/classes/#nn","title":"N:N","text":"<p>Vamos criar uma nova associa\u00e7\u00e3o N:N para o exemplo acima, desta vez utilizando as classes <code>Carro</code> e <code>Motorista</code>, onde v\u00e1rios carros podem ser dirigidos por v\u00e1rios motoristas, e cada motorista pode dirigir v\u00e1rios carros.</p> <pre><code>@startuml\nclass Carro {\n  +marca: String\n  +modelo: String\n  +ano: int\n  +cor: String\n  +velocidade: int\n\n  +acelerar(): void\n  +frear(): void\n  +ligar(): void\n  +desligar(): void\n}\n\nclass Motorista {\n  +nome: String\n  +cnh: String\n  +idade: int\n\n  +dirigir(): void\n  +estacionar(): void\n}\n\nCarro \"N\" -- \"N\" Motorista : dirige\n@enduml\n</code></pre> <p>Neste diagrama:</p> <ul> <li>A classe <code>Carro</code> mant\u00e9m suas caracter\u00edsticas e m\u00e9todos relacionados \u00e0 condu\u00e7\u00e3o.</li> <li>A classe <code>Motorista</code> tem atributos como <code>nome</code>, <code>cnh</code> (Carteira Nacional de Habilita\u00e7\u00e3o), e <code>idade</code>, al\u00e9m de m\u00e9todos como <code>dirigir</code> e <code>estacionar</code>.</li> <li>A associa\u00e7\u00e3o N:N indica que um carro pode ser dirigido por v\u00e1rios motoristas, e um motorista pode dirigir v\u00e1rios carros, como poderia ocorrer em uma empresa de loca\u00e7\u00e3o de ve\u00edculos ou uma garagem compartilhada.</li> </ul> <p>Essa rela\u00e7\u00e3o N:N \u00e9 comum em cen\u00e1rios onde h\u00e1 m\u00faltiplos motoristas e m\u00faltiplos ve\u00edculos dispon\u00edveis para uso.</p>"},{"location":"modelagem/Classes/classes/#heranca","title":"Heran\u00e7a","text":"<p>Aqui est\u00e1 uma proposta de heran\u00e7a para o exemplo acima, utilizando as classes <code>Carro</code>, <code>CarroEletrico</code> e <code>CarroCombustao</code>. A classe <code>Carro</code> \u00e9 a classe base, e as classes <code>CarroEletrico</code> e <code>CarroCombustao</code> herdam suas propriedades e m\u00e9todos, com caracter\u00edsticas espec\u00edficas de cada tipo de carro.</p> <pre><code>@startuml\nclass Carro {\n  +marca: String\n  +modelo: String\n  +ano: int\n  +cor: String\n  +velocidade: int\n\n  +acelerar(): void\n  +frear(): void\n  +ligar(): void\n  +desligar(): void\n}\n\nclass CarroEletrico {\n  +autonomiaBateria: int\n  +carregarBateria(): void\n}\n\nclass CarroCombustao {\n  +capacidadeTanque: int\n  +abastecer(): void\n}\n\nCarro &lt;|-- CarroEletrico\nCarro &lt;|-- CarroCombustao\n@enduml\n</code></pre> <p>Neste diagrama:</p> <ul> <li>A classe <code>Carro</code> \u00e9 a classe base, contendo atributos e m\u00e9todos comuns a todos os tipos de carros.</li> <li>A classe <code>CarroEletrico</code> herda de <code>Carro</code> e tem um atributo espec\u00edfico <code>autonomiaBateria</code> e um m\u00e9todo <code>carregarBateria</code>.</li> <li>A classe <code>CarroCombustao</code> tamb\u00e9m herda de <code>Carro</code>, com o atributo <code>capacidadeTanque</code> e o m\u00e9todo <code>abastecer</code>.</li> </ul> <p>Essa estrutura reflete a especializa\u00e7\u00e3o de carros em diferentes tipos, aproveitando a heran\u00e7a para compartilhar atributos e m\u00e9todos comuns.</p>"},{"location":"modelagem/Classes/classes/#agregacao","title":"Agrega\u00e7\u00e3o","text":"<p>Aqui est\u00e1 um exemplo de diagrama UML em PlantUML para ilustrar uma agrega\u00e7\u00e3o entre as classes <code>Carro</code> e <code>Roda</code>, onde um carro tem rodas, mas as rodas podem existir independentemente de um carro espec\u00edfico.</p> <pre><code>@startuml\nclass Carro {\n  +marca: String\n  +modelo: String\n  +ano: int\n  +cor: String\n  +velocidade: int\n\n  +acelerar(): void\n  +frear(): void\n  +ligar(): void\n  +desligar(): void\n}\n\nclass Roda {\n  +tamanho: int\n  +tipo: String\n\n  +girar(): void\n  +frear(): void\n}\n\nCarro \"1\" o-- \"N\" Roda : possui\n@enduml\n</code></pre> <p>Neste diagrama:</p> <ul> <li>A classe <code>Carro</code> possui uma ou mais <code>Rodas</code>, representando uma rela\u00e7\u00e3o de agrega\u00e7\u00e3o.</li> <li>A nota\u00e7\u00e3o \"o--\" indica que a rela\u00e7\u00e3o \u00e9 de agrega\u00e7\u00e3o, onde um <code>Carro</code> pode ter v\u00e1rias <code>Rodas</code>, mas as <code>Rodas</code> podem existir sem estarem associadas a um carro espec\u00edfico.</li> </ul> <p>Esse modelo reflete a realidade em que rodas podem ser usadas em diferentes carros ou podem ser substitu\u00eddas, mantendo uma rela\u00e7\u00e3o de depend\u00eancia, mas sem um v\u00ednculo forte.</p>"},{"location":"modelagem/Classes/classes/#composicao","title":"Composi\u00e7\u00e3o","text":"<p>Aqui est\u00e1 um exemplo de diagrama UML em PlantUML para ilustrar uma composi\u00e7\u00e3o entre as classes <code>Carro</code> e <code>Motor</code>, onde um carro tem um motor, e o motor n\u00e3o pode existir independentemente do carro.</p> <pre><code>@startuml\nclass Carro {\n  +marca: String\n  +modelo: String\n  +ano: int\n  +cor: String\n  +velocidade: int\n\n  +acelerar(): void\n  +frear(): void\n  +ligar(): void\n  +desligar(): void\n}\n\nclass Motor {\n  +potencia: int\n  +tipo: String\n\n  +ligarMotor(): void\n  +desligarMotor(): void\n}\n\nCarro \"1\" *-- \"1\" Motor : cont\u00e9m\n@enduml\n</code></pre> <p>Neste diagrama:</p> <ul> <li>A classe <code>Carro</code> tem uma composi\u00e7\u00e3o com a classe <code>Motor</code>, representada pela nota\u00e7\u00e3o \"*--\".</li> <li>Isso indica que um <code>Carro</code> cont\u00e9m exatamente um <code>Motor</code>, e o motor n\u00e3o faz sentido fora do contexto do carro. Se o carro for destru\u00eddo, o motor tamb\u00e9m \u00e9 destru\u00eddo.</li> </ul> <p>Essa rela\u00e7\u00e3o \u00e9 comum em sistemas onde as partes (como o motor) s\u00e3o componentes essenciais do todo (como o carro) e n\u00e3o podem existir independentemente.</p>"},{"location":"modelagem/Classes/classes/#completo","title":"Completo","text":"<p>Aqui est\u00e1 um diagrama completo em PlantUML que combina todos os elementos apresentados: associa\u00e7\u00f5es, agrega\u00e7\u00f5es, composi\u00e7\u00f5es e heran\u00e7as entre as classes <code>Carro</code>, <code>Motor</code>, <code>Motorista</code>, <code>Roda</code>, <code>CarroEletrico</code> e <code>CarroCombustao</code>.</p> <pre><code>@startuml\nclass Carro {\n  +marca: String\n  +modelo: String\n  +ano: int\n  +cor: String\n  +velocidade: int\n\n  +acelerar(): void\n  +frear(): void\n  +ligar(): void\n  +desligar(): void\n}\n\nclass Motor {\n  +potencia: int\n  +tipo: String\n\n  +ligarMotor(): void\n  +desligarMotor(): void\n}\n\nclass Motorista {\n  +nome: String\n  +cnh: String\n  +idade: int\n\n  +dirigir(): void\n  +estacionar(): void\n}\n\nclass Roda {\n  +tamanho: int\n  +tipo: String\n\n  +girar(): void\n  +frear(): void\n}\n\nclass CarroEletrico {\n  +autonomiaBateria: int\n  +carregarBateria(): void\n}\n\nclass CarroCombustao {\n  +capacidadeTanque: int\n  +abastecer(): void\n}\n\nCarro &lt;|-- CarroEletrico\nCarro &lt;|-- CarroCombustao\n\nCarro \"1\" o-- \"N\" Roda : possui\nCarro \"1\" o-- \"N\" Motorista : dirige\nCarro \"1\" *-- \"1\" Motor : cont\u00e9m\nCarro \"N\" -- \"N\" Motorista : dirige\nCarro \"N\" -- \"N\" Roda : utiliza\n@enduml\n</code></pre>"},{"location":"modelagem/Classes/classes/#explicacao-do-diagrama","title":"Explica\u00e7\u00e3o do Diagrama:","text":"<ol> <li> <p>Heran\u00e7a:</p> </li> <li> <p><code>Carro</code> \u00e9 a classe base, e <code>CarroEletrico</code> e <code>CarroCombustao</code> s\u00e3o subclasses que herdam de <code>Carro</code>.</p> </li> <li> <p>Agrega\u00e7\u00f5es:</p> </li> <li> <p><code>Carro</code> possui v\u00e1rias <code>Rodas</code> (agrega\u00e7\u00e3o).</p> </li> <li><code>Carro</code> pode ser dirigido por v\u00e1rios <code>Motoristas</code> (agrega\u00e7\u00e3o).</li> <li> <p>Composi\u00e7\u00e3o:</p> </li> <li> <p><code>Carro</code> cont\u00e9m exatamente um <code>Motor</code>, que n\u00e3o pode existir sem o carro (composi\u00e7\u00e3o).</p> </li> <li> <p>Associa\u00e7\u00f5es:</p> </li> <li> <p><code>Carro</code> pode ser dirigido por v\u00e1rios <code>Motoristas</code>, e um <code>Motorista</code> pode dirigir v\u00e1rios <code>Carros</code> (associa\u00e7\u00e3o N:N).</p> </li> </ol> <p>Esse diagrama oferece uma vis\u00e3o abrangente das rela\u00e7\u00f5es entre as classes no contexto apresentado.</p>"},{"location":"modelagem/poo/ProceduralPoo/","title":"ProceduralPoo","text":"In\u00a0[1]: Copied! <pre>### 1. Programa\u00e7\u00e3o Procedural\n\ndef calcular_area(base, altura):\n    \"\"\"Calcula a \u00e1rea de um ret\u00e2ngulo.\n\n    Args:\n        base (float): A base do ret\u00e2ngulo.\n        altura (float): A altura do ret\u00e2ngulo.\n\n    Returns:\n        float: A \u00e1rea do ret\u00e2ngulo.\n    \"\"\"\n\n    area = base * altura\n    return area\n\n# Obtendo os dados do usu\u00e1rio\nbase = float(input(\"Digite a base do ret\u00e2ngulo: \"))\naltura = float(input(\"Digite a altura do ret\u00e2ngulo: \"))\n\n# Calculando a \u00e1rea\nresultado = calcular_area(base, altura)\n\n# Imprimindo o resultado\nprint(\"A \u00e1rea do ret\u00e2ngulo \u00e9:\", resultado)\n</pre> ### 1. Programa\u00e7\u00e3o Procedural  def calcular_area(base, altura):     \"\"\"Calcula a \u00e1rea de um ret\u00e2ngulo.      Args:         base (float): A base do ret\u00e2ngulo.         altura (float): A altura do ret\u00e2ngulo.      Returns:         float: A \u00e1rea do ret\u00e2ngulo.     \"\"\"      area = base * altura     return area  # Obtendo os dados do usu\u00e1rio base = float(input(\"Digite a base do ret\u00e2ngulo: \")) altura = float(input(\"Digite a altura do ret\u00e2ngulo: \"))  # Calculando a \u00e1rea resultado = calcular_area(base, altura)  # Imprimindo o resultado print(\"A \u00e1rea do ret\u00e2ngulo \u00e9:\", resultado) <pre>\n---------------------------------------------------------------------------\nStdinNotImplementedError                  Traceback (most recent call last)\nCell In[1], line 18\n     15     return area\n     17 # Obtendo os dados do usu\u00e1rio\n---&gt; 18 base = float(input(\"Digite a base do ret\u00e2ngulo: \"))\n     19 altura = float(input(\"Digite a altura do ret\u00e2ngulo: \"))\n     21 # Calculando a \u00e1rea\n\nFile C:\\Python310\\lib\\site-packages\\ipykernel\\kernelbase.py:1281, in Kernel.raw_input(self, prompt)\n   1279 if not self._allow_stdin:\n   1280     msg = \"raw_input was called, but this frontend does not support input requests.\"\n-&gt; 1281     raise StdinNotImplementedError(msg)\n   1282 return self._input_request(\n   1283     str(prompt),\n   1284     self._parent_ident[\"shell\"],\n   1285     self.get_parent(\"shell\"),\n   1286     password=False,\n   1287 )\n\nStdinNotImplementedError: raw_input was called, but this frontend does not support input requests.</pre> In\u00a0[2]: Copied! <pre>### 2. Programa\u00e7\u00e3o Orientada a Objetos\n\nclass Retangulo:\n    def __init__(self, base, altura):\n        self.base = base\n        self.altura = altura\n\n    def calcular_area(self):\n        return self.base * self.altura\n\n# Obtendo os dados do usu\u00e1rio\nbase = float(input(\"Digite a base do ret\u00e2ngulo: \"))\naltura = float(input(\"Digite a altura do ret\u00e2ngulo: \"))\n\n# Criando um objeto Retangulo\nretangulo = Retangulo(base, altura)\n\n# Calculando a \u00e1rea\nresultado = retangulo.calcular_area()\n\n# Imprimindo o resultado\nprint(\"A \u00e1rea do ret\u00e2ngulo \u00e9:\", resultado)\n</pre> ### 2. Programa\u00e7\u00e3o Orientada a Objetos  class Retangulo:     def __init__(self, base, altura):         self.base = base         self.altura = altura      def calcular_area(self):         return self.base * self.altura  # Obtendo os dados do usu\u00e1rio base = float(input(\"Digite a base do ret\u00e2ngulo: \")) altura = float(input(\"Digite a altura do ret\u00e2ngulo: \"))  # Criando um objeto Retangulo retangulo = Retangulo(base, altura)  # Calculando a \u00e1rea resultado = retangulo.calcular_area()  # Imprimindo o resultado print(\"A \u00e1rea do ret\u00e2ngulo \u00e9:\", resultado) <pre>\n---------------------------------------------------------------------------\nStdinNotImplementedError                  Traceback (most recent call last)\nCell In[2], line 12\n      9         return self.base * self.altura\n     11 # Obtendo os dados do usu\u00e1rio\n---&gt; 12 base = float(input(\"Digite a base do ret\u00e2ngulo: \"))\n     13 altura = float(input(\"Digite a altura do ret\u00e2ngulo: \"))\n     15 # Criando um objeto Retangulo\n\nFile C:\\Python310\\lib\\site-packages\\ipykernel\\kernelbase.py:1281, in Kernel.raw_input(self, prompt)\n   1279 if not self._allow_stdin:\n   1280     msg = \"raw_input was called, but this frontend does not support input requests.\"\n-&gt; 1281     raise StdinNotImplementedError(msg)\n   1282 return self._input_request(\n   1283     str(prompt),\n   1284     self._parent_ident[\"shell\"],\n   1285     self.get_parent(\"shell\"),\n   1286     password=False,\n   1287 )\n\nStdinNotImplementedError: raw_input was called, but this frontend does not support input requests.</pre> <p>Analisando os Exemplos</p> <ul> <li>Procedural: O c\u00f3digo \u00e9 organizado em uma fun\u00e7\u00e3o <code>calcular_area</code> que realiza o c\u00e1lculo. Os dados s\u00e3o passados como argumentos para a fun\u00e7\u00e3o.</li> <li>Orientado a Objetos: Criamos uma classe <code>Retangulo</code> que representa um ret\u00e2ngulo. A classe possui atributos <code>base</code> e <code>altura</code> e um m\u00e9todo <code>calcular_area</code> para calcular a \u00e1rea.</li> </ul> <p>Quando usar cada paradigma?</p> <ul> <li>Procedural: Ideal para tarefas simples e diretas, onde a organiza\u00e7\u00e3o do c\u00f3digo em fun\u00e7\u00f5es \u00e9 suficiente.</li> <li>Orientado a Objetos: Mais adequado para sistemas complexos, onde a organiza\u00e7\u00e3o do c\u00f3digo em objetos facilita a manuten\u00e7\u00e3o e reutiliza\u00e7\u00e3o.</li> </ul> <p>Outras Considera\u00e7\u00f5es</p> <ul> <li>Encapsulamento: Na POO, os atributos e m\u00e9todos podem ser p\u00fablicos ou privados, controlando o acesso aos dados.</li> <li>Heran\u00e7a: Classes podem herdar atributos e m\u00e9todos de outras classes, promovendo a reutiliza\u00e7\u00e3o de c\u00f3digo.</li> <li>Polimorfismo: Objetos de diferentes classes podem responder de forma diferente ao mesmo m\u00e9todo.</li> </ul> <p>Aplicativos Mais Complexos</p> <p>Para aplicativos mais complexos, como jogos, interfaces gr\u00e1ficas ou sistemas de gerenciamento de dados, a POO geralmente \u00e9 a abordagem preferida devido \u00e0 sua capacidade de modelar o mundo real de forma mais natural.</p> <p>Exerc\u00edcios</p> <ul> <li>Expanda o exemplo: Crie uma classe <code>Circulo</code> com atributos <code>raio</code> e um m\u00e9todo para calcular a \u00e1rea.</li> <li>Implemente um jogo simples: Crie um jogo de adivinha\u00e7\u00e3o usando classes para representar o jogador, o computador e o jogo em si.</li> </ul> In\u00a0[3]: Copied! <pre># Crie uma interface gr\u00e1fica:** Utilize uma biblioteca como Kyvi para criar uma interface gr\u00e1fica para o c\u00e1lculo da \u00e1rea do ret\u00e2ngulo.\n! pip install \"kivy[base]\" kivy_examples\n</pre> # Crie uma interface gr\u00e1fica:** Utilize uma biblioteca como Kyvi para criar uma interface gr\u00e1fica para o c\u00e1lculo da \u00e1rea do ret\u00e2ngulo. ! pip install \"kivy[base]\" kivy_examples <pre>Requirement already satisfied: kivy_examples in f:\\apps\\source\\repos\\24.2\\pbe_24.2_8001\\.venv\\lib\\site-packages (2.3.0)\nRequirement already satisfied: kivy[base] in f:\\apps\\source\\repos\\24.2\\pbe_24.2_8001\\.venv\\lib\\site-packages (2.3.0)\nRequirement already satisfied: Kivy-Garden&gt;=0.1.4 in f:\\apps\\source\\repos\\24.2\\pbe_24.2_8001\\.venv\\lib\\site-packages (from kivy[base]) (0.1.5)\nRequirement already satisfied: docutils in f:\\apps\\source\\repos\\24.2\\pbe_24.2_8001\\.venv\\lib\\site-packages (from kivy[base]) (0.21.2)\nRequirement already satisfied: pygments in f:\\apps\\source\\repos\\24.2\\pbe_24.2_8001\\.venv\\lib\\site-packages (from kivy[base]) (2.18.0)\nRequirement already satisfied: kivy-deps.angle~=0.4.0 in f:\\apps\\source\\repos\\24.2\\pbe_24.2_8001\\.venv\\lib\\site-packages (from kivy[base]) (0.4.0)\nRequirement already satisfied: kivy-deps.sdl2~=0.7.0 in f:\\apps\\source\\repos\\24.2\\pbe_24.2_8001\\.venv\\lib\\site-packages (from kivy[base]) (0.7.0)\nRequirement already satisfied: kivy-deps.glew~=0.3.1 in f:\\apps\\source\\repos\\24.2\\pbe_24.2_8001\\.venv\\lib\\site-packages (from kivy[base]) (0.3.1)\nRequirement already satisfied: pypiwin32 in f:\\apps\\source\\repos\\24.2\\pbe_24.2_8001\\.venv\\lib\\site-packages (from kivy[base]) (223)\nRequirement already satisfied: pillow&lt;11,&gt;=9.5.0 in f:\\apps\\source\\repos\\24.2\\pbe_24.2_8001\\.venv\\lib\\site-packages (from kivy[base]) (10.4.0)\nRequirement already satisfied: requests in f:\\apps\\source\\repos\\24.2\\pbe_24.2_8001\\.venv\\lib\\site-packages (from kivy[base]) (2.32.3)\nRequirement already satisfied: pywin32&gt;=223 in f:\\apps\\source\\repos\\24.2\\pbe_24.2_8001\\.venv\\lib\\site-packages (from pypiwin32-&gt;kivy[base]) (306)\nRequirement already satisfied: charset-normalizer&lt;4,&gt;=2 in f:\\apps\\source\\repos\\24.2\\pbe_24.2_8001\\.venv\\lib\\site-packages (from requests-&gt;kivy[base]) (3.3.2)\nRequirement already satisfied: idna&lt;4,&gt;=2.5 in f:\\apps\\source\\repos\\24.2\\pbe_24.2_8001\\.venv\\lib\\site-packages (from requests-&gt;kivy[base]) (3.10)\nRequirement already satisfied: urllib3&lt;3,&gt;=1.21.1 in f:\\apps\\source\\repos\\24.2\\pbe_24.2_8001\\.venv\\lib\\site-packages (from requests-&gt;kivy[base]) (2.2.3)\nRequirement already satisfied: certifi&gt;=2017.4.17 in f:\\apps\\source\\repos\\24.2\\pbe_24.2_8001\\.venv\\lib\\site-packages (from requests-&gt;kivy[base]) (2024.8.30)\n</pre> In\u00a0[4]: Copied! <pre>from kivy.app import App\nfrom kivy.uix.boxlayout import BoxLayout\nfrom kivy.uix.label import Label\nfrom kivy.uix.textinput import TextInput\nfrom kivy.uix.button import Button\n\nclass Retangulo:\n    def __init__(self, base, altura):\n        self.base = base\n        self.altura = altura\n\n    def calcular_area(self):\n        return self.base * self.altura\n\nclass CalculadoraAreaApp(App):\n    def build(self):\n        layout = BoxLayout(orientation='vertical')\n        self.base_input = TextInput(multiline=False)\n        self.altura_input = TextInput(multiline=False)\n        self.resultado_label = Label(text='Resultado:')\n        calcular_button = Button(text='Calcular')\n        calcular_button.bind(on_press=self.calcular_area)\n        layout.add_widget(self.base_input)\n        layout.add_widget(self.altura_input)\n        layout.add_widget(calcular_button)\n        layout.add_widget(self.resultado_label)\n        return layout\n\n    def calcular_area(self, instance):\n        try:\n            base = float(self.base_input.text)\n            altura = float(self.altura_input.text)\n            retangulo = Retangulo(base, altura)\n            resultado = retangulo.calcular_area()\n            self.resultado_label.text = f'A \u00e1rea \u00e9: {resultado}'\n        except ValueError:\n            self.resultado_label.text = 'Digite valores num\u00e9ricos.'\n\nif __name__ == '__main__':\n    CalculadoraAreaApp().run()\n</pre> from kivy.app import App from kivy.uix.boxlayout import BoxLayout from kivy.uix.label import Label from kivy.uix.textinput import TextInput from kivy.uix.button import Button  class Retangulo:     def __init__(self, base, altura):         self.base = base         self.altura = altura      def calcular_area(self):         return self.base * self.altura  class CalculadoraAreaApp(App):     def build(self):         layout = BoxLayout(orientation='vertical')         self.base_input = TextInput(multiline=False)         self.altura_input = TextInput(multiline=False)         self.resultado_label = Label(text='Resultado:')         calcular_button = Button(text='Calcular')         calcular_button.bind(on_press=self.calcular_area)         layout.add_widget(self.base_input)         layout.add_widget(self.altura_input)         layout.add_widget(calcular_button)         layout.add_widget(self.resultado_label)         return layout      def calcular_area(self, instance):         try:             base = float(self.base_input.text)             altura = float(self.altura_input.text)             retangulo = Retangulo(base, altura)             resultado = retangulo.calcular_area()             self.resultado_label.text = f'A \u00e1rea \u00e9: {resultado}'         except ValueError:             self.resultado_label.text = 'Digite valores num\u00e9ricos.'  if __name__ == '__main__':     CalculadoraAreaApp().run() <pre>\n---------------------------------------------------------------------------\nModuleNotFoundError                       Traceback (most recent call last)\nCell In[4], line 1\n----&gt; 1 from kivy.app import App\n      2 from kivy.uix.boxlayout import BoxLayout\n      3 from kivy.uix.label import Label\n\nModuleNotFoundError: No module named 'kivy'</pre> In\u00a0[5]: Copied! <pre>### 1. Programa\u00e7\u00e3o Procedural\n\ndef criar_personagem():\n    nome = input(\"Digite o nome do seu personagem: \")\n    classe = input(\"Digite a classe do seu personagem: \")\n    vida = 100\n    mana = 50\n    return nome, classe, vida, mana\n\ndef atacar(vida_inimigo):\n    dano = 10\n    vida_inimigo -= dano\n    print(\"Voc\u00ea causou 10 de dano ao inimigo!\")\n\n# Criar o personagem\nnome, classe, vida, mana = criar_personagem()\n\n# Combate\nvida_inimigo = 100\nwhile vida &gt; 0 and vida_inimigo &gt; 0:\n    acao = input(\"O que voc\u00ea deseja fazer? (atacar/defender): \")\n    if acao == \"atacar\":\n        atacar(vida_inimigo)\n    # ... outras a\u00e7\u00f5es\n\nprint(\"Fim do jogo!\")\n</pre> ### 1. Programa\u00e7\u00e3o Procedural  def criar_personagem():     nome = input(\"Digite o nome do seu personagem: \")     classe = input(\"Digite a classe do seu personagem: \")     vida = 100     mana = 50     return nome, classe, vida, mana  def atacar(vida_inimigo):     dano = 10     vida_inimigo -= dano     print(\"Voc\u00ea causou 10 de dano ao inimigo!\")  # Criar o personagem nome, classe, vida, mana = criar_personagem()  # Combate vida_inimigo = 100 while vida &gt; 0 and vida_inimigo &gt; 0:     acao = input(\"O que voc\u00ea deseja fazer? (atacar/defender): \")     if acao == \"atacar\":         atacar(vida_inimigo)     # ... outras a\u00e7\u00f5es  print(\"Fim do jogo!\") <pre>\n---------------------------------------------------------------------------\nStdinNotImplementedError                  Traceback (most recent call last)\nCell In[5], line 16\n     13     print(\"Voc\u00ea causou 10 de dano ao inimigo!\")\n     15 # Criar o personagem\n---&gt; 16 nome, classe, vida, mana = criar_personagem()\n     18 # Combate\n     19 vida_inimigo = 100\n\nCell In[5], line 4, in criar_personagem()\n      3 def criar_personagem():\n----&gt; 4     nome = input(\"Digite o nome do seu personagem: \")\n      5     classe = input(\"Digite a classe do seu personagem: \")\n      6     vida = 100\n\nFile C:\\Python310\\lib\\site-packages\\ipykernel\\kernelbase.py:1281, in Kernel.raw_input(self, prompt)\n   1279 if not self._allow_stdin:\n   1280     msg = \"raw_input was called, but this frontend does not support input requests.\"\n-&gt; 1281     raise StdinNotImplementedError(msg)\n   1282 return self._input_request(\n   1283     str(prompt),\n   1284     self._parent_ident[\"shell\"],\n   1285     self.get_parent(\"shell\"),\n   1286     password=False,\n   1287 )\n\nStdinNotImplementedError: raw_input was called, but this frontend does not support input requests.</pre> In\u00a0[6]: Copied! <pre>### 2. Programa\u00e7\u00e3o Orientada a Objetos\n\nclass Personagem:\n    def __init__(self, nome, classe, vida=100, mana=50):\n        self.nome = nome\n        self.classe = classe\n        self.vida = vida\n        self.mana = mana\n\n    def atacar(self, inimigo):\n        dano = 10\n        inimigo.vida -= dano\n        print(f\"{self.nome} causou 10 de dano a {inimigo.nome}!\")\n\n# Criar os personagens\njogador = Personagem(\"Her\u00f3i\", \"Guerreiro\")\ninimigo = Personagem(\"Minotauro\", \"B\u00e1rbaro\")\n\n# Combate\nwhile jogador.vida &gt; 0 and inimigo.vida &gt; 0:\n    acao = input(\"O que voc\u00ea deseja fazer? (atacar/defender): \")\n    if acao == \"atacar\":\n        jogador.atacar(inimigo)\n    # ... outras a\u00e7\u00f5es\n\nprint(\"Fim do jogo!\")\n</pre> ### 2. Programa\u00e7\u00e3o Orientada a Objetos  class Personagem:     def __init__(self, nome, classe, vida=100, mana=50):         self.nome = nome         self.classe = classe         self.vida = vida         self.mana = mana      def atacar(self, inimigo):         dano = 10         inimigo.vida -= dano         print(f\"{self.nome} causou 10 de dano a {inimigo.nome}!\")  # Criar os personagens jogador = Personagem(\"Her\u00f3i\", \"Guerreiro\") inimigo = Personagem(\"Minotauro\", \"B\u00e1rbaro\")  # Combate while jogador.vida &gt; 0 and inimigo.vida &gt; 0:     acao = input(\"O que voc\u00ea deseja fazer? (atacar/defender): \")     if acao == \"atacar\":         jogador.atacar(inimigo)     # ... outras a\u00e7\u00f5es  print(\"Fim do jogo!\") <pre>\n---------------------------------------------------------------------------\nStdinNotImplementedError                  Traceback (most recent call last)\nCell In[6], line 21\n     19 # Combate\n     20 while jogador.vida &gt; 0 and inimigo.vida &gt; 0:\n---&gt; 21     acao = input(\"O que voc\u00ea deseja fazer? (atacar/defender): \")\n     22     if acao == \"atacar\":\n     23         jogador.atacar(inimigo)\n\nFile C:\\Python310\\lib\\site-packages\\ipykernel\\kernelbase.py:1281, in Kernel.raw_input(self, prompt)\n   1279 if not self._allow_stdin:\n   1280     msg = \"raw_input was called, but this frontend does not support input requests.\"\n-&gt; 1281     raise StdinNotImplementedError(msg)\n   1282 return self._input_request(\n   1283     str(prompt),\n   1284     self._parent_ident[\"shell\"],\n   1285     self.get_parent(\"shell\"),\n   1286     password=False,\n   1287 )\n\nStdinNotImplementedError: raw_input was called, but this frontend does not support input requests.</pre> <p>An\u00e1lise:</p> <ul> <li>Procedural: O c\u00f3digo \u00e9 dividido em fun\u00e7\u00f5es que realizam tarefas espec\u00edficas. Os dados do personagem s\u00e3o armazenados em vari\u00e1veis globais ou passados como argumentos para as fun\u00e7\u00f5es.</li> <li>Orientado a Objetos: O personagem \u00e9 representado por uma classe <code>Personagem</code>, com atributos e m\u00e9todos. As a\u00e7\u00f5es do personagem s\u00e3o realizadas atrav\u00e9s dos m\u00e9todos da classe.</li> </ul> <p>Vantagens da POO neste exemplo:</p> <ul> <li>Reutiliza\u00e7\u00e3o de c\u00f3digo: A classe <code>Personagem</code> pode ser reutilizada para criar outros personagens com diferentes atributos.</li> <li>Organiza\u00e7\u00e3o: O c\u00f3digo fica mais organizado e f\u00e1cil de entender, pois cada parte do personagem (atributos e a\u00e7\u00f5es) est\u00e1 encapsulada na classe.</li> <li>Extensibilidade: \u00c9 mais f\u00e1cil adicionar novas funcionalidades ao jogo, como novas classes de personagens ou habilidades.</li> </ul> <p>Considera\u00e7\u00f5es:</p> <ul> <li>Complexidade: Para jogos mais complexos, a POO \u00e9 essencial para gerenciar a quantidade de dados e intera\u00e7\u00f5es entre os objetos.</li> <li>Aprendizado: A POO pode exigir um pouco mais de tempo para aprender, mas os benef\u00edcios a longo prazo s\u00e3o significativos.</li> </ul> <p>Pr\u00f3ximos passos:</p> <ul> <li>Expans\u00e3o do jogo: Adicione mais classes, como itens, magias e inimigos.</li> <li>Interface gr\u00e1fica: Utilize uma biblioteca como Pygame para criar uma interface gr\u00e1fica para o jogo.</li> <li>Sistema de combate: Implemente um sistema de combate mais complexo, com diferentes tipos de ataques e defesas.</li> </ul> <p>Poss\u00edveis t\u00f3picos:</p> <ul> <li>Heran\u00e7a: Crie classes derivadas de <code>Personagem</code> para representar diferentes tipos de personagens (mago, arqueiro, etc.).</li> <li>Encapsulamento: Proteja os atributos da classe para evitar modifica\u00e7\u00f5es indesejadas.</li> </ul> <p>Lembre-se: A escolha entre programa\u00e7\u00e3o procedural e orientada a objetos depende do contexto e da complexidade do problema. Em muitos casos, a combina\u00e7\u00e3o de ambos os paradigmas pode levar a solu\u00e7\u00f5es mais elegantes e eficientes.</p> In\u00a0[7]: Copied! <pre>class Personagem:\n    def __init__(self, nome, classe, vida=100, mana=50):\n        self.nome = nome\n        self.classe = classe\n        self.vida = vida\n        self.mana = mana\n\n    def atacar(self, inimigo):\n        dano = 10\n        inimigo.vida -= dano\n        print(f\"{self.nome} causou {dano} de dano a {inimigo.nome}!\")\n\nclass Mago(Personagem):\n    def __init__(self, nome):\n        super().__init__(nome, \"Mago\", mana=100)\n\n    def lan\u00e7ar_magia(self, inimigo):\n        if self.mana &gt;= 20:\n            dano = 15\n            self.mana -= 20\n            inimigo.vida -= dano\n            print(f\"{self.nome} lan\u00e7ou uma magia, causando {dano} de dano a {inimigo.nome}!\")\n        else:\n            print(f\"{self.nome} n\u00e3o tem mana suficiente para lan\u00e7ar uma magia.\")\n\nclass Arqueiro(Personagem):\n    def __init__(self, nome):\n        super().__init__(nome, \"Arqueiro\")\n\n    def atirar(self, inimigo):\n        dano = 12\n        inimigo.vida -= dano\n        print(f\"{self.nome} atirou uma flecha, causando {dano} de dano a {inimigo.nome}!\")\n</pre> class Personagem:     def __init__(self, nome, classe, vida=100, mana=50):         self.nome = nome         self.classe = classe         self.vida = vida         self.mana = mana      def atacar(self, inimigo):         dano = 10         inimigo.vida -= dano         print(f\"{self.nome} causou {dano} de dano a {inimigo.nome}!\")  class Mago(Personagem):     def __init__(self, nome):         super().__init__(nome, \"Mago\", mana=100)      def lan\u00e7ar_magia(self, inimigo):         if self.mana &gt;= 20:             dano = 15             self.mana -= 20             inimigo.vida -= dano             print(f\"{self.nome} lan\u00e7ou uma magia, causando {dano} de dano a {inimigo.nome}!\")         else:             print(f\"{self.nome} n\u00e3o tem mana suficiente para lan\u00e7ar uma magia.\")  class Arqueiro(Personagem):     def __init__(self, nome):         super().__init__(nome, \"Arqueiro\")      def atirar(self, inimigo):         dano = 12         inimigo.vida -= dano         print(f\"{self.nome} atirou uma flecha, causando {dano} de dano a {inimigo.nome}!\") In\u00a0[8]: Copied! <pre># Como usar\n\nmago = Mago(\"Gandalf\")\narqueiro = Arqueiro(\"Legolas\")\n\nmago.lan\u00e7ar_magia(inimigo)\narqueiro.atirar(inimigo)\n</pre> # Como usar  mago = Mago(\"Gandalf\") arqueiro = Arqueiro(\"Legolas\")  mago.lan\u00e7ar_magia(inimigo) arqueiro.atirar(inimigo) <pre>Gandalf lan\u00e7ou uma magia, causando 15 de dano a Minotauro!\nLegolas atirou uma flecha, causando 12 de dano a Minotauro!\n</pre> In\u00a0[9]: Copied! <pre>class Personagem:\n    def __init__(self, nome, classe, vida=100, mana=50):\n        self._nome = nome\n        self._classe = classe\n        self._vida = vida\n        self._mana = mana\n\n    def get_nome(self):\n        return self._nome\n\n    def get_classe(self):\n        return self._classe\n\n    def get_vida(self):\n        return self._vida\n\n    def set_vida(self, nova_vida):\n        if nova_vida &gt;= 0:\n            self._vida = nova_vida\n        else:\n            print(\"A vida n\u00e3o pode ser negativa.\")\n\n    def get_mana(self):\n        return self._mana\n\n    def set_mana(self, nova_mana):\n        if nova_mana &gt;= 0:\n            self._mana = nova_mana\n        else:\n            print(\"A mana n\u00e3o pode ser negativa.\")\n\n    def atacar(self, inimigo):\n        dano = 10\n        inimigo.set_vida(inimigo.get_vida() - dano)\n        print(f\"{self.get_nome()} causou {dano} de dano a {inimigo.get_nome()}!\")\n\n    def receber_dano(self, dano):\n        nova_vida = self.get_vida() - dano\n        self.set_vida(nova_vida)\n</pre> class Personagem:     def __init__(self, nome, classe, vida=100, mana=50):         self._nome = nome         self._classe = classe         self._vida = vida         self._mana = mana      def get_nome(self):         return self._nome      def get_classe(self):         return self._classe      def get_vida(self):         return self._vida      def set_vida(self, nova_vida):         if nova_vida &gt;= 0:             self._vida = nova_vida         else:             print(\"A vida n\u00e3o pode ser negativa.\")      def get_mana(self):         return self._mana      def set_mana(self, nova_mana):         if nova_mana &gt;= 0:             self._mana = nova_mana         else:             print(\"A mana n\u00e3o pode ser negativa.\")      def atacar(self, inimigo):         dano = 10         inimigo.set_vida(inimigo.get_vida() - dano)         print(f\"{self.get_nome()} causou {dano} de dano a {inimigo.get_nome()}!\")      def receber_dano(self, dano):         nova_vida = self.get_vida() - dano         self.set_vida(nova_vida) <p>Analisando as mudan\u00e7as:</p> <ul> <li>Atributos privados: Os atributos <code>_vida</code> e <code>_mana</code> agora s\u00e3o precedidos por um underscore, indicando que s\u00e3o privados e devem ser acessados apenas atrav\u00e9s dos m\u00e9todos getters e setters.</li> <li>M\u00e9todos getters e setters: Foram adicionados m\u00e9todos <code>get_vida</code>, <code>set_vida</code>, <code>get_mana</code> e <code>set_mana</code> para controlar o acesso aos atributos.</li> <li>Valida\u00e7\u00e3o: Os m\u00e9todos <code>set_vida</code> e <code>set_mana</code> verificam se o novo valor \u00e9 v\u00e1lido antes de atribu\u00ed-lo ao atributo.</li> <li>M\u00e9todo receber_dano: Foi criado um m\u00e9todo <code>receber_dano</code> para encapsular a l\u00f3gica de redu\u00e7\u00e3o da vida do personagem, utilizando os m\u00e9todos getters e setters.</li> </ul> <p>Vantagens do encapsulamento:</p> <ul> <li>Integridade dos dados: Evita que a vida ou a mana do personagem sejam definidas como valores negativos.</li> <li>Flexibilidade: Permite adicionar mais valida\u00e7\u00f5es ou l\u00f3gica aos m\u00e9todos getters e setters no futuro, sem afetar o c\u00f3digo que utiliza a classe.</li> <li>Manutenibilidade: Facilita a manuten\u00e7\u00e3o do c\u00f3digo, pois as regras de neg\u00f3cio est\u00e3o centralizadas nos m\u00e9todos getters e setters.</li> <li>Seguran\u00e7a: Protege os dados internos da classe de modifica\u00e7\u00f5es acidentais.</li> </ul> <p>Exemplo de uso:</p> In\u00a0[10]: Copied! <pre># Como usar\n\npersonagem = Personagem(\"Her\u00f3i\", \"Guerreiro\")\nprint(personagem.get_vida())  # Imprime: 100\n\n# Tentativa de modificar a vida diretamente (n\u00e3o recomendado)\n# personagem._vida = -10  # Isso causaria um erro\n\n# Forma correta de modificar a vida\npersonagem.set_vida(80)\nprint(personagem.get_vida())  # Imprime: 80\n</pre> # Como usar  personagem = Personagem(\"Her\u00f3i\", \"Guerreiro\") print(personagem.get_vida())  # Imprime: 100  # Tentativa de modificar a vida diretamente (n\u00e3o recomendado) # personagem._vida = -10  # Isso causaria um erro  # Forma correta de modificar a vida personagem.set_vida(80) print(personagem.get_vida())  # Imprime: 80 <pre>100\n80\n</pre> <p>Pr\u00f3ximos passos:</p> <ul> <li>Mais valida\u00e7\u00f5es: Adicione mais valida\u00e7\u00f5es aos m\u00e9todos getters e setters para garantir a consist\u00eancia dos dados.</li> <li>Eventos: Implemente um sistema de eventos para notificar quando a vida ou a mana de um personagem atingem um determinado valor.</li> <li>Propriedades: Explore o uso de propriedades em Python para tornar o acesso aos atributos mais intuitivo.</li> </ul> <p>Com o encapsulamento, voc\u00ea ter\u00e1 um c\u00f3digo mais robusto, seguro e f\u00e1cil de manter.</p>"},{"location":"modelagem/poo/ProceduralPoo/#comparando-aplicativos-procedural-vs-orientado-a-objetos","title":"Comparando Aplicativos: Procedural vs. Orientado a Objetos\u00b6","text":"<p>Entendendo os Paradigmas</p> <p>Antes de come\u00e7armos a criar os aplicativos, vamos entender brevemente a diferen\u00e7a entre programa\u00e7\u00e3o procedural e orientada a objetos:</p> <ul> <li>Programa\u00e7\u00e3o Procedural: Foca em uma sequ\u00eancia de passos para realizar uma tarefa. O c\u00f3digo \u00e9 organizado em fun\u00e7\u00f5es que realizam a\u00e7\u00f5es espec\u00edficas.</li> <li>Programa\u00e7\u00e3o Orientada a Objetos: Organiza o c\u00f3digo em objetos que representam entidades do mundo real. Cada objeto possui atributos (caracter\u00edsticas) e m\u00e9todos (a\u00e7\u00f5es).</li> </ul> <p>Exemplo: C\u00e1lculo de \u00c1rea de um Ret\u00e2ngulo</p> <p>Vamos criar um aplicativo simples que calcula a \u00e1rea de um ret\u00e2ngulo usando ambos os paradigmas.</p>"},{"location":"modelagem/poo/ProceduralPoo/#vamos-criar-um-exemplo-mais-complexo-simulando-um-jogo-de-rpg-simples","title":"Vamos criar um exemplo mais complexo: Simulando um jogo de RPG simples\u00b6","text":"<p>Contexto:</p> <p>Imagine que queremos criar um jogo de RPG b\u00e1sico, onde o jogador possui um personagem com atributos como nome, classe, pontos de vida e mana. O personagem pode atacar, defender e usar habilidades.</p>"},{"location":"modelagem/poo/ProceduralPoo/#protegendo-os-atributos-da-classe-personagem","title":"Protegendo os Atributos da Classe Personagem\u00b6","text":"<p>A prote\u00e7\u00e3o dos atributos \u00e9 fundamental para garantir a integridade dos dados e evitar comportamentos inesperados em nossos programas.</p> <p>Como aplicar o encapsulamento na classe Personagem:</p> <p>Vamos adaptar o c\u00f3digo da classe Personagem para proteger os atributos <code>vida</code> e <code>mana</code>, permitindo apenas modifica\u00e7\u00f5es atrav\u00e9s dos m\u00e9todos <code>set_vida</code> e <code>set_mana</code>. Isso nos dar\u00e1 controle sobre como esses valores s\u00e3o alterados, evitando que sejam atribu\u00eddos valores inv\u00e1lidos ou inconsistentes.</p>"},{"location":"modelagem/poo/kyvi/","title":"Kyvi","text":"In\u00a0[1]: Copied! <pre>from kivy.app import App\nfrom kivy.uix.boxlayout import BoxLayout\nfrom kivy.uix.label import Label\nfrom kivy.uix.textinput import TextInput\nfrom kivy.uix.button import Button\n</pre> from kivy.app import App from kivy.uix.boxlayout import BoxLayout from kivy.uix.label import Label from kivy.uix.textinput import TextInput from kivy.uix.button import Button <pre>\n---------------------------------------------------------------------------\nModuleNotFoundError                       Traceback (most recent call last)\nCell In[1], line 1\n----&gt; 1 from kivy.app import App\n      2 from kivy.uix.boxlayout import BoxLayout\n      3 from kivy.uix.label import Label\n\nModuleNotFoundError: No module named 'kivy'</pre> In\u00a0[2]: Copied! <pre>class Retangulo:\n    def __init__(self, base, altura):\n        self.base = base\n        self.altura = altura\n\n    def calcular_area(self):\n        return self.base * self.altura\n</pre> class Retangulo:     def __init__(self, base, altura):         self.base = base         self.altura = altura      def calcular_area(self):         return self.base * self.altura In\u00a0[3]: Copied! <pre>class CalculadoraAreaApp(App):\n    def build(self):\n        layout = BoxLayout(orientation='vertical')\n        self.base_input = TextInput(multiline=False)\n        self.altura_input = TextInput(multiline=False)\n        self.resultado_label = Label(text='Resultado:')\n        calcular_button = Button(text='Calcular')\n        calcular_button.bind(on_press=self.calcular_area)\n        layout.add_widget(self.base_input)\n        layout.add_widget(self.altura_input)\n        layout.add_widget(calcular_button)\n        layout.add_widget(self.resultado_label)\n        return layout\n\n    def calcular_area(self, instance):\n        try:\n            base = float(self.base_input.text)\n            altura = float(self.altura_input.text)\n            retangulo = Retangulo(base, altura)\n            resultado = retangulo.calcular_area()\n            self.resultado_label.text = f'A \u00e1rea \u00e9: {resultado}'\n        except ValueError:\n            self.resultado_label.text = 'Digite valores num\u00e9ricos.'\n</pre> class CalculadoraAreaApp(App):     def build(self):         layout = BoxLayout(orientation='vertical')         self.base_input = TextInput(multiline=False)         self.altura_input = TextInput(multiline=False)         self.resultado_label = Label(text='Resultado:')         calcular_button = Button(text='Calcular')         calcular_button.bind(on_press=self.calcular_area)         layout.add_widget(self.base_input)         layout.add_widget(self.altura_input)         layout.add_widget(calcular_button)         layout.add_widget(self.resultado_label)         return layout      def calcular_area(self, instance):         try:             base = float(self.base_input.text)             altura = float(self.altura_input.text)             retangulo = Retangulo(base, altura)             resultado = retangulo.calcular_area()             self.resultado_label.text = f'A \u00e1rea \u00e9: {resultado}'         except ValueError:             self.resultado_label.text = 'Digite valores num\u00e9ricos.' <pre>\n---------------------------------------------------------------------------\nNameError                                 Traceback (most recent call last)\nCell In[3], line 1\n----&gt; 1 class CalculadoraAreaApp(App):\n      2     def build(self):\n      3         layout = BoxLayout(orientation='vertical')\n\nNameError: name 'App' is not defined</pre> In\u00a0[4]: Copied! <pre>if __name__ == '__main__':\n    CalculadoraAreaApp().run()\n</pre> if __name__ == '__main__':     CalculadoraAreaApp().run() <pre>\n---------------------------------------------------------------------------\nNameError                                 Traceback (most recent call last)\nCell In[4], line 2\n      1 if __name__ == '__main__':\n----&gt; 2     CalculadoraAreaApp().run()\n\nNameError: name 'CalculadoraAreaApp' is not defined</pre>"},{"location":"modelagem/poo/poo/","title":"Poo","text":"In\u00a0[1]: Copied! <pre>class Employee:\n    def __init__(self, name, age):\n        self.name =  name\n        self.age = age\n</pre> class Employee:     def __init__(self, name, age):         self.name =  name         self.age = age In\u00a0[2]: Copied! <pre>emp = Employee('teste', 32)\n</pre> emp = Employee('teste', 32) In\u00a0[3]: Copied! <pre>emp\n</pre> emp Out[3]: <pre>&lt;__main__.Employee at 0x1b03da5dd50&gt;</pre> In\u00a0[4]: Copied! <pre>emp.name\nemp.age\n</pre> emp.name emp.age Out[4]: <pre>32</pre> In\u00a0[5]: Copied! <pre>kirk = [\"James Kirk\", 34, \"Captain\", 2265]\nspock = [\"Spock\", 35, \"Science Officer\", 2254]\nmccoy = [\"Leonard McCoy\", \"Chief Medical Officer\", 2266]\n</pre> kirk = [\"James Kirk\", 34, \"Captain\", 2265] spock = [\"Spock\", 35, \"Science Officer\", 2254] mccoy = [\"Leonard McCoy\", \"Chief Medical Officer\", 2266] <p>Existem v\u00e1rios problemas com essa abordagem.</p> <p>Primeiro, pode dificultar o gerenciamento de arquivos de c\u00f3digo maiores. Se voc\u00ea fizer refer\u00eancia kirk[0], a v\u00e1rias linhas de onde declarou a kirklista, voc\u00ea lembrar\u00e1 que o elemento com \u00edndice 0 \u00e9 o nome do funcion\u00e1rio?</p> <p>Em segundo lugar, pode introduzir erros se os funcion\u00e1rios n\u00e3o tiverem o mesmo n\u00famero de elementos nas respectivas listas. Na mccoylista acima, a idade est\u00e1 faltando, ent\u00e3o mccoy[1]retornar\u00e1 \"Chief Medical Officer\"em vez da idade do Dr. McCoy .</p> <p>Uma \u00f3tima maneira de tornar esse tipo de c\u00f3digo mais gerenci\u00e1vel e de f\u00e1cil manuten\u00e7\u00e3o \u00e9 usar classes .</p> In\u00a0[6]: Copied! <pre># dog.py\n\nclass Dog:\n    pass\n</pre> # dog.py  class Dog:     pass <p>O corpo da classe Dog consiste em uma \u00fanica instru\u00e7\u00e3o: a palavra-chave pass. Os programadores Python costumam usar o pass como um espa\u00e7o reservado para indicar para onde o c\u00f3digo ir\u00e1 eventualmente. Ele permite que voc\u00ea execute este c\u00f3digo sem que o Python gere um erro.</p> <p>Nota: Os nomes das classes Python s\u00e3o escritos em nota\u00e7\u00e3o CapitalizedWords por conven\u00e7\u00e3o. Por exemplo, uma classe para uma ra\u00e7a espec\u00edfica de cachorro, como o Jack Russell Terrier, seria escrita como JackRussellTerrier.</p> <p>A classe Dog n\u00e3o \u00e9 muito interessante no momento, ent\u00e3o voc\u00ea vai enfeit\u00e1-la um pouco definindo algumas propriedades que todos Dogs objetos deveriam ter. Existem v\u00e1rias propriedades que voc\u00ea pode escolher, incluindo nome, idade, cor da pelagem e ra\u00e7a. Para manter o escopo do exemplo pequeno, voc\u00ea usar\u00e1 apenas nome e idade.</p> <p>Voc\u00ea define as propriedades que todos os objetos Dog devem ter em um m\u00e9todo chamado .init(). Cada vez que voc\u00ea cria um novo objeto Dog, define o estado inicial do objeto .init() atribuindo os valores das propriedades do objeto. Ou seja, inicializa cada nova inst\u00e2ncia da classe. .init()</p> <p>Voc\u00ea pode fornecer .init() qualquer n\u00famero de par\u00e2metros, mas o primeiro par\u00e2metro sempre ser\u00e1 uma vari\u00e1vel chamada self. Quando voc\u00ea cria uma nova inst\u00e2ncia de classe, o Python passa automaticamente a inst\u00e2ncia para o par\u00e2metro self no .init() para que o Python possa definir os novos atributos no objeto.</p> <p>Atualize a classe Dog com um m\u00e9todo .init() que cria .name e .age:</p> In\u00a0[7]: Copied! <pre># dog.py\nclass Dog:\n    def __init__(self, name, age):\n        self.name = name\n        self.age = age\n</pre> # dog.py class Dog:     def __init__(self, name, age):         self.name = name         self.age = age <p>Certifique-se de recuar a assinatura .init() do m\u00e9todo em quatro espa\u00e7os e o corpo do m\u00e9todo em oito espa\u00e7os. Este recuo \u00e9 de vital import\u00e2ncia. Diz ao Python que o m\u00e9todo .init() pertence \u00e0 classe Dog.</p> <p>No corpo de .init(), existem duas instru\u00e7\u00f5es usando a vari\u00e1vel self:</p> <pre><code>self.name = name - cria um atributo chamado name e atribui o valor do par\u00e2metro name a ele.\nself.age = age - cria um atributo chamado age e atribui o valor do par\u00e2metro age a ele.</code></pre> <p>Os atributos criados em .init() s\u00e3o chamados de atributos de inst\u00e2ncia. O valor de um atributo de inst\u00e2ncia \u00e9 espec\u00edfico para uma inst\u00e2ncia espec\u00edfica da classe. Todos os objetos Dog t\u00eam um nome e uma idade, mas os valores dos atributos name e age variam dependendo da inst\u00e2ncia Dog.</p> <p>Por outro lado, atributos de classe s\u00e3o atributos que possuem o mesmo valor para todas as inst\u00e2ncias de classe. Voc\u00ea pode definir um atributo de classe atribuindo um valor a um nome de vari\u00e1vel fora de .init().</p> <p>Por exemplo, a classe Dog a seguir possui um atributo de classe chamado species com o valor \"Canis familiaris\":</p> In\u00a0[8]: Copied! <pre># dog.py\n\nclass Dog:\n    species = \"Canis familiaris\"\n\n    def __init__(self, name, age):\n        self.name = name\n        self.age = age\n</pre> # dog.py  class Dog:     species = \"Canis familiaris\"      def __init__(self, name, age):         self.name = name         self.age = age <p>Voc\u00ea define os atributos da classe diretamente abaixo da primeira linha do nome da classe e os recua com quatro espa\u00e7os. Voc\u00ea sempre precisa atribuir a eles um valor inicial. Quando voc\u00ea cria uma inst\u00e2ncia da classe, o Python cria e atribui automaticamente atributos de classe aos seus valores iniciais.</p> <p>Use atributos de classe para definir propriedades que devem ter o mesmo valor para cada inst\u00e2ncia de classe. Use atributos de inst\u00e2ncia para propriedades que variam de uma inst\u00e2ncia para outra.</p> <p>Agora que voc\u00ea tem Dogaula, \u00e9 hora de criar alguns cachorros!</p> In\u00a0[9]: Copied! <pre>class Dog:\n    pass\n\nDog() # Execute\n</pre> class Dog:     pass  Dog() # Execute Out[9]: <pre>&lt;__main__.Dog at 0x1b03da5c880&gt;</pre> <p>Primeiro voc\u00ea cria uma nova classe Dog sem atributos ou m\u00e9todos e, em seguida, instancia a classe Dog para criar um objeto Dog.</p> <p>Na sa\u00edda acima, voc\u00ea pode ver que agora tem um novo objeto Dog em 0x106702d30. Essa sequ\u00eancia engra\u00e7ada de letras e n\u00fameros \u00e9 um endere\u00e7o de mem\u00f3ria que indica onde o Python armazena o objeto Dog na mem\u00f3ria do seu computador. Observe que o endere\u00e7o na sua tela ser\u00e1 diferente.</p> <p>Agora instancie a classe Dog uma segunda vez para criar outro objeto Dog:</p> In\u00a0[10]: Copied! <pre>Dog() #execute\n</pre> Dog() #execute  Out[10]: <pre>&lt;__main__.Dog at 0x1b03da5ccd0&gt;</pre> <p>A nova inst\u00e2ncia Dog est\u00e1 localizada em um endere\u00e7o de mem\u00f3ria diferente. Isso ocorre porque \u00e9 uma inst\u00e2ncia totalmente nova e completamente exclusiva do primeiro Dogobjeto que voc\u00ea criou.</p> <p>Para ver isso de outra maneira, digite o seguinte:</p> In\u00a0[11]: Copied! <pre>a = Dog()\nprint(a)\nb = Dog()\nprint(b)\na == b # Execute\n</pre> a = Dog() print(a) b = Dog() print(b) a == b # Execute  <pre>&lt;__main__.Dog object at 0x000001B03DA5C340&gt;\n&lt;__main__.Dog object at 0x000001B03DA5C940&gt;\n</pre> Out[11]: <pre>False</pre> <p>Neste c\u00f3digo, voc\u00ea cria dois novos objetos Dog e os atribui \u00e0s vari\u00e1veis a \u200b\u200be b. Quando voc\u00ea compara a e b com o operador ==, o resultado \u00e9 False. Embora a e b sejam inst\u00e2ncias da classe Dog, eles representam dois objetos distintos na mem\u00f3ria.</p> In\u00a0[12]: Copied! <pre>class Dog:\n    species = \"Canis familiaris\"\n    def __init__(self, name, age):\n        self.name = name\n        self.age = age\n</pre> class Dog:     species = \"Canis familiaris\"     def __init__(self, name, age):         self.name = name         self.age = age <p>Para instanciar esta Classe Dog, voc\u00ea precisa fornecer valores para name e age. Caso contr\u00e1rio, o Python gera um TypeError:</p> In\u00a0[13]: Copied! <pre>rex = Dog('rex', 5) # Execute\n\nrex.name\n</pre> rex = Dog('rex', 5) # Execute  rex.name Out[13]: <pre>'rex'</pre> <p>Para passar argumentos para os par\u00e2metros name e age, coloque os valores entre par\u00eanteses ap\u00f3s o nome da classe:</p> In\u00a0[14]: Copied! <pre>miles = Dog(\"Miles\", 4)\nbuddy = Dog(\"Buddy\", 9)\ntype(buddy)\n</pre> miles = Dog(\"Miles\", 4) buddy = Dog(\"Buddy\", 9) type(buddy) Out[14]: <pre>__main__.Dog</pre> <p>Isso cria duas novas inst\u00e2ncias Dog \u2013 uma para um cachorro de quatro anos chamado Miles e outra para um cachorro de nove anos chamado Buddy.</p> <p>O m\u00e9todo .init() da classe Dog tem tr\u00eas par\u00e2metros, ent\u00e3o por que voc\u00ea est\u00e1 passando apenas dois argumentos para ele no exemplo?</p> <p>Quando voc\u00ea instancia a classe Dog, o Python cria uma nova inst\u00e2ncia de Dog e a passa para o primeiro par\u00e2metro de .init(). Isso essencialmente remove o par\u00e2metro self, ent\u00e3o voc\u00ea s\u00f3 precisa se preocupar com os par\u00e2metros name e age.</p> <p>Nota: Nos bastidores, o Python cria e inicializa um novo objeto quando voc\u00ea usa esta sintaxe.</p> <p>Depois de criar as inst\u00e2ncias Dog, voc\u00ea poder\u00e1 acessar seus atributos de inst\u00e2ncia usando a nota\u00e7\u00e3o de ponto:</p> In\u00a0[15]: Copied! <pre>print(miles.name)\nprint(miles.age)\n\nprint(buddy.name)\nprint(buddy.age)\n</pre> print(miles.name) print(miles.age)  print(buddy.name) print(buddy.age) <pre>Miles\n4\nBuddy\n9\n</pre> <p>Voc\u00ea pode acessar atributos de classe da mesma maneira:</p> In\u00a0[16]: Copied! <pre>buddy.species\n</pre> buddy.species Out[16]: <pre>'Canis familiaris'</pre> <p>Uma das maiores vantagens de usar classes para organizar dados \u00e9 que as inst\u00e2ncias t\u00eam a garantia de ter os atributos esperados. Todas as inst\u00e2ncias Dog possuem atributos .species, .name, e .age, portanto voc\u00ea pode usar esses atributos com confian\u00e7a, sabendo que eles sempre retornar\u00e3o um valor.</p> <p>Embora seja garantido que os atributos existam, seus valores podem mudar dinamicamente:</p> In\u00a0[17]: Copied! <pre>buddy.age = 10\nprint(buddy.age)\n\nmiles.species = \"Felis silvestris\"\nprint(miles.species)\n</pre> buddy.age = 10 print(buddy.age)  miles.species = \"Felis silvestris\" print(miles.species) <pre>10\nFelis silvestris\n</pre> <p>Neste exemplo, voc\u00ea altera o atributo .age do objeto buddy para 10. Ent\u00e3o voc\u00ea altera o atributo .species do objeto miles para \"Felis silvestris\", que \u00e9 uma esp\u00e9cie de gato. Isso faz de Miles um cachorro muito estranho, mas \u00e9 um Python v\u00e1lido!</p> <p>A principal conclus\u00e3o aqui \u00e9 que os objetos personalizados s\u00e3o mut\u00e1veis \u200b\u200bpor padr\u00e3o. Um objeto \u00e9 mut\u00e1vel se voc\u00ea puder alter\u00e1-lo dinamicamente. Por exemplo, listas e dicion\u00e1rios s\u00e3o mut\u00e1veis, mas strings e tuplas s\u00e3o imut\u00e1veis .</p> In\u00a0[18]: Copied! <pre># dog.py\n\nclass Dog:\n    species = \"Canis familiaris\"\n\n    def __init__(self, name, age):\n        self.name = name\n        self.age = age\n\n    # Instance method\n    def description(self):\n        return f\"{self.name} is {self.age} years old\"\n\n    # Another instance method\n    def speak(self, sound):\n        return f\"{self.name} says {sound}\"\n</pre> # dog.py  class Dog:     species = \"Canis familiaris\"      def __init__(self, name, age):         self.name = name         self.age = age      # Instance method     def description(self):         return f\"{self.name} is {self.age} years old\"      # Another instance method     def speak(self, sound):         return f\"{self.name} says {sound}\" In\u00a0[\u00a0]: Copied! <pre>\n</pre> <p>Esta classe Dog possui dois m\u00e9todos de inst\u00e2ncia:</p> <pre><code>.description() - retorna uma string exibindo o nome e a idade do cachorro.\n.speak() - tem um par\u00e2metro chamado sounde retorna uma string contendo o nome do cachorro e o som que o cachorro faz.</code></pre> <p>Salve a classe Dog modificada em um arquivo chamado dog.py e pressione F5 para executar o programa. Em seguida, abra a janela interativa e digite o seguinte para ver seus m\u00e9todos de inst\u00e2ncia em a\u00e7\u00e3o:</p> In\u00a0[19]: Copied! <pre>miles = Dog(\"Miles\", 4)\n</pre> miles = Dog(\"Miles\", 4) In\u00a0[20]: Copied! <pre>miles.description()\n</pre> miles.description() Out[20]: <pre>'Miles is 4 years old'</pre> In\u00a0[21]: Copied! <pre>miles.speak(\"Woof Woof\")\n</pre> miles.speak(\"Woof Woof\") Out[21]: <pre>'Miles says Woof Woof'</pre> In\u00a0[22]: Copied! <pre>miles.speak(\"Bow Wow\")\n</pre> miles.speak(\"Bow Wow\") Out[22]: <pre>'Miles says Bow Wow'</pre> <p>Na classe Dog acima, .description() retorna uma string contendo informa\u00e7\u00f5es sobre a inst\u00e2ncia Dog miles. Ao escrever suas pr\u00f3prias classes, \u00e9 uma boa ideia ter um m\u00e9todo que retorne uma string contendo informa\u00e7\u00f5es \u00fateis sobre uma inst\u00e2ncia da classe. No entanto, .description() n\u00e3o \u00e9 a maneira mais pit\u00f4nica de fazer isso.</p> <p>Ao criar um objeto list, voc\u00ea pode usar print() para exibir uma string semelhante \u00e0 lista:</p> In\u00a0[23]: Copied! <pre>names = [\"Miles\", \"Buddy\", \"Jack\"]\nprint(names)\n</pre> names = [\"Miles\", \"Buddy\", \"Jack\"] print(names) <pre>['Miles', 'Buddy', 'Jack']\n</pre> <p>V\u00e1 em frente e imprima o objeto miles para ver qual sa\u00edda voc\u00ea obt\u00e9m:</p> In\u00a0[24]: Copied! <pre>print(miles)\n</pre> print(miles) <pre>&lt;__main__.Dog object at 0x000001B03DA5C6D0&gt;\n</pre> <p>Ao imprimir miles, voc\u00ea recebe uma mensagem de apar\u00eancia enigm\u00e1tica informando que miles \u00e9 um objeto Dog no endere\u00e7o de mem\u00f3ria 0x00aeff70. Esta mensagem n\u00e3o \u00e9 muito \u00fatil. Voc\u00ea pode alterar o que \u00e9 impresso definindo um m\u00e9todo de inst\u00e2ncia especial chamado .str().</p> <p>Na janela do editor, altere o nome do m\u00e9todo .description() da classe Dog  para .str():</p> In\u00a0[25]: Copied! <pre># dog.py\n\nclass Dog:\n    species = \"Canis familiaris\"\n\n    def __init__(self, name, age):\n        self.name = name\n        self.age = age\n\n    # Instance method\n    def description(self):\n        return f\"{self.name} is {self.age} years old\"\n\n    # Another instance method\n    def speak(self, sound):\n        return f\"{self.name} says {sound}\"\n\n    def __str__(self):\n        return f\"{self.name} is {self.age} years old\"\n</pre> # dog.py  class Dog:     species = \"Canis familiaris\"      def __init__(self, name, age):         self.name = name         self.age = age      # Instance method     def description(self):         return f\"{self.name} is {self.age} years old\"      # Another instance method     def speak(self, sound):         return f\"{self.name} says {sound}\"      def __str__(self):         return f\"{self.name} is {self.age} years old\" <p>Agora, ao imprimir miles, voc\u00ea obt\u00e9m uma sa\u00edda muito mais amig\u00e1vel:</p> In\u00a0[26]: Copied! <pre>miles = Dog(\"Miles\", 4)\nprint(miles)\n</pre> miles = Dog(\"Miles\", 4) print(miles) <pre>Miles is 4 years old\n</pre> <p>M\u00e9todos como .init() e .str() s\u00e3o chamados de m\u00e9todos m\u00e1gicos porque come\u00e7am e terminam com sublinhados duplos. Existem muitos m\u00e9todos m\u00e1gicos que voc\u00ea pode usar para personalizar classes em Python. Compreender os m\u00e9todos m\u00e1gicos \u00e9 uma parte importante do dom\u00ednio da programa\u00e7\u00e3o orientada a objetos em Python, mas para sua primeira explora\u00e7\u00e3o do t\u00f3pico, voc\u00ea se limitar\u00e1 a esses dois m\u00e9todos m\u00e1gicos.</p> <p>Nota: Confira Quando voc\u00ea deve usar .repr() vs .str() em Python? Para saber mais sobre .str() e seu primo .repr().</p> <p>Se quiser refor\u00e7ar seu entendimento com um exerc\u00edcio pr\u00e1tico, ent\u00e3o voc\u00ea pode clicar no bloco abaixo e trabalhar na resolu\u00e7\u00e3o do desafio:</p> <p>Quando terminar sua pr\u00f3pria implementa\u00e7\u00e3o do desafio, voc\u00ea poder\u00e1 expandir o bloco abaixo para ver uma poss\u00edvel solu\u00e7\u00e3o:</p> <p>Quando estiver pronto, voc\u00ea pode passar para a pr\u00f3xima se\u00e7\u00e3o. L\u00e1, voc\u00ea ver\u00e1 como levar seu conhecimento um passo adiante e criar classes a partir de outras classes.</p> In\u00a0[27]: Copied! <pre>class Car:\n    def __init__(self, color, mileage):\n        self.color = color\n        self.mileage = mileage\n    def __str__(self):\n        return f\"The {self.color} car has {self.mileage:,} miles\"\n</pre> class Car:     def __init__(self, color, mileage):         self.color = color         self.mileage = mileage     def __str__(self):         return f\"The {self.color} car has {self.mileage:,} miles\" In\u00a0[28]: Copied! <pre>ferrari = Car('red', 1000)\nprint(ferrari)\n</pre> ferrari = Car('red', 1000) print(ferrari) <pre>The red car has 1,000 miles\n</pre> <p>Os par\u00e2metros color e mileage s\u00e3o atribu\u00eddos, o que cria os dois atributos de inst\u00e2ncia.</p> <p>mileage.init() self.color self.mileage</p> <p>O m\u00e9todo .str() interpola ambos os atributos da inst\u00e2ncia em uma string f e usa o :, especificador de formato para imprimir a quilometragem agrupada por milhares e separada por v\u00edrgula.</p> <p>Agora voc\u00ea pode criar as duas inst\u00e2ncias Car:</p> In\u00a0[29]: Copied! <pre>blue_car = Car(color=\"blue\", mileage=20_000)\nred_car = Car(color=\"red\", mileage=30_000)\n</pre> blue_car = Car(color=\"blue\", mileage=20_000) red_car = Car(color=\"red\", mileage=30_000) In\u00a0[30]: Copied! <pre>print(blue_car)\n</pre> print(blue_car) <pre>The blue car has 20,000 miles\n</pre> <p>Voc\u00ea cria a inst\u00e2ncia blue_car passando o valor \"blue\" para o par\u00e2metro color e 20_000 para o par\u00e2metro mileage. Da mesma forma, voc\u00ea cria red_car com os valores \"red\" e 30_000.</p> <p>Para imprimir a cor e a quilometragem de cada objeto Car, voc\u00ea pode fazer um loop sobre um objeto tuple que cont\u00e9m os dois objetos e imprimir cada objeto:</p> <pre><code>The blue car has 20,000 miles\nThe red car has 30,000 miles</code></pre> <p>Como voc\u00ea definiu sua representa\u00e7\u00e3o de string em .str(), imprimir os objetos fornece a sa\u00edda de texto desejada.</p> In\u00a0[31]: Copied! <pre>for car in (blue_car, red_car):\n    print(car)\n</pre> for car in (blue_car, red_car):     print(car) <pre>The blue car has 20,000 miles\nThe red car has 30,000 miles\n</pre> In\u00a0[32]: Copied! <pre># inheritance.py\n\nclass Parent:\n    hair_color = \"brown\"\n\nclass Child(Parent):\n    pass\n</pre> # inheritance.py  class Parent:     hair_color = \"brown\"  class Child(Parent):     pass In\u00a0[33]: Copied! <pre>joe = Child()\njoe.hair_color\n</pre> joe = Child() joe.hair_color Out[33]: <pre>'brown'</pre> <p>Neste exemplo m\u00ednimo, a classe filha Child herda da classe pai Parent. Como as classes filhas assumem os atributos e m\u00e9todos das classes pai, Child.hair_color tamb\u00e9m \u00e9 \"brown\" sem que voc\u00ea defina isso explicitamente.</p> <p>As classes filhas podem substituir ou estender os atributos e m\u00e9todos das classes pai. Em outras palavras, as classes filhas herdam todos os atributos e m\u00e9todos dos pais, mas tamb\u00e9m podem especificar atributos e m\u00e9todos que s\u00e3o exclusivos delas mesmas.</p> <p>Embora a analogia n\u00e3o seja perfeita, voc\u00ea pode pensar na heran\u00e7a de objetos como uma esp\u00e9cie de heran\u00e7a gen\u00e9tica.</p> <p>Voc\u00ea pode ter herdado a cor do cabelo de seus pais. \u00c9 um atributo com o qual voc\u00ea nasceu. Mas talvez voc\u00ea decida pintar seu cabelo de roxo. Supondo que seus pais n\u00e3o tenham cabelo roxo, voc\u00ea acabou de substituir o atributo de cor do cabelo que herdou de seus pais:</p> In\u00a0[34]: Copied! <pre># inheritance.py\n\nclass Parent:\n    hair_color = \"brown\"\n\nclass Child(Parent):\n    hair_color = \"purple\"\n</pre> # inheritance.py  class Parent:     hair_color = \"brown\"  class Child(Parent):     hair_color = \"purple\" In\u00a0[35]: Copied! <pre>ann = Child()\nann.hair_color\n</pre> ann = Child() ann.hair_color Out[35]: <pre>'purple'</pre> <p>Se voc\u00ea alterar o exemplo de c\u00f3digo assim, Child.hair_color ser\u00e1 \"purple\".</p> <p>Voc\u00ea tamb\u00e9m herda, de certa forma, a sua l\u00edngua dos seus pais. Se seus pais falam ingl\u00eas, voc\u00ea tamb\u00e9m falar\u00e1 ingl\u00eas. Agora imagine que voc\u00ea decide aprender um segundo idioma, como o alem\u00e3o. Nesse caso, voc\u00ea estendeu seus atributos porque adicionou um atributo que seus pais n\u00e3o possuem:</p> In\u00a0[36]: Copied! <pre># inheritance.py\nclass Parent:\n    speaks = [\"English\"]\n\nclass Child(Parent):\n    def __init__(self):\n        super().__init__()\n        self.speaks.append(\"German\")\n</pre> # inheritance.py class Parent:     speaks = [\"English\"]  class Child(Parent):     def __init__(self):         super().__init__()         self.speaks.append(\"German\") In\u00a0[37]: Copied! <pre>mary = Child()\nmary.speaks\n</pre> mary = Child() mary.speaks Out[37]: <pre>['English', 'German']</pre> <p>Voc\u00ea aprender\u00e1 mais sobre como o c\u00f3digo acima funciona nas se\u00e7\u00f5es abaixo. Mas antes de se aprofundar na heran\u00e7a em Python, voc\u00ea far\u00e1 uma caminhada at\u00e9 um parque para c\u00e3es para entender melhor por que pode querer usar heran\u00e7a em seu pr\u00f3prio c\u00f3digo. Exemplo: Parque para Cachorros</p> <p>Finja por um momento que voc\u00ea est\u00e1 em um parque para c\u00e3es. Existem muitos c\u00e3es de ra\u00e7as diferentes no parque, todos engajados em v\u00e1rios comportamentos caninos.</p> <p>Suponha agora que voc\u00ea deseja modelar o parque para c\u00e3es com classes Python. A classe Dog que voc\u00ea escreveu na se\u00e7\u00e3o anterior pode distinguir c\u00e3es por nome e idade, mas n\u00e3o por ra\u00e7a.</p> <p>Voc\u00ea poderia modificar a classe Dog na janela do editor adicionando um atributo .breed:</p> In\u00a0[38]: Copied! <pre># dog.py\n\nclass Dog:\n    species = \"Canis familiaris\"\n\n    def __init__(self, name, age, breed):\n        self.name = name\n        self.age = age\n        self.breed = breed\n\n    def __str__(self):\n        return f\"{self.name} is {self.age} years old\"\n\n    def speak(self, sound):\n        return f\"{self.name} says {sound}\"\n</pre> # dog.py  class Dog:     species = \"Canis familiaris\"      def __init__(self, name, age, breed):         self.name = name         self.age = age         self.breed = breed      def __str__(self):         return f\"{self.name} is {self.age} years old\"      def speak(self, sound):         return f\"{self.name} says {sound}\" <p>Agora voc\u00ea pode modelar o parque para c\u00e3es criando v\u00e1rios c\u00e3es diferentes na janela interativa:</p> In\u00a0[39]: Copied! <pre>miles = Dog(\"Miles\", 4, \"Jack Russell Terrier\")\nbuddy = Dog(\"Buddy\", 9, \"Dachshund\")\njack = Dog(\"Jack\", 3, \"Bulldog\")\njim = Dog(\"Jim\", 5, \"Bulldog\")\n</pre> miles = Dog(\"Miles\", 4, \"Jack Russell Terrier\") buddy = Dog(\"Buddy\", 9, \"Dachshund\") jack = Dog(\"Jack\", 3, \"Bulldog\") jim = Dog(\"Jim\", 5, \"Bulldog\") <p>Cada ra\u00e7a de cachorro tem comportamentos ligeiramente diferentes. Por exemplo, os buldogues t\u00eam um latido baixo, mas os bass\u00eas t\u00eam um latido mais agudo.</p> <p>Usando apenas a classe Dog, voc\u00ea deve fornecer uma string para o argumento sound .speak() toda vez que voc\u00ea a chamar em uma inst\u00e2ncia Dog:</p> In\u00a0[40]: Copied! <pre>buddy.speak(\"Yap\")\n</pre> buddy.speak(\"Yap\") Out[40]: <pre>'Buddy says Yap'</pre> In\u00a0[41]: Copied! <pre>jim.speak(\"Woof\")\n</pre> jim.speak(\"Woof\") Out[41]: <pre>'Jim says Woof'</pre> In\u00a0[42]: Copied! <pre>jack.speak(\"Woof\")\n</pre> jack.speak(\"Woof\") Out[42]: <pre>'Jack says Woof'</pre> <p>Passar uma string para cada chamada .speak() \u00e9 repetitivo e inconveniente. Al\u00e9m disso, o atributo .breed deve determinar a string que representa o som que cada inst\u00e2ncia Dog emite, mas aqui voc\u00ea deve passar manualmente a string correta .speak() sempre que cham\u00e1-la.</p> <p>Voc\u00ea pode simplificar a experi\u00eancia de trabalhar com a class Dog criando uma turma filha para cada ra\u00e7a de cachorro. Isso permite estender a funcionalidade que cada classe filha herda, incluindo a especifica\u00e7\u00e3o de um argumento padr\u00e3o para .speak().</p> In\u00a0[43]: Copied! <pre># dog.py\n\nclass Dog:\n    species = \"Canis familiaris\"\n\n    def __init__(self, name, age):\n        self.name = name\n        self.age = age\n\n    def __str__(self):\n        return f\"{self.name} is {self.age} years old\"\n\n    def speak(self, sound):\n        return f\"{self.name} says {sound}\"\n</pre> # dog.py  class Dog:     species = \"Canis familiaris\"      def __init__(self, name, age):         self.name = name         self.age = age      def __str__(self):         return f\"{self.name} is {self.age} years old\"      def speak(self, sound):         return f\"{self.name} says {sound}\" <p>Depois de fazer o exemplo do parque para c\u00e3es na se\u00e7\u00e3o anterior, voc\u00ea removeu .breed novamente. Agora voc\u00ea escrever\u00e1 c\u00f3digo para monitorar a ra\u00e7a de um cachorro usando classes filhas.</p> <p>Para criar uma classe filha, voc\u00ea cria uma nova classe com seu pr\u00f3prio nome e depois coloca o nome da classe pai entre par\u00eanteses. Adicione o seguinte ao arquivo dog.py para criar tr\u00eas novas classes filhas da classe Dog:</p> In\u00a0[44]: Copied! <pre># dog.py\n\n# ...\nclass JackRussellTerrier(Dog):\n    pass\n\nclass Dachshund(Dog):\n    pass\n\nclass Bulldog(Dog):\n    pass\n</pre> # dog.py  # ... class JackRussellTerrier(Dog):     pass  class Dachshund(Dog):     pass  class Bulldog(Dog):     pass <p>Com as classes filhas definidas, agora voc\u00ea pode criar alguns c\u00e3es de ra\u00e7as espec\u00edficas na janela interativa:</p> In\u00a0[45]: Copied! <pre>miles = JackRussellTerrier(\"Miles\", 4)\nbuddy = Dachshund(\"Buddy\", 9)\njack = Bulldog(\"Jack\", 3)\njim = Bulldog(\"Jim\", 5)\n</pre> miles = JackRussellTerrier(\"Miles\", 4) buddy = Dachshund(\"Buddy\", 9) jack = Bulldog(\"Jack\", 3) jim = Bulldog(\"Jim\", 5) <p>As inst\u00e2ncias das classes filhas herdam todos os atributos e m\u00e9todos da classe pai:</p> In\u00a0[46]: Copied! <pre>miles.species\n</pre> miles.species Out[46]: <pre>'Canis familiaris'</pre> In\u00a0[47]: Copied! <pre>buddy.name\n</pre> buddy.name Out[47]: <pre>'Buddy'</pre> In\u00a0[48]: Copied! <pre>print(jack)\n</pre> print(jack) <pre>Jack is 3 years old\n</pre> In\u00a0[49]: Copied! <pre>jim.speak(\"Woof\")\n</pre> jim.speak(\"Woof\") Out[49]: <pre>'Jim says Woof'</pre> <p>Para determinar a qual classe um determinado objeto pertence, voc\u00ea pode usar o built-in type():</p> In\u00a0[50]: Copied! <pre>type(miles)\n</pre> type(miles) Out[50]: <pre>__main__.JackRussellTerrier</pre> <p>E se voc\u00ea quiser determinar se miles tamb\u00e9m \u00e9 uma inst\u00e2ncia da classe Dog? Voc\u00ea pode fazer isso com o integrado isinstance():</p> In\u00a0[51]: Copied! <pre>isinstance(miles, Dog)\n</pre> isinstance(miles, Dog) Out[51]: <pre>True</pre> <p>Observe que isinstance() leva dois argumentos, um objeto e uma classe. No exemplo acima, isinstance() verifica se miles \u00e9 uma inst\u00e2ncia da classe Dog e retorna True.</p> <p>Os objetos miles, buddy, jack e jim s\u00e3o todos inst\u00e2ncias dog.py, mas miles n\u00e3o \u00e9 uma inst\u00e2ncia Bulldog e jack n\u00e3o \u00e9 uma inst\u00e2ncia Dachshund:</p> In\u00a0[52]: Copied! <pre>isinstance(miles, Bulldog)\n</pre> isinstance(miles, Bulldog) Out[52]: <pre>False</pre> In\u00a0[53]: Copied! <pre>isinstance(jack, Dachshund)\n</pre> isinstance(jack, Dachshund) Out[53]: <pre>False</pre> <p>De forma mais geral, todos os objetos criados a partir de uma classe filha s\u00e3o inst\u00e2ncias da classe pai, embora possam n\u00e3o ser inst\u00e2ncias de outras classes filhas.</p> <p>Agora que voc\u00ea criou classes filhas para algumas ra\u00e7as diferentes de c\u00e3es, voc\u00ea pode dar a cada ra\u00e7a seu pr\u00f3prio som.</p> <p>Extens\u00e3o de funcionalidade da classe pai</p> <p>Como diferentes ra\u00e7as de c\u00e3es t\u00eam latidos ligeiramente diferentes, voc\u00ea deseja fornecer um valor padr\u00e3o para o soundargumento de seus respectivos .speak()m\u00e9todos. Para fazer isso, voc\u00ea precisa substituir .speak()a defini\u00e7\u00e3o de classe de cada ra\u00e7a.</p> <p>Para substituir um m\u00e9todo definido na classe pai, voc\u00ea define um m\u00e9todo com o mesmo nome na classe filha. Aqui est\u00e1 o que parece para a classe JackRussellTerrier:</p> In\u00a0[54]: Copied! <pre># dog.py\n\n# ...\n\n# class JackRussellTerrier(Dog):\n#    def speak(self, sound=\"Arf\"):\n#        return f\"{self.name} says {sound}\"\n\n# ...\n</pre> # dog.py  # ...  # class JackRussellTerrier(Dog): #    def speak(self, sound=\"Arf\"): #        return f\"{self.name} says {sound}\"  # ... In\u00a0[55]: Copied! <pre># dog.py\n\n# ...\nclass JackRussellTerrier(Dog):\n    def speak(self, sound=\"Arf\"):\n        return f\"{self.name} says {sound}\"\n\nclass Dachshund(Dog):\n    pass\n\nclass Bulldog(Dog):\n    pass\n</pre> # dog.py  # ... class JackRussellTerrier(Dog):     def speak(self, sound=\"Arf\"):         return f\"{self.name} says {sound}\"  class Dachshund(Dog):     pass  class Bulldog(Dog):     pass <p>Agora .speak() \u00e9 definido na classe JackRussellTerrier com o argumento padr\u00e3o para soundset to \"Arf\".</p> <p>Atualize dog.py com a nova classe JackRussellTerrier. Agora voc\u00ea pode chamar .speak() de uma inst\u00e2ncia JackRussellTerrier sem passar um argumento para sound:</p> In\u00a0[56]: Copied! <pre>miles = JackRussellTerrier(\"Miles\", 4)\nmiles.speak()\n</pre> miles = JackRussellTerrier(\"Miles\", 4) miles.speak() Out[56]: <pre>'Miles says Arf'</pre> <p>\u00c0s vezes, os c\u00e3es fazem barulhos diferentes, ent\u00e3o, se Miles ficar com raiva e rosnar, voc\u00ea ainda poder\u00e1 ligar .speak() com um som diferente:</p> In\u00a0[57]: Copied! <pre>miles.speak(\"Grrr\")\n</pre> miles.speak(\"Grrr\") Out[57]: <pre>'Miles says Grrr'</pre> <p>Uma coisa a ter em mente sobre a heran\u00e7a de classe \u00e9 que as altera\u00e7\u00f5es na classe pai se propagam automaticamente para as classes filhas. Isso ocorre desde que o atributo ou m\u00e9todo que est\u00e1 sendo alterado n\u00e3o seja substitu\u00eddo na classe filha.</p> <p>Por exemplo, na janela do editor, altere a string retornada por .speak() na lasse Dog:</p> In\u00a0[58]: Copied! <pre># dog.py\n\nclass Dog:\n    # ...\n\n    def speak(self, sound):\n        return f\"{self.name} barks: {sound}\"\n\n# ...\n</pre> # dog.py  class Dog:     # ...      def speak(self, sound):         return f\"{self.name} barks: {sound}\"  # ... <p>Agora, quando voc\u00ea cria uma nova inst\u00e2ncia Bulldog chamada jim, jim.speak() retorna a nova string:</p> In\u00a0[59]: Copied! <pre>jim = Bulldog(\"Jim\", 5)\njim.speak(\"Woof\")\n</pre> jim = Bulldog(\"Jim\", 5) jim.speak(\"Woof\") Out[59]: <pre>'Jim says Woof'</pre> <p>\u00c0s vezes faz sentido substituir completamente um m\u00e9todo de uma classe pai. Mas neste caso, voc\u00ea n\u00e3o quer que a classe JackRussellTerrier perca quaisquer altera\u00e7\u00f5es que voc\u00ea possa fazer na formata\u00e7\u00e3o string da Dog.speak() de sa\u00edda.</p> <p>Para fazer isso, voc\u00ea ainda precisa definir um m\u00e9todo .speak() na classe filha JackRussellTerrier. Mas em vez de definir explicitamente a string de sa\u00edda, voc\u00ea precisa chamar a classe Dog .speak() de dentro da classe filha .speak() usando os mesmos argumentos que voc\u00ea passou para JackRussellTerrier.speak().</p> <p>Voc\u00ea pode acessar a classe pai de dentro de um m\u00e9todo de uma classe filha usando super():</p> In\u00a0[60]: Copied! <pre># dog.py\n\n# ...\n\nclass JackRussellTerrier(Dog):\n    def speak(self, sound=\"Arf\"):\n        return super().speak(sound)\n\n# ...\n</pre> # dog.py  # ...  class JackRussellTerrier(Dog):     def speak(self, sound=\"Arf\"):         return super().speak(sound)  # ... <p>Quando voc\u00ea chama super().speak(sound) de dentro de JackRussellTerrier, o Python procura um m\u00e9todo Dog.speak() na classe pai, e o chama com a vari\u00e1vel sound.</p> <p>Atualize dog.py com a nova classe JackRussellTerrier.</p> In\u00a0[61]: Copied! <pre>miles = JackRussellTerrier(\"Miles\", 4)\nmiles.speak()\n</pre> miles = JackRussellTerrier(\"Miles\", 4) miles.speak() <pre>\n---------------------------------------------------------------------------\nTypeError                                 Traceback (most recent call last)\nCell In[61], line 1\n----&gt; 1 miles = JackRussellTerrier(\"Miles\", 4)\n      2 miles.speak()\n\nTypeError: JackRussellTerrier() takes no arguments</pre> <p>Agora, ao chamar miles.speak(), voc\u00ea ver\u00e1 a sa\u00edda refletindo a nova formata\u00e7\u00e3o da classe Dog.</p> <p>Nota: Nos exemplos acima, a hierarquia de classes \u00e9 muito direta. A classe JackRussellTerrier tem uma \u00fanica classe pai, Dog. Em exemplos do mundo real, a hierarquia de classes pode ficar bastante complicada.</p> <p>A fun\u00e7\u00e3o super() faz muito mais do que apenas pesquisar um m\u00e9todo ou atributo na classe pai. Ele percorre toda a hierarquia de classes em busca de um m\u00e9todo ou atributo correspondente. Se voc\u00ea n\u00e3o tomar cuidado, super() pode ter resultados surpreendentes.</p> In\u00a0[62]: Copied! <pre># dog.py\nclass Dog:\n    species = \"Canis familiaris\"\n\n    def __init__(self, name, age):\n        self.name = name\n        self.age = age\n\n    def __str__(self):\n        return f\"{self.name} is {self.age} years old\"\n\n    def speak(self, sound):\n        return f\"{self.name} says {sound}\"\n</pre> # dog.py class Dog:     species = \"Canis familiaris\"      def __init__(self, name, age):         self.name = name         self.age = age      def __str__(self):         return f\"{self.name} is {self.age} years old\"      def speak(self, sound):         return f\"{self.name} says {sound}\" In\u00a0[63]: Copied! <pre># Crie uma classe chamada GoldenRetriever que herde da classe Dog e substitua o m\u00e9todo .speak():\n# dog.py\n# ...\nclass GoldenRetriever(Dog):\n    def speak(self, sound=\"Bark\"):\n        return super().speak(sound)\n</pre> # Crie uma classe chamada GoldenRetriever que herde da classe Dog e substitua o m\u00e9todo .speak(): # dog.py # ... class GoldenRetriever(Dog):     def speak(self, sound=\"Bark\"):         return super().speak(sound) In\u00a0[64]: Copied! <pre>amarok = GoldenRetriever('amarok', 3)\namarok.speak()\n</pre> amarok = GoldenRetriever('amarok', 3) amarok.speak() Out[64]: <pre>'amarok says Bark'</pre> <p>Voc\u00ea fornece \"Bark\" como valor padr\u00e3o o par\u00e2metro sound em GoldenRetriever.speak(). Ent\u00e3o voc\u00ea usa super()para chamar o m\u00e9todo .speak() da classe pai com o mesmo argumento passado sound como o m\u00e9todo GoldenRetriever da classe ..speak()</p> <p>Bom trabalho! Nesta se\u00e7\u00e3o, voc\u00ea aprendeu como substituir e estender m\u00e9todos de uma classe pai e trabalhou em um pequeno exemplo pr\u00e1tico para consolidar suas novas habilidades.</p>"},{"location":"modelagem/poo/poo/#o-que-e-programacao-orientada-a-objetos-em-python","title":"O que \u00e9 programa\u00e7\u00e3o orientada a objetos em Python?\u00b6","text":"<p>A programa\u00e7\u00e3o orientada a objetos \u00e9 um paradigma de programa\u00e7\u00e3o que fornece um meio de estruturar programas para que propriedades e comportamentos sejam agrupados em objetos individuais .</p> <p>Por exemplo, um objeto pode representar uma pessoa com propriedades como nome, idade e endere\u00e7o e comportamentos como andar, falar, respirar e correr. Ou pode representar um e-mail com propriedades como lista de destinat\u00e1rios, assunto e corpo e comportamentos como adicionar anexos e enviar.</p> <p>Dito de outra forma, a programa\u00e7\u00e3o orientada a objetos \u00e9 uma abordagem para modelar coisas concretas do mundo real, como carros, bem como rela\u00e7\u00f5es entre coisas, como empresas e funcion\u00e1rios ou estudantes e professores. A OOP modela entidades do mundo real como objetos de software que possuem alguns dados associados a eles e podem realizar determinadas opera\u00e7\u00f5es.</p> <p>A principal conclus\u00e3o \u00e9 que os objetos est\u00e3o no centro da programa\u00e7\u00e3o orientada a objetos em Python. Em outros paradigmas de programa\u00e7\u00e3o, os objetos representam apenas os dados. Na OOP, eles informam adicionalmente a estrutura geral do programa.</p>"},{"location":"modelagem/poo/poo/#como-voce-define-uma-classe-em-python","title":"Como voc\u00ea define uma classe em Python?\u00b6","text":"<p>Em Python, voc\u00ea define uma classe usando a palavra-chave class seguida por um nome e dois pontos. Depois voc\u00ea usa .init() para declarar quais atributos cada inst\u00e2ncia da classe deve ter:</p>"},{"location":"modelagem/poo/poo/#estruturas-de-dados-primitivas","title":"Estruturas de dados primitivas\u00b6","text":"<p>Mas o que tudo isso significa? E por que voc\u00ea precisa de aulas em primeiro lugar? D\u00ea um passo atr\u00e1s e considere o uso de estruturas de dados primitivas integradas como alternativa.</p> <p>Estruturas de dados primitivas \u2014 como n\u00fameros , strings e listas \u2014 s\u00e3o projetadas para representar informa\u00e7\u00f5es simples, como o custo de uma ma\u00e7\u00e3, o nome de um poema ou suas cores favoritas, respectivamente. E se voc\u00ea quiser representar algo mais complexo?</p> <p>Por exemplo, voc\u00ea pode querer rastrear funcion\u00e1rios de uma organiza\u00e7\u00e3o. Voc\u00ea precisa armazenar algumas informa\u00e7\u00f5es b\u00e1sicas sobre cada funcion\u00e1rio, como nome, idade, cargo e ano em que come\u00e7ou a trabalhar.</p> <p>Uma maneira de fazer isso \u00e9 representar cada funcion\u00e1rio como uma lista :</p>"},{"location":"modelagem/poo/poo/#classes-vs-instancias","title":"Classes vs Inst\u00e2ncias\u00b6","text":"<p>As classes permitem criar estruturas de dados definidas pelo usu\u00e1rio. As classes definem fun\u00e7\u00f5es chamadas m\u00e9todos, que identificam os comportamentos e a\u00e7\u00f5es que um objeto criado a partir da classe pode realizar com seus dados.</p> <p>Neste roteiro, voc\u00ea criar\u00e1 uma classe Dog que armazena algumas informa\u00e7\u00f5es sobre as caracter\u00edsticas e comportamentos que um c\u00e3o individual pode ter.</p> <p>Uma classe \u00e9 um modelo de como definir algo. Na verdade, n\u00e3o cont\u00e9m nenhum dado. A classe Dog especifica que um nome e uma idade s\u00e3o necess\u00e1rios para definir um cachorro, mas n\u00e3o cont\u00e9m o nome ou a idade de nenhum cachorro espec\u00edfico.</p> <p>Embora a classe seja o modelo, uma inst\u00e2ncia \u00e9 um objeto constru\u00eddo a partir de uma classe e cont\u00e9m dados reais. Uma inst\u00e2ncia da classe Dog n\u00e3o \u00e9 mais um projeto. \u00c9 um cachorro de verdade com um nome, como Miles, que tem quatro anos.</p> <p>Dito de outra forma, uma classe \u00e9 como um formul\u00e1rio ou question\u00e1rio. Uma inst\u00e2ncia \u00e9 como um formul\u00e1rio que voc\u00ea preencheu com informa\u00e7\u00f5es. Assim como muitas pessoas podem preencher o mesmo formul\u00e1rio com suas pr\u00f3prias informa\u00e7\u00f5es exclusivas, voc\u00ea pode criar muitas inst\u00e2ncias a partir de uma \u00fanica classe.</p>"},{"location":"modelagem/poo/poo/#definicao-de-classe","title":"Defini\u00e7\u00e3o de classe\u00b6","text":"<p>Voc\u00ea inicia todas as defini\u00e7\u00f5es de classe com a palavra-chave class e, em seguida, adiciona o nome da classe e dois pontos. O Python considerar\u00e1 qualquer c\u00f3digo recuado abaixo da defini\u00e7\u00e3o da classe como parte do corpo da classe.</p> <p>Aqui est\u00e1 um exemplo de classe Dog:</p>"},{"location":"modelagem/poo/poo/#como-voce-instancia-uma-classe-em-python","title":"Como voc\u00ea instancia uma classe em Python?\u00b6","text":"<p>Criar um novo objeto a partir de uma classe \u00e9 chamado de instanciar uma classe. Voc\u00ea pode criar um novo objeto digitando o nome da classe, seguido de abertura e fechamento de par\u00eanteses:</p>"},{"location":"modelagem/poo/poo/#atributos-de-classe-e-instancia","title":"Atributos de classe e inst\u00e2ncia\u00b6","text":"<p>Agora crie uma nova classe Dog com um atributo de classe chamado .species e dois atributos de inst\u00e2ncia chamados .name e .age:</p>"},{"location":"modelagem/poo/poo/#metodos-de-instancia","title":"M\u00e9todos de inst\u00e2ncia\u00b6","text":"<p>M\u00e9todos de inst\u00e2ncia s\u00e3o fun\u00e7\u00f5es que voc\u00ea define dentro de uma classe e s\u00f3 podem chamar uma inst\u00e2ncia dessa classe. Assim como .init(), um m\u00e9todo de inst\u00e2ncia sempre leva self como primeiro par\u00e2metro.</p>"},{"location":"modelagem/poo/poo/#exercicio","title":"Exercicio\u00b6","text":""},{"location":"modelagem/poo/poo/#crie-uma-classe-car-com-dois-atributos-de-instancia","title":"Crie uma classe Car com dois atributos de inst\u00e2ncia:\u00b6","text":"<pre><code>.color, que armazena o nome da cor do carro como uma string\n.mileage, que armazena o n\u00famero de milhas do carro como um n\u00famero inteiro</code></pre> <p>Em seguida, crie dois objetos Car \u2013 um carro azul com trinta mil milhas e um carro vermelho com trinta mil milhas \u2013 e imprima suas cores e quilometragem. Sua sa\u00edda deve ficar assim:</p> <p>The blue car has 20,000 miles</p> <p>The red car has 30,000 miles</p> <p>Existem v\u00e1rias maneiras de resolver esse desafio. Para praticar efetivamente o que voc\u00ea aprendeu at\u00e9 agora, tente resolver a tarefa com as informa\u00e7\u00f5es sobre classes em Python que voc\u00ea reuniu nesta se\u00e7\u00e3o.</p> <p>Primeiro, crie uma classe Car com atributos .color e .mileage de inst\u00e2ncia e um m\u00e9todo .str() para formatar a exibi\u00e7\u00e3o de objetos quando voc\u00ea os passa para print():</p>"},{"location":"modelagem/poo/poo/#heranca","title":"Heran\u00e7a\u00b6","text":""},{"location":"modelagem/poo/poo/#como-voce-herda-de-outra-classe-em-python","title":"Como voc\u00ea herda de outra classe em Python?\u00b6","text":"<p>Heran\u00e7a \u00e9 o processo pelo qual uma classe assume os atributos e m\u00e9todos de outra. As classes rec\u00e9m-formadas s\u00e3o chamadas de classes filhas , e as classes das quais voc\u00ea deriva classes filhas s\u00e3o chamadas de classes pai .</p> <p>Voc\u00ea herda de uma classe pai criando uma nova classe e colocando o nome da classe pai entre par\u00eanteses:</p>"},{"location":"modelagem/poo/poo/#classes-pais-vs-classes-filhos","title":"Classes Pais vs Classes Filhos\u00b6","text":"<p>Nesta se\u00e7\u00e3o, voc\u00ea criar\u00e1 uma classe filha para cada uma das tr\u00eas ra\u00e7as mencionadas acima: Jack Russell terrier, dachshund e bulldog.</p> <p>Para refer\u00eancia, aqui est\u00e1 a defini\u00e7\u00e3o completa da Dogclasse com a qual voc\u00ea est\u00e1 trabalhando atualmente:</p>"},{"location":"modelagem/poo/poo/#exercicios","title":"Exerc\u00edcios\u00b6","text":""},{"location":"modelagem/poo/poo/#comece-com-o-seguinte-codigo-para-sua-classe-dog-pai","title":"Comece com o seguinte c\u00f3digo para sua classe Dog pai:\u00b6","text":"<p>Crie uma classe GoldenRetriever que herda da classe Dog. Forne\u00e7a o argumento sound de GoldenRetriever.speak() um valor padr\u00e3o de \"Bark\".</p>"},{"location":"modelagem/poo/pooaula/","title":"Introdu\u00e7\u00e3o ao Python OO","text":"In\u00a0[1]: Copied! <pre>a = 10\nb = 5\nc = a + b\nc\n</pre> a = 10 b = 5 c = a + b c Out[1]: <pre>15</pre> <p>vou tentar de outra forma</p>"},{"location":"modelagem/poo/pooaula/#introducao-ao-python-oo","title":"Introdu\u00e7\u00e3o ao Python OO\u00b6","text":""},{"location":"modelagem/poo/proceduralxpoo/","title":"Proceduralxpoo","text":"In\u00a0[1]: Copied! <pre>### 1. Programa\u00e7\u00e3o Procedural\n\ndef calcular_area(base, altura):\n    \"\"\"Calcula a \u00e1rea de um ret\u00e2ngulo.\n\n    Args:\n        base (float): A base do ret\u00e2ngulo.\n        altura (float): A altura do ret\u00e2ngulo.\n\n    Returns:\n        float: A \u00e1rea do ret\u00e2ngulo.\n    \"\"\"\n\n    area = base * altura\n    return area\n\n# Obtendo os dados do usu\u00e1rio\nbase = float(input(\"Digite a base do ret\u00e2ngulo: \"))\naltura = float(input(\"Digite a altura do ret\u00e2ngulo: \"))\n\n# Calculando a \u00e1rea\nresultado = calcular_area(base, altura)\n\n# Imprimindo o resultado\nprint(\"A \u00e1rea do ret\u00e2ngulo \u00e9:\", resultado)\n</pre> ### 1. Programa\u00e7\u00e3o Procedural  def calcular_area(base, altura):     \"\"\"Calcula a \u00e1rea de um ret\u00e2ngulo.      Args:         base (float): A base do ret\u00e2ngulo.         altura (float): A altura do ret\u00e2ngulo.      Returns:         float: A \u00e1rea do ret\u00e2ngulo.     \"\"\"      area = base * altura     return area  # Obtendo os dados do usu\u00e1rio base = float(input(\"Digite a base do ret\u00e2ngulo: \")) altura = float(input(\"Digite a altura do ret\u00e2ngulo: \"))  # Calculando a \u00e1rea resultado = calcular_area(base, altura)  # Imprimindo o resultado print(\"A \u00e1rea do ret\u00e2ngulo \u00e9:\", resultado) <pre>\n---------------------------------------------------------------------------\nStdinNotImplementedError                  Traceback (most recent call last)\nCell In[1], line 18\n     15     return area\n     17 # Obtendo os dados do usu\u00e1rio\n---&gt; 18 base = float(input(\"Digite a base do ret\u00e2ngulo: \"))\n     19 altura = float(input(\"Digite a altura do ret\u00e2ngulo: \"))\n     21 # Calculando a \u00e1rea\n\nFile C:\\Python310\\lib\\site-packages\\ipykernel\\kernelbase.py:1281, in Kernel.raw_input(self, prompt)\n   1279 if not self._allow_stdin:\n   1280     msg = \"raw_input was called, but this frontend does not support input requests.\"\n-&gt; 1281     raise StdinNotImplementedError(msg)\n   1282 return self._input_request(\n   1283     str(prompt),\n   1284     self._parent_ident[\"shell\"],\n   1285     self.get_parent(\"shell\"),\n   1286     password=False,\n   1287 )\n\nStdinNotImplementedError: raw_input was called, but this frontend does not support input requests.</pre> In\u00a0[2]: Copied! <pre>### 2. Programa\u00e7\u00e3o Orientada a Objetos\n\nclass Retangulo:\n    def __init__(self, base, altura):\n        self.base = base\n        self.altura = altura\n\n    def calcular_area(self):\n        return self.base * self.altura\n\n# Obtendo os dados do usu\u00e1rio\nbase = float(input(\"Digite a base do ret\u00e2ngulo: \"))\naltura = float(input(\"Digite a altura do ret\u00e2ngulo: \"))\n\n# Criando um objeto Retangulo\nretangulo = Retangulo(base, altura)\n\n# Calculando a \u00e1rea\nresultado = retangulo.calcular_area()\n\n# Imprimindo o resultado\nprint(\"A \u00e1rea do ret\u00e2ngulo \u00e9:\", resultado)\n</pre> ### 2. Programa\u00e7\u00e3o Orientada a Objetos  class Retangulo:     def __init__(self, base, altura):         self.base = base         self.altura = altura      def calcular_area(self):         return self.base * self.altura  # Obtendo os dados do usu\u00e1rio base = float(input(\"Digite a base do ret\u00e2ngulo: \")) altura = float(input(\"Digite a altura do ret\u00e2ngulo: \"))  # Criando um objeto Retangulo retangulo = Retangulo(base, altura)  # Calculando a \u00e1rea resultado = retangulo.calcular_area()  # Imprimindo o resultado print(\"A \u00e1rea do ret\u00e2ngulo \u00e9:\", resultado) <pre>\n---------------------------------------------------------------------------\nStdinNotImplementedError                  Traceback (most recent call last)\nCell In[2], line 12\n      9         return self.base * self.altura\n     11 # Obtendo os dados do usu\u00e1rio\n---&gt; 12 base = float(input(\"Digite a base do ret\u00e2ngulo: \"))\n     13 altura = float(input(\"Digite a altura do ret\u00e2ngulo: \"))\n     15 # Criando um objeto Retangulo\n\nFile C:\\Python310\\lib\\site-packages\\ipykernel\\kernelbase.py:1281, in Kernel.raw_input(self, prompt)\n   1279 if not self._allow_stdin:\n   1280     msg = \"raw_input was called, but this frontend does not support input requests.\"\n-&gt; 1281     raise StdinNotImplementedError(msg)\n   1282 return self._input_request(\n   1283     str(prompt),\n   1284     self._parent_ident[\"shell\"],\n   1285     self.get_parent(\"shell\"),\n   1286     password=False,\n   1287 )\n\nStdinNotImplementedError: raw_input was called, but this frontend does not support input requests.</pre> <p>Analisando os Exemplos</p> <ul> <li>Procedural: O c\u00f3digo \u00e9 organizado em uma fun\u00e7\u00e3o <code>calcular_area</code> que realiza o c\u00e1lculo. Os dados s\u00e3o passados como argumentos para a fun\u00e7\u00e3o.</li> <li>Orientado a Objetos: Criamos uma classe <code>Retangulo</code> que representa um ret\u00e2ngulo. A classe possui atributos <code>base</code> e <code>altura</code> e um m\u00e9todo <code>calcular_area</code> para calcular a \u00e1rea.</li> </ul> <p>Quando usar cada paradigma?</p> <ul> <li>Procedural: Ideal para tarefas simples e diretas, onde a organiza\u00e7\u00e3o do c\u00f3digo em fun\u00e7\u00f5es \u00e9 suficiente.</li> <li>Orientado a Objetos: Mais adequado para sistemas complexos, onde a organiza\u00e7\u00e3o do c\u00f3digo em objetos facilita a manuten\u00e7\u00e3o e reutiliza\u00e7\u00e3o.</li> </ul> <p>Outras Considera\u00e7\u00f5es</p> <ul> <li>Encapsulamento: Na POO, os atributos e m\u00e9todos podem ser p\u00fablicos ou privados, controlando o acesso aos dados.</li> <li>Heran\u00e7a: Classes podem herdar atributos e m\u00e9todos de outras classes, promovendo a reutiliza\u00e7\u00e3o de c\u00f3digo.</li> <li>Polimorfismo: Objetos de diferentes classes podem responder de forma diferente ao mesmo m\u00e9todo.</li> </ul> <p>Aplicativos Mais Complexos</p> <p>Para aplicativos mais complexos, como jogos, interfaces gr\u00e1ficas ou sistemas de gerenciamento de dados, a POO geralmente \u00e9 a abordagem preferida devido \u00e0 sua capacidade de modelar o mundo real de forma mais natural.</p> <p>Exerc\u00edcios</p> <ul> <li>Expanda o exemplo: Crie uma classe <code>Circulo</code> com atributos <code>raio</code> e um m\u00e9todo para calcular a \u00e1rea.</li> <li>Implemente um jogo simples: Crie um jogo de adivinha\u00e7\u00e3o usando classes para representar o jogador, o computador e o jogo em si.</li> </ul> In\u00a0[3]: Copied! <pre># Crie uma interface gr\u00e1fica:** Utilize uma biblioteca como Kyvi para criar uma interface gr\u00e1fica para o c\u00e1lculo da \u00e1rea do ret\u00e2ngulo.\n! pip install \"kivy[base]\" kivy_examples\n</pre> # Crie uma interface gr\u00e1fica:** Utilize uma biblioteca como Kyvi para criar uma interface gr\u00e1fica para o c\u00e1lculo da \u00e1rea do ret\u00e2ngulo. ! pip install \"kivy[base]\" kivy_examples <pre>Requirement already satisfied: kivy_examples in f:\\apps\\source\\repos\\24.2\\pbe_24.2_8001\\.venv\\lib\\site-packages (2.3.0)\nRequirement already satisfied: kivy[base] in f:\\apps\\source\\repos\\24.2\\pbe_24.2_8001\\.venv\\lib\\site-packages (2.3.0)\nRequirement already satisfied: Kivy-Garden&gt;=0.1.4 in f:\\apps\\source\\repos\\24.2\\pbe_24.2_8001\\.venv\\lib\\site-packages (from kivy[base]) (0.1.5)\nRequirement already satisfied: docutils in f:\\apps\\source\\repos\\24.2\\pbe_24.2_8001\\.venv\\lib\\site-packages (from kivy[base]) (0.21.2)\nRequirement already satisfied: pygments in f:\\apps\\source\\repos\\24.2\\pbe_24.2_8001\\.venv\\lib\\site-packages (from kivy[base]) (2.18.0)\nRequirement already satisfied: kivy-deps.angle~=0.4.0 in f:\\apps\\source\\repos\\24.2\\pbe_24.2_8001\\.venv\\lib\\site-packages (from kivy[base]) (0.4.0)\nRequirement already satisfied: kivy-deps.sdl2~=0.7.0 in f:\\apps\\source\\repos\\24.2\\pbe_24.2_8001\\.venv\\lib\\site-packages (from kivy[base]) (0.7.0)\nRequirement already satisfied: kivy-deps.glew~=0.3.1 in f:\\apps\\source\\repos\\24.2\\pbe_24.2_8001\\.venv\\lib\\site-packages (from kivy[base]) (0.3.1)\nRequirement already satisfied: pypiwin32 in f:\\apps\\source\\repos\\24.2\\pbe_24.2_8001\\.venv\\lib\\site-packages (from kivy[base]) (223)\nRequirement already satisfied: pillow&lt;11,&gt;=9.5.0 in f:\\apps\\source\\repos\\24.2\\pbe_24.2_8001\\.venv\\lib\\site-packages (from kivy[base]) (10.4.0)\nRequirement already satisfied: requests in f:\\apps\\source\\repos\\24.2\\pbe_24.2_8001\\.venv\\lib\\site-packages (from kivy[base]) (2.32.3)\nRequirement already satisfied: pywin32&gt;=223 in f:\\apps\\source\\repos\\24.2\\pbe_24.2_8001\\.venv\\lib\\site-packages (from pypiwin32-&gt;kivy[base]) (306)\nRequirement already satisfied: charset-normalizer&lt;4,&gt;=2 in f:\\apps\\source\\repos\\24.2\\pbe_24.2_8001\\.venv\\lib\\site-packages (from requests-&gt;kivy[base]) (3.3.2)\nRequirement already satisfied: idna&lt;4,&gt;=2.5 in f:\\apps\\source\\repos\\24.2\\pbe_24.2_8001\\.venv\\lib\\site-packages (from requests-&gt;kivy[base]) (3.10)\nRequirement already satisfied: urllib3&lt;3,&gt;=1.21.1 in f:\\apps\\source\\repos\\24.2\\pbe_24.2_8001\\.venv\\lib\\site-packages (from requests-&gt;kivy[base]) (2.2.3)\nRequirement already satisfied: certifi&gt;=2017.4.17 in f:\\apps\\source\\repos\\24.2\\pbe_24.2_8001\\.venv\\lib\\site-packages (from requests-&gt;kivy[base]) (2024.8.30)\n</pre> In\u00a0[4]: Copied! <pre>from kivy.app import App\nfrom kivy.uix.boxlayout import BoxLayout\nfrom kivy.uix.label import Label\nfrom kivy.uix.textinput import TextInput\nfrom kivy.uix.button import Button\n\nclass Retangulo:\n    def __init__(self, base, altura):\n        self.base = base\n        self.altura = altura\n\n    def calcular_area(self):\n        return self.base * self.altura\n\nclass CalculadoraAreaApp(App):\n    def build(self):\n        layout = BoxLayout(orientation='vertical')\n        self.base_input = TextInput(multiline=False)\n        self.altura_input = TextInput(multiline=False)\n        self.resultado_label = Label(text='Resultado:')\n        calcular_button = Button(text='Calcular')\n        calcular_button.bind(on_press=self.calcular_area)\n        layout.add_widget(self.base_input)\n        layout.add_widget(self.altura_input)\n        layout.add_widget(calcular_button)\n        layout.add_widget(self.resultado_label)\n        return layout\n\n    def calcular_area(self, instance):\n        try:\n            base = float(self.base_input.text)\n            altura = float(self.altura_input.text)\n            retangulo = Retangulo(base, altura)\n            resultado = retangulo.calcular_area()\n            self.resultado_label.text = f'A \u00e1rea \u00e9: {resultado}'\n        except ValueError:\n            self.resultado_label.text = 'Digite valores num\u00e9ricos.'\n\nif __name__ == '__main__':\n    CalculadoraAreaApp().run()\n</pre> from kivy.app import App from kivy.uix.boxlayout import BoxLayout from kivy.uix.label import Label from kivy.uix.textinput import TextInput from kivy.uix.button import Button  class Retangulo:     def __init__(self, base, altura):         self.base = base         self.altura = altura      def calcular_area(self):         return self.base * self.altura  class CalculadoraAreaApp(App):     def build(self):         layout = BoxLayout(orientation='vertical')         self.base_input = TextInput(multiline=False)         self.altura_input = TextInput(multiline=False)         self.resultado_label = Label(text='Resultado:')         calcular_button = Button(text='Calcular')         calcular_button.bind(on_press=self.calcular_area)         layout.add_widget(self.base_input)         layout.add_widget(self.altura_input)         layout.add_widget(calcular_button)         layout.add_widget(self.resultado_label)         return layout      def calcular_area(self, instance):         try:             base = float(self.base_input.text)             altura = float(self.altura_input.text)             retangulo = Retangulo(base, altura)             resultado = retangulo.calcular_area()             self.resultado_label.text = f'A \u00e1rea \u00e9: {resultado}'         except ValueError:             self.resultado_label.text = 'Digite valores num\u00e9ricos.'  if __name__ == '__main__':     CalculadoraAreaApp().run() <pre>\n---------------------------------------------------------------------------\nModuleNotFoundError                       Traceback (most recent call last)\nCell In[4], line 1\n----&gt; 1 from kivy.app import App\n      2 from kivy.uix.boxlayout import BoxLayout\n      3 from kivy.uix.label import Label\n\nModuleNotFoundError: No module named 'kivy'</pre> In\u00a0[5]: Copied! <pre>### 1. Programa\u00e7\u00e3o Procedural\n\ndef criar_personagem():\n    nome = input(\"Digite o nome do seu personagem: \")\n    classe = input(\"Digite a classe do seu personagem: \")\n    vida = 100\n    mana = 50\n    return nome, classe, vida, mana\n\ndef atacar(vida_inimigo):\n    dano = 10\n    vida_inimigo -= dano\n    print(\"Voc\u00ea causou 10 de dano ao inimigo!\")\n\n# Criar o personagem\nnome, classe, vida, mana = criar_personagem()\n\n# Combate\nvida_inimigo = 100\nwhile vida &gt; 0 and vida_inimigo &gt; 0:\n    acao = input(\"O que voc\u00ea deseja fazer? (atacar/defender): \")\n    if acao == \"atacar\":\n        atacar(vida_inimigo)\n    # ... outras a\u00e7\u00f5es\n\nprint(\"Fim do jogo!\")\n</pre> ### 1. Programa\u00e7\u00e3o Procedural  def criar_personagem():     nome = input(\"Digite o nome do seu personagem: \")     classe = input(\"Digite a classe do seu personagem: \")     vida = 100     mana = 50     return nome, classe, vida, mana  def atacar(vida_inimigo):     dano = 10     vida_inimigo -= dano     print(\"Voc\u00ea causou 10 de dano ao inimigo!\")  # Criar o personagem nome, classe, vida, mana = criar_personagem()  # Combate vida_inimigo = 100 while vida &gt; 0 and vida_inimigo &gt; 0:     acao = input(\"O que voc\u00ea deseja fazer? (atacar/defender): \")     if acao == \"atacar\":         atacar(vida_inimigo)     # ... outras a\u00e7\u00f5es  print(\"Fim do jogo!\") <pre>\n---------------------------------------------------------------------------\nStdinNotImplementedError                  Traceback (most recent call last)\nCell In[5], line 16\n     13     print(\"Voc\u00ea causou 10 de dano ao inimigo!\")\n     15 # Criar o personagem\n---&gt; 16 nome, classe, vida, mana = criar_personagem()\n     18 # Combate\n     19 vida_inimigo = 100\n\nCell In[5], line 4, in criar_personagem()\n      3 def criar_personagem():\n----&gt; 4     nome = input(\"Digite o nome do seu personagem: \")\n      5     classe = input(\"Digite a classe do seu personagem: \")\n      6     vida = 100\n\nFile C:\\Python310\\lib\\site-packages\\ipykernel\\kernelbase.py:1281, in Kernel.raw_input(self, prompt)\n   1279 if not self._allow_stdin:\n   1280     msg = \"raw_input was called, but this frontend does not support input requests.\"\n-&gt; 1281     raise StdinNotImplementedError(msg)\n   1282 return self._input_request(\n   1283     str(prompt),\n   1284     self._parent_ident[\"shell\"],\n   1285     self.get_parent(\"shell\"),\n   1286     password=False,\n   1287 )\n\nStdinNotImplementedError: raw_input was called, but this frontend does not support input requests.</pre> In\u00a0[6]: Copied! <pre>### 2. Programa\u00e7\u00e3o Orientada a Objetos\n\nclass Personagem:\n    def __init__(self, nome, classe, vida=100, mana=50):\n        self.nome = nome\n        self.classe = classe\n        self.vida = vida\n        self.mana = mana\n\n    def atacar(self, inimigo):\n        dano = 10\n        inimigo.vida -= dano\n        print(f\"{self.nome} causou 10 de dano a {inimigo.nome}!\")\n\n# Criar os personagens\njogador = Personagem(\"Her\u00f3i\", \"Guerreiro\")\ninimigo = Personagem(\"Minotauro\", \"B\u00e1rbaro\")\n\n# Combate\nwhile jogador.vida &gt; 0 and inimigo.vida &gt; 0:\n    acao = input(\"O que voc\u00ea deseja fazer? (atacar/defender): \")\n    if acao == \"atacar\":\n        jogador.atacar(inimigo)\n    # ... outras a\u00e7\u00f5es\n\nprint(\"Fim do jogo!\")\n</pre> ### 2. Programa\u00e7\u00e3o Orientada a Objetos  class Personagem:     def __init__(self, nome, classe, vida=100, mana=50):         self.nome = nome         self.classe = classe         self.vida = vida         self.mana = mana      def atacar(self, inimigo):         dano = 10         inimigo.vida -= dano         print(f\"{self.nome} causou 10 de dano a {inimigo.nome}!\")  # Criar os personagens jogador = Personagem(\"Her\u00f3i\", \"Guerreiro\") inimigo = Personagem(\"Minotauro\", \"B\u00e1rbaro\")  # Combate while jogador.vida &gt; 0 and inimigo.vida &gt; 0:     acao = input(\"O que voc\u00ea deseja fazer? (atacar/defender): \")     if acao == \"atacar\":         jogador.atacar(inimigo)     # ... outras a\u00e7\u00f5es  print(\"Fim do jogo!\") <pre>\n---------------------------------------------------------------------------\nStdinNotImplementedError                  Traceback (most recent call last)\nCell In[6], line 21\n     19 # Combate\n     20 while jogador.vida &gt; 0 and inimigo.vida &gt; 0:\n---&gt; 21     acao = input(\"O que voc\u00ea deseja fazer? (atacar/defender): \")\n     22     if acao == \"atacar\":\n     23         jogador.atacar(inimigo)\n\nFile C:\\Python310\\lib\\site-packages\\ipykernel\\kernelbase.py:1281, in Kernel.raw_input(self, prompt)\n   1279 if not self._allow_stdin:\n   1280     msg = \"raw_input was called, but this frontend does not support input requests.\"\n-&gt; 1281     raise StdinNotImplementedError(msg)\n   1282 return self._input_request(\n   1283     str(prompt),\n   1284     self._parent_ident[\"shell\"],\n   1285     self.get_parent(\"shell\"),\n   1286     password=False,\n   1287 )\n\nStdinNotImplementedError: raw_input was called, but this frontend does not support input requests.</pre> <p>An\u00e1lise:</p> <ul> <li>Procedural: O c\u00f3digo \u00e9 dividido em fun\u00e7\u00f5es que realizam tarefas espec\u00edficas. Os dados do personagem s\u00e3o armazenados em vari\u00e1veis globais ou passados como argumentos para as fun\u00e7\u00f5es.</li> <li>Orientado a Objetos: O personagem \u00e9 representado por uma classe <code>Personagem</code>, com atributos e m\u00e9todos. As a\u00e7\u00f5es do personagem s\u00e3o realizadas atrav\u00e9s dos m\u00e9todos da classe.</li> </ul> <p>Vantagens da POO neste exemplo:</p> <ul> <li>Reutiliza\u00e7\u00e3o de c\u00f3digo: A classe <code>Personagem</code> pode ser reutilizada para criar outros personagens com diferentes atributos.</li> <li>Organiza\u00e7\u00e3o: O c\u00f3digo fica mais organizado e f\u00e1cil de entender, pois cada parte do personagem (atributos e a\u00e7\u00f5es) est\u00e1 encapsulada na classe.</li> <li>Extensibilidade: \u00c9 mais f\u00e1cil adicionar novas funcionalidades ao jogo, como novas classes de personagens ou habilidades.</li> </ul> <p>Considera\u00e7\u00f5es:</p> <ul> <li>Complexidade: Para jogos mais complexos, a POO \u00e9 essencial para gerenciar a quantidade de dados e intera\u00e7\u00f5es entre os objetos.</li> <li>Aprendizado: A POO pode exigir um pouco mais de tempo para aprender, mas os benef\u00edcios a longo prazo s\u00e3o significativos.</li> </ul> <p>Pr\u00f3ximos passos:</p> <ul> <li>Expans\u00e3o do jogo: Adicione mais classes, como itens, magias e inimigos.</li> <li>Interface gr\u00e1fica: Utilize uma biblioteca como Pygame para criar uma interface gr\u00e1fica para o jogo.</li> <li>Sistema de combate: Implemente um sistema de combate mais complexo, com diferentes tipos de ataques e defesas.</li> </ul> <p>Poss\u00edveis t\u00f3picos:</p> <ul> <li>Heran\u00e7a: Crie classes derivadas de <code>Personagem</code> para representar diferentes tipos de personagens (mago, arqueiro, etc.).</li> <li>Encapsulamento: Proteja os atributos da classe para evitar modifica\u00e7\u00f5es indesejadas.</li> </ul> <p>Lembre-se: A escolha entre programa\u00e7\u00e3o procedural e orientada a objetos depende do contexto e da complexidade do problema. Em muitos casos, a combina\u00e7\u00e3o de ambos os paradigmas pode levar a solu\u00e7\u00f5es mais elegantes e eficientes.</p> In\u00a0[7]: Copied! <pre>class Personagem:\n    def __init__(self, nome, classe, vida=100, mana=50):\n        self.nome = nome\n        self.classe = classe\n        self.vida = vida\n        self.mana = mana\n\n    def atacar(self, inimigo):\n        dano = 10\n        inimigo.vida -= dano\n        print(f\"{self.nome} causou {dano} de dano a {inimigo.nome}!\")\n\nclass Mago(Personagem):\n    def __init__(self, nome):\n        super().__init__(nome, \"Mago\", mana=100)\n\n    def lan\u00e7ar_magia(self, inimigo):\n        if self.mana &gt;= 20:\n            dano = 15\n            self.mana -= 20\n            inimigo.vida -= dano\n            print(f\"{self.nome} lan\u00e7ou uma magia, causando {dano} de dano a {inimigo.nome}!\")\n        else:\n            print(f\"{self.nome} n\u00e3o tem mana suficiente para lan\u00e7ar uma magia.\")\n\nclass Arqueiro(Personagem):\n    def __init__(self, nome):\n        super().__init__(nome, \"Arqueiro\")\n\n    def atirar(self, inimigo):\n        dano = 12\n        inimigo.vida -= dano\n        print(f\"{self.nome} atirou uma flecha, causando {dano} de dano a {inimigo.nome}!\")\n</pre> class Personagem:     def __init__(self, nome, classe, vida=100, mana=50):         self.nome = nome         self.classe = classe         self.vida = vida         self.mana = mana      def atacar(self, inimigo):         dano = 10         inimigo.vida -= dano         print(f\"{self.nome} causou {dano} de dano a {inimigo.nome}!\")  class Mago(Personagem):     def __init__(self, nome):         super().__init__(nome, \"Mago\", mana=100)      def lan\u00e7ar_magia(self, inimigo):         if self.mana &gt;= 20:             dano = 15             self.mana -= 20             inimigo.vida -= dano             print(f\"{self.nome} lan\u00e7ou uma magia, causando {dano} de dano a {inimigo.nome}!\")         else:             print(f\"{self.nome} n\u00e3o tem mana suficiente para lan\u00e7ar uma magia.\")  class Arqueiro(Personagem):     def __init__(self, nome):         super().__init__(nome, \"Arqueiro\")      def atirar(self, inimigo):         dano = 12         inimigo.vida -= dano         print(f\"{self.nome} atirou uma flecha, causando {dano} de dano a {inimigo.nome}!\") In\u00a0[8]: Copied! <pre># Como usar\n\nmago = Mago(\"Gandalf\")\narqueiro = Arqueiro(\"Legolas\")\n\nmago.lan\u00e7ar_magia(inimigo)\narqueiro.atirar(inimigo)\n</pre> # Como usar  mago = Mago(\"Gandalf\") arqueiro = Arqueiro(\"Legolas\")  mago.lan\u00e7ar_magia(inimigo) arqueiro.atirar(inimigo) <pre>Gandalf lan\u00e7ou uma magia, causando 15 de dano a Minotauro!\nLegolas atirou uma flecha, causando 12 de dano a Minotauro!\n</pre> In\u00a0[9]: Copied! <pre>class Personagem:\n    def __init__(self, nome, classe, vida=100, mana=50):\n        self._nome = nome\n        self._classe = classe\n        self._vida = vida\n        self._mana = mana\n\n    def get_nome(self):\n        return self._nome\n\n    def get_classe(self):\n        return self._classe\n\n    def get_vida(self):\n        return self._vida\n\n    def set_vida(self, nova_vida):\n        if nova_vida &gt;= 0:\n            self._vida = nova_vida\n        else:\n            print(\"A vida n\u00e3o pode ser negativa.\")\n\n    def get_mana(self):\n        return self._mana\n\n    def set_mana(self, nova_mana):\n        if nova_mana &gt;= 0:\n            self._mana = nova_mana\n        else:\n            print(\"A mana n\u00e3o pode ser negativa.\")\n\n    def atacar(self, inimigo):\n        dano = 10\n        inimigo.set_vida(inimigo.get_vida() - dano)\n        print(f\"{self.get_nome()} causou {dano} de dano a {inimigo.get_nome()}!\")\n\n    def receber_dano(self, dano):\n        nova_vida = self.get_vida() - dano\n        self.set_vida(nova_vida)\n</pre> class Personagem:     def __init__(self, nome, classe, vida=100, mana=50):         self._nome = nome         self._classe = classe         self._vida = vida         self._mana = mana      def get_nome(self):         return self._nome      def get_classe(self):         return self._classe      def get_vida(self):         return self._vida      def set_vida(self, nova_vida):         if nova_vida &gt;= 0:             self._vida = nova_vida         else:             print(\"A vida n\u00e3o pode ser negativa.\")      def get_mana(self):         return self._mana      def set_mana(self, nova_mana):         if nova_mana &gt;= 0:             self._mana = nova_mana         else:             print(\"A mana n\u00e3o pode ser negativa.\")      def atacar(self, inimigo):         dano = 10         inimigo.set_vida(inimigo.get_vida() - dano)         print(f\"{self.get_nome()} causou {dano} de dano a {inimigo.get_nome()}!\")      def receber_dano(self, dano):         nova_vida = self.get_vida() - dano         self.set_vida(nova_vida) <p>Analisando as mudan\u00e7as:</p> <ul> <li>Atributos privados: Os atributos <code>_vida</code> e <code>_mana</code> agora s\u00e3o precedidos por um underscore, indicando que s\u00e3o privados e devem ser acessados apenas atrav\u00e9s dos m\u00e9todos getters e setters.</li> <li>M\u00e9todos getters e setters: Foram adicionados m\u00e9todos <code>get_vida</code>, <code>set_vida</code>, <code>get_mana</code> e <code>set_mana</code> para controlar o acesso aos atributos.</li> <li>Valida\u00e7\u00e3o: Os m\u00e9todos <code>set_vida</code> e <code>set_mana</code> verificam se o novo valor \u00e9 v\u00e1lido antes de atribu\u00ed-lo ao atributo.</li> <li>M\u00e9todo receber_dano: Foi criado um m\u00e9todo <code>receber_dano</code> para encapsular a l\u00f3gica de redu\u00e7\u00e3o da vida do personagem, utilizando os m\u00e9todos getters e setters.</li> </ul> <p>Vantagens do encapsulamento:</p> <ul> <li>Integridade dos dados: Evita que a vida ou a mana do personagem sejam definidas como valores negativos.</li> <li>Flexibilidade: Permite adicionar mais valida\u00e7\u00f5es ou l\u00f3gica aos m\u00e9todos getters e setters no futuro, sem afetar o c\u00f3digo que utiliza a classe.</li> <li>Manutenibilidade: Facilita a manuten\u00e7\u00e3o do c\u00f3digo, pois as regras de neg\u00f3cio est\u00e3o centralizadas nos m\u00e9todos getters e setters.</li> <li>Seguran\u00e7a: Protege os dados internos da classe de modifica\u00e7\u00f5es acidentais.</li> </ul> <p>Exemplo de uso:</p> In\u00a0[10]: Copied! <pre># Como usar\n\npersonagem = Personagem(\"Her\u00f3i\", \"Guerreiro\")\nprint(personagem.get_vida())  # Imprime: 100\n\n# Tentativa de modificar a vida diretamente (n\u00e3o recomendado)\n# personagem._vida = -10  # Isso causaria um erro\n\n# Forma correta de modificar a vida\npersonagem.set_vida(80)\nprint(personagem.get_vida())  # Imprime: 80\n</pre> # Como usar  personagem = Personagem(\"Her\u00f3i\", \"Guerreiro\") print(personagem.get_vida())  # Imprime: 100  # Tentativa de modificar a vida diretamente (n\u00e3o recomendado) # personagem._vida = -10  # Isso causaria um erro  # Forma correta de modificar a vida personagem.set_vida(80) print(personagem.get_vida())  # Imprime: 80 <pre>100\n80\n</pre> <p>Pr\u00f3ximos passos:</p> <ul> <li>Mais valida\u00e7\u00f5es: Adicione mais valida\u00e7\u00f5es aos m\u00e9todos getters e setters para garantir a consist\u00eancia dos dados.</li> <li>Eventos: Implemente um sistema de eventos para notificar quando a vida ou a mana de um personagem atingem um determinado valor.</li> <li>Propriedades: Explore o uso de propriedades em Python para tornar o acesso aos atributos mais intuitivo.</li> </ul> <p>Com o encapsulamento, voc\u00ea ter\u00e1 um c\u00f3digo mais robusto, seguro e f\u00e1cil de manter.</p>"},{"location":"modelagem/poo/proceduralxpoo/#comparando-aplicativos-procedural-vs-orientado-a-objetos","title":"Comparando Aplicativos: Procedural vs. Orientado a Objetos\u00b6","text":"<p>Entendendo os Paradigmas</p> <p>Antes de come\u00e7armos a criar os aplicativos, vamos entender brevemente a diferen\u00e7a entre programa\u00e7\u00e3o procedural e orientada a objetos:</p> <ul> <li>Programa\u00e7\u00e3o Procedural: Foca em uma sequ\u00eancia de passos para realizar uma tarefa. O c\u00f3digo \u00e9 organizado em fun\u00e7\u00f5es que realizam a\u00e7\u00f5es espec\u00edficas.</li> <li>Programa\u00e7\u00e3o Orientada a Objetos: Organiza o c\u00f3digo em objetos que representam entidades do mundo real. Cada objeto possui atributos (caracter\u00edsticas) e m\u00e9todos (a\u00e7\u00f5es).</li> </ul> <p>Exemplo: C\u00e1lculo de \u00c1rea de um Ret\u00e2ngulo</p> <p>Vamos criar um aplicativo simples que calcula a \u00e1rea de um ret\u00e2ngulo usando ambos os paradigmas.</p>"},{"location":"modelagem/poo/proceduralxpoo/#vamos-criar-um-exemplo-mais-complexo-simulando-um-jogo-de-rpg-simples","title":"Vamos criar um exemplo mais complexo: Simulando um jogo de RPG simples\u00b6","text":"<p>Contexto:</p> <p>Imagine que queremos criar um jogo de RPG b\u00e1sico, onde o jogador possui um personagem com atributos como nome, classe, pontos de vida e mana. O personagem pode atacar, defender e usar habilidades.</p>"},{"location":"modelagem/poo/proceduralxpoo/#protegendo-os-atributos-da-classe-personagem","title":"Protegendo os Atributos da Classe Personagem\u00b6","text":"<p>A prote\u00e7\u00e3o dos atributos \u00e9 fundamental para garantir a integridade dos dados e evitar comportamentos inesperados em nossos programas.</p> <p>Como aplicar o encapsulamento na classe Personagem:</p> <p>Vamos adaptar o c\u00f3digo da classe Personagem para proteger os atributos <code>vida</code> e <code>mana</code>, permitindo apenas modifica\u00e7\u00f5es atrav\u00e9s dos m\u00e9todos <code>set_vida</code> e <code>set_mana</code>. Isso nos dar\u00e1 controle sobre como esses valores s\u00e3o alterados, evitando que sejam atribu\u00eddos valores inv\u00e1lidos ou inconsistentes.</p>"}]}